QSPY host application 4.1.00
Copyright (c) Quantum Leaps, LLC.
Sun Nov 22 23:54:32 2009

-T 4
-O 4
-F 4
-S 2
-E 4
-Q 4
-P 4
-B 4
-C 4

           Obj Dic: 08052220->l_smlPoolSto
           Obj Dic: 08052140->l_tableQueueSto
           Obj Dic: 08052160->l_philoQueueSto[0]
           Obj Dic: 08052174->l_philoQueueSto[1]
           Obj Dic: 08052188->l_philoQueueSto[2]
           Obj Dic: 0805219C->l_philoQueueSto[3]
           Obj Dic: 080521B0->l_philoQueueSto[4]
           MP.INIT: Obj=l_smlPoolSto nBlocks=  10
           EQ.INIT: Obj=l_philoQueueSto[0] Len= 5
0000030000 AO.ADD : Active=080532C0 Prio= 1
           Obj Dic: 080532C0->&l_philo[0]
           Obj Dic: 0805331C->&l_philo[0].m_timeEvt
           Obj Dic: 08053334->&l_philo[1]
           Obj Dic: 08053390->&l_philo[1].m_timeEvt
           Obj Dic: 080533A8->&l_philo[2]
           Obj Dic: 08053404->&l_philo[2].m_timeEvt
           Obj Dic: 0805341C->&l_philo[3]
           Obj Dic: 08053478->&l_philo[3].m_timeEvt
           Obj Dic: 08053490->&l_philo[4]
           Obj Dic: 080534EC->&l_philo[4].m_timeEvt
           Fun Dic: 08049B4C->&Philo::initial
           Fun Dic: 0804A122->&Philo::thinking
           Fun Dic: 0804A1D8->&Philo::hungry
           Fun Dic: 0804A2E0->&Philo::eating
           Sig Dic: 00000008,Obj=080532C0 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=080532C0 ->TIMEOUT_SIG
0000030000 AO.SUB : Active=l_philo[0] Sig=00000004,Obj=080532C0
           Q_INIT : Obj=l_philo[0] Source=0804D248 Target=Philo::thinking
0000030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000030000 ==>Init: Obj=l_philo[0] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[1] Len= 5
0000040000 AO.ADD : Active=l_philo[1] Prio= 2
           Sig Dic: 00000008,Obj=08053334 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08053334 ->TIMEOUT_SIG
0000040000 AO.SUB : Active=l_philo[1] Sig=00000004,Obj=08053334
           Q_INIT : Obj=l_philo[1] Source=0804D248 Target=Philo::thinking
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Init: Obj=l_philo[1] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[2] Len= 5
0000040000 AO.ADD : Active=l_philo[2] Prio= 3
           Sig Dic: 00000008,Obj=080533A8 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=080533A8 ->TIMEOUT_SIG
0000040000 AO.SUB : Active=l_philo[2] Sig=00000004,Obj=080533A8
           Q_INIT : Obj=l_philo[2] Source=0804D248 Target=Philo::thinking
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Init: Obj=l_philo[2] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[3] Len= 5
0000040000 AO.ADD : Active=l_philo[3] Prio= 4
           Sig Dic: 00000008,Obj=0805341C ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=0805341C ->TIMEOUT_SIG
0000040000 AO.SUB : Active=l_philo[3] Sig=00000004,Obj=0805341C
           Q_INIT : Obj=l_philo[3] Source=0804D248 Target=Philo::thinking
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Init: Obj=l_philo[3] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[4] Len= 5
0000040000 AO.ADD : Active=l_philo[4] Prio= 5
           Sig Dic: 00000008,Obj=08053490 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08053490 ->TIMEOUT_SIG
0000040000 AO.SUB : Active=l_philo[4] Sig=00000004,Obj=08053490
           Q_INIT : Obj=l_philo[4] Source=0804D248 Target=Philo::thinking
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Init: Obj=l_philo[4] New=Philo::thinking
           EQ.INIT: Obj=l_tableQueueSto Len= 5
0000040000 AO.ADD : Active=08053520 Prio= 6
           Obj Dic: 08053520->&l_table
           Fun Dic: 0804D248->&QHsm::top
           Fun Dic: 0804A6B8->&Table::initial
           Fun Dic: 0804A9E2->&Table::serving
           Sig Dic: 00000005,Obj=00000000 ->DONE_SIG
           Sig Dic: 00000004,Obj=00000000 ->EAT_SIG
           Sig Dic: 00000006,Obj=00000000 ->TERMINATE_SIG
           Sig Dic: 00000008,Obj=08053520 ->HUNGRY_SIG
0000040000 AO.SUB : Active=l_table Sig=DONE_SIG
0000040000 AO.SUB : Active=l_table Sig=TERMINATE_SIG
           Q_INIT : Obj=l_table Source=QHsm::top Target=Table::serving
0000040000 ==>Init: Obj=l_table New=Table::serving
           TICK   : Ctr=         1
           TICK   : Ctr=         2
           TICK   : Ctr=         3
           TICK   : Ctr=         4
           TICK   : Ctr=         5
           TICK   : Ctr=         6
           TICK   : Ctr=         7
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   9
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   8
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  5)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  5)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  5)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GET : Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   8
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GET : Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   8
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  4, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  4, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GET : Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  4)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GET : Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000040000 AO.GET : Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  4)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GET : Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=         8
           TICK   : Ctr=         9
           TICK   : Ctr=        10
           TICK   : Ctr=        11
           TICK   : Ctr=        12
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GET : Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GET : Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GET : Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GET : Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        13
           TICK   : Ctr=        14
           TICK   : Ctr=        15
           TICK   : Ctr=        16
           TICK   : Ctr=        17
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        18
           TICK   : Ctr=        19
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GET : Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        20
           TICK   : Ctr=        21
           TICK   : Ctr=        22
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        23
           TICK   : Ctr=        24
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        25
           TICK   : Ctr=        26
           TICK   : Ctr=        27
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        28
           TICK   : Ctr=        29
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        30
           TICK   : Ctr=        31
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        32
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        33
           TICK   : Ctr=        34
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        35
           TICK   : Ctr=        36
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        37
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        38
           TICK   : Ctr=        39
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        40
           TICK   : Ctr=        41
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        42
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        43
           TICK   : Ctr=        44
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        45
           TICK   : Ctr=        46
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        47
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        48
           TICK   : Ctr=        49
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        50
           TICK   : Ctr=        51
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        52
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        53
           TICK   : Ctr=        54
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 1 thinking 
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 2 hungry   
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 2 eating   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        55
           TICK   : Ctr=        56
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 0 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        57
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 4 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 0 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        58
           TICK   : Ctr=        59
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 3 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 2 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 3 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        60
           TICK   : Ctr=        61
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 1 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        62
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 0 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 1 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        63
           TICK   : Ctr=        64
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 4 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 3 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 4 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        65
           TICK   : Ctr=        66
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 2 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        67
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 1 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 2 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
           TICK   : Ctr=        68
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        69
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 0 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 4 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 0 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        70
           TICK   : Ctr=        71
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        72
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        73
           TICK   : Ctr=        74
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        75
           TICK   : Ctr=        76
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        77
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        78
           TICK   : Ctr=        79
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        80
           TICK   : Ctr=        81
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        82
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        83
           TICK   : Ctr=        84
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        85
           TICK   : Ctr=        86
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        87
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        88
           TICK   : Ctr=        89
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        90
           TICK   : Ctr=        91
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        92
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        93
           TICK   : Ctr=        94
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        95
           TICK   : Ctr=        96
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        97
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=        98
           TICK   : Ctr=        99
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       100
           TICK   : Ctr=       101
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       102
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       103
           TICK   : Ctr=       104
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       105
           TICK   : Ctr=       106
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       107
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       108
           TICK   : Ctr=       109
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       110
           TICK   : Ctr=       111
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 1 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       112
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 0 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 1 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       113
           TICK   : Ctr=       114
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 4 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 3 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 4 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       115
           TICK   : Ctr=       116
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 2 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       117
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 1 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 2 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       118
           TICK   : Ctr=       119
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 0 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 4 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 0 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       120
           TICK   : Ctr=       121
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 3 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       122
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 2 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 3 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       123
           TICK   : Ctr=       124
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 1 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 0 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 1 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       125
           TICK   : Ctr=       126
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 4 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       127
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 3 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 4 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       128
           TICK   : Ctr=       129
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 2 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 1 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 2 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       130
           TICK   : Ctr=       131
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 0 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       132
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 4 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 0 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       133
           TICK   : Ctr=       134
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 3 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 2 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 3 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
           TICK   : Ctr=       135
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       136
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 1 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       137
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 0 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 1 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       138
           TICK   : Ctr=       139
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 4 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 3 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 4 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       140
           TICK   : Ctr=       141
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 2 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       142
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 1 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 2 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       143
           TICK   : Ctr=       144
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 0 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 4 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 0 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       145
           TICK   : Ctr=       146
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 3 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       147
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       148
           TICK   : Ctr=       149
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       150
           TICK   : Ctr=       151
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       152
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       153
           TICK   : Ctr=       154
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       155
           TICK   : Ctr=       156
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       157
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       158
           TICK   : Ctr=       159
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       160
           TICK   : Ctr=       161
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       162
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       163
           TICK   : Ctr=       164
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       165
           TICK   : Ctr=       166
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       167
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       168
           TICK   : Ctr=       169
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       170
           TICK   : Ctr=       171
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       172
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       173
           TICK   : Ctr=       174
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       175
           TICK   : Ctr=       176
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       177
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       178
           TICK   : Ctr=       179
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       180
           TICK   : Ctr=       181
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       182
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       183
           TICK   : Ctr=       184
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 3 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 2 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 3 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       185
           TICK   : Ctr=       186
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 1 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       187
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 0 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 1 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       188
           TICK   : Ctr=       189
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 4 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 3 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 4 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       190
           TICK   : Ctr=       191
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 2 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       192
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 1 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 2 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       193
           TICK   : Ctr=       194
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 0 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 4 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 0 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       195
           TICK   : Ctr=       196
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 3 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       197
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 2 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 3 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       198
           TICK   : Ctr=       199
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 1 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 0 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 1 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       200
           TICK   : Ctr=       201
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 4 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       202
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 3 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 4 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       203
           TICK   : Ctr=       204
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 2 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 1 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 2 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       205
           TICK   : Ctr=       206
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 0 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       207
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 4 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 0 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       208
           TICK   : Ctr=       209
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 3 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       210
           TICK   : Ctr=       211
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       212
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       213
           TICK   : Ctr=       214
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       215
           TICK   : Ctr=       216
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       217
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       218
           TICK   : Ctr=       219
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       220
           TICK   : Ctr=       221
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       222
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       223
           TICK   : Ctr=       224
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       225
           TICK   : Ctr=       226
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       227
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       228
           TICK   : Ctr=       229
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       230
           TICK   : Ctr=       231
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       232
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       233
           TICK   : Ctr=       234
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       235
           TICK   : Ctr=       236
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       237
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       238
           TICK   : Ctr=       239
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       240
           TICK   : Ctr=       241
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       242
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       243
           TICK   : Ctr=       244
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       245
           TICK   : Ctr=       246
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       247
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       248
           TICK   : Ctr=       249
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       250
           TICK   : Ctr=       251
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       252
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       253
           TICK   : Ctr=       254
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       255
           TICK   : Ctr=       256
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       257
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       258
           TICK   : Ctr=       259
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       260
           TICK   : Ctr=       261
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 1 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       262
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 0 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 1 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       263
           TICK   : Ctr=       264
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       265
           TICK   : Ctr=       266
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       267
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       268
           TICK   : Ctr=       269
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       270
           TICK   : Ctr=       271
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       272
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       273
           TICK   : Ctr=       274
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       275
           TICK   : Ctr=       276
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       277
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       278
           TICK   : Ctr=       279
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       280
           TICK   : Ctr=       281
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       282
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       283
           TICK   : Ctr=       284
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       285
           TICK   : Ctr=       286
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       287
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       288
           TICK   : Ctr=       289
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       290
           TICK   : Ctr=       291
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       292
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       293
           TICK   : Ctr=       294
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 0 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 4 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 0 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       295
           TICK   : Ctr=       296
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 3 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       297
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 2 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 3 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       298
           TICK   : Ctr=       299
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 1 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 0 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 1 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       300
           TICK   : Ctr=       301
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 4 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       302
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       303
           TICK   : Ctr=       304
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       305
           TICK   : Ctr=       306
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       307
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       308
           TICK   : Ctr=       309
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       310
           TICK   : Ctr=       311
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       312
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       313
           TICK   : Ctr=       314
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       315
           TICK   : Ctr=       316
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       317
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       318
           TICK   : Ctr=       319
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       320
           TICK   : Ctr=       321
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       322
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       323
           TICK   : Ctr=       324
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 1 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 0 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 1 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       325
           TICK   : Ctr=       326
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 4 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       327
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 3 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 4 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       328
           TICK   : Ctr=       329
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 2 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 1 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 2 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       330
           TICK   : Ctr=       331
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 0 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       332
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 4 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 0 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       333
           TICK   : Ctr=       334
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 3 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 2 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 3 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       335
           TICK   : Ctr=       336
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 1 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       337
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 0 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 1 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       338
           TICK   : Ctr=       339
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 4 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 3 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 4 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       340
           TICK   : Ctr=       341
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 2 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       342
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 1 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 2 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       343
           TICK   : Ctr=       344
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 0 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 4 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 0 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       345
           TICK   : Ctr=       346
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 3 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       347
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 2 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 3 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       348
           TICK   : Ctr=       349
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 1 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 0 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 1 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       350
           TICK   : Ctr=       351
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 4 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       352
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 3 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 4 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       353
           TICK   : Ctr=       354
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 2 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 1 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 2 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       355
           TICK   : Ctr=       356
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 0 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       357
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 4 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 0 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       358
           TICK   : Ctr=       359
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 3 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 2 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 3 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       360
           TICK   : Ctr=       361
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 1 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       362
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 0 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 1 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000210000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000210000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       363
           TICK   : Ctr=       364
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000210000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000210000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000210000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000210000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000210000 User000: 4 hungry   
0000210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000210000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000210000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000210000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000210000 User000: 3 thinking 
0000210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000210000 User000: 4 eating   
0000210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000210000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000210000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000210000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       365
           TICK   : Ctr=       366
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000210000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000210000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000210000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000210000 User000: 2 hungry   
0000210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       367
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000210000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000210000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000210000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000210000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000210000 User000: 1 thinking 
0000210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000210000 User000: 2 eating   
0000210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000210000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000210000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000210000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       368
           TICK   : Ctr=       369
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000210000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000210000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000210000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000210000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000210000 User000: 0 hungry   
0000210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000210000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000210000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000210000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000210000 User000: 4 thinking 
0000210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000210000 User000: 0 eating   
0000210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000210000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000210000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000210000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000210000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       370
           TICK   : Ctr=       371
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000210000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000210000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000210000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000210000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 3 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       372
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000220000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 2 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 3 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       373
           TICK   : Ctr=       374
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000220000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000220000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 1 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 0 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 1 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       375
           TICK   : Ctr=       376
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000220000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 4 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       377
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000220000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 3 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 4 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       378
           TICK   : Ctr=       379
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000220000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000220000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 2 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 1 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 2 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       380
           TICK   : Ctr=       381
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000220000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 0 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       382
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000220000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 4 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 0 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       383
           TICK   : Ctr=       384
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000220000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000220000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 3 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 2 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 3 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       385
           TICK   : Ctr=       386
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000220000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 1 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       387
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000220000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 0 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 1 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       388
           TICK   : Ctr=       389
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000220000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000220000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 4 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 3 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 4 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       390
           TICK   : Ctr=       391
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000220000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 2 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       392
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000220000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 1 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 2 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       393
           TICK   : Ctr=       394
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000220000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000220000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 0 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 4 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 0 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       395
           TICK   : Ctr=       396
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000220000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 3 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       397
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000220000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 2 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 3 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       398
           TICK   : Ctr=       399
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000220000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000220000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 1 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 0 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 1 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       400
           TICK   : Ctr=       401
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000220000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 4 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       402
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000220000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 3 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 4 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       403
           TICK   : Ctr=       404
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000220000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000220000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000220000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000220000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000220000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000220000 User000: 2 hungry   
0000220000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000220000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000220000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000220000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000220000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000220000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000220000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000220000 User000: 1 thinking 
0000220000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000220000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000220000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000220000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000220000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000220000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 User000: 2 eating   
0000220000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000220000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000220000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000220000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000220000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000220000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000220000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000220000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000220000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000220000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000220000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000220000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000220000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000220000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       405
           TICK   : Ctr=       406
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000230000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 0 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       407
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000230000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 4 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 0 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       408
           TICK   : Ctr=       409
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000230000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000230000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 2 thinking 
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 3 hungry   
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 3 eating   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       410
           TICK   : Ctr=       411
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000230000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 1 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       412
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000230000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 0 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 1 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       413
           TICK   : Ctr=       414
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000230000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000230000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 4 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 3 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 4 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       415
           TICK   : Ctr=       416
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000230000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 2 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       417
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000230000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 1 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 2 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       418
           TICK   : Ctr=       419
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000230000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000230000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 0 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 4 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 0 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       420
           TICK   : Ctr=       421
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000230000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 3 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       422
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000230000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 2 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 3 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       423
           TICK   : Ctr=       424
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000230000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000230000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 1 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 0 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 1 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       425
           TICK   : Ctr=       426
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000230000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 4 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       427
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000230000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 3 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 4 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       428
           TICK   : Ctr=       429
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000230000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000230000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000230000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000230000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000230000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000230000 User000: 2 hungry   
0000230000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000230000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000230000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000230000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000230000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000230000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000230000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000230000 User000: 1 thinking 
0000230000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000230000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000230000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000230000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000230000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000230000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 User000: 2 eating   
0000230000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000230000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000230000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000230000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000230000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000230000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000230000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000230000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000230000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000230000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000230000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000230000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000230000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000230000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       430
           TICK   : Ctr=       431
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000240000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000240000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000240000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000240000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000240000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000240000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000240000 User000: 0 hungry   
0000240000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       432
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000240000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000240000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000240000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000240000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000240000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000240000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000240000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000240000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000240000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000240000 User000: 4 thinking 
0000240000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000240000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000240000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000240000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000240000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000240000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000240000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000240000 User000: 0 eating   
0000240000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000240000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000240000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000240000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000240000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000240000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000240000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000240000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000240000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000240000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000240000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000240000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       433
           TICK   : Ctr=       434
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000240000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000240000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000240000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000240000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000240000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000240000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000240000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000240000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000240000 User000: 3 hungry   
0000240000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000240000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000240000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000240000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000240000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000240000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000240000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000240000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000240000 User000: 2 thinking 
0000240000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000240000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000240000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000240000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000240000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000240000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000240000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000240000 User000: 3 eating   
0000240000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000240000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000240000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000240000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000240000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000240000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000240000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000240000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000240000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000240000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000240000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000240000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       435
           TICK   : Ctr=       436
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000240000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000240000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000240000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000240000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000240000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000240000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000240000 User000: 1 hungry   
0000240000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       437
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000240000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000240000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000240000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000240000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000240000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000240000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000240000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000240000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000240000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000240000 User000: 0 thinking 
0000240000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000240000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000240000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000240000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000240000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000240000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000240000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000240000 User000: 1 eating   
0000240000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000240000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000240000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000240000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000240000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000240000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000240000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000240000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000240000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000240000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000240000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000240000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000240000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000240000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000240000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       438
           TICK   : Ctr=       439
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000240000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000240000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000240000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000240000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000240000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000240000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000240000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000240000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000240000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000240000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000240000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000240000 User000: 4 hungry   
0000240000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000240000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000240000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 3 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 4 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       440
           TICK   : Ctr=       441
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000250000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 2 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       442
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000250000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 1 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 2 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       443
           TICK   : Ctr=       444
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000250000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000250000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 0 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 4 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 0 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       445
           TICK   : Ctr=       446
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000250000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 3 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       447
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000250000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 2 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 3 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       448
           TICK   : Ctr=       449
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000250000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000250000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 1 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 0 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 1 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       450
           TICK   : Ctr=       451
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000250000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 4 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       452
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000250000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 3 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 4 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       453
           TICK   : Ctr=       454
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000250000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000250000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 2 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 1 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 2 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       455
           TICK   : Ctr=       456
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000250000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 0 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       457
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000250000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 4 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 0 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       458
           TICK   : Ctr=       459
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000250000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000250000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 3 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000250000 User000: 2 thinking 
0000250000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000250000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000250000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 User000: 3 eating   
0000250000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000250000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000250000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000250000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000250000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000250000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000250000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000250000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000250000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000250000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       460
           TICK   : Ctr=       461
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000250000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000250000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000250000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000250000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000250000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000250000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000250000 User000: 1 hungry   
0000250000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000250000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000250000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       462
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000250000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000250000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000250000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000250000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000250000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000250000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000250000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000250000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000250000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000250000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000250000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000250000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000250000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000260000 User000: 0 thinking 
0000260000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000260000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 User000: 1 eating   
0000260000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000260000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000260000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000260000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000260000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000260000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       463
           TICK   : Ctr=       464
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000260000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000260000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000260000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000260000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000260000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000260000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000260000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000260000 User000: 4 hungry   
0000260000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000260000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000260000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000260000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000260000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000260000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000260000 User000: 3 thinking 
0000260000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000260000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 User000: 4 eating   
0000260000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000260000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000260000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000260000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000260000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       465
           TICK   : Ctr=       466
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000260000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000260000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000260000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000260000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000260000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000260000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000260000 User000: 2 hungry   
0000260000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       467
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000260000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000260000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000260000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000260000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000260000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000260000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000260000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000260000 User000: 1 thinking 
0000260000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000260000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 User000: 2 eating   
0000260000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000260000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000260000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000260000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000260000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       468
           TICK   : Ctr=       469
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000260000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000260000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000260000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000260000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000260000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000260000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000260000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000260000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000260000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000260000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000260000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000260000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000260000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000260000 User000: 0 hungry   
0000260000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000260000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000260000 User000: 4 thinking 
0000260000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000260000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000260000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000260000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 User000: 0 eating   
0000260000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000260000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000260000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000260000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000260000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000260000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000260000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000260000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000260000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000260000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000260000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000260000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       470
           TICK   : Ctr=       471
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000260000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000260000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000260000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000260000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000260000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000260000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000260000 User000: 3 hungry   
0000260000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000260000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000260000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       472
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000260000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000260000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000260000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000260000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000260000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000260000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000260000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000260000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000260000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000260000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000260000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000260000 User000: 2 thinking 
0000260000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000260000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000260000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000260000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 3 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       473
           TICK   : Ctr=       474
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 1 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 0 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 1 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       475
           TICK   : Ctr=       476
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 4 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       477
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 3 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 4 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       478
           TICK   : Ctr=       479
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 2 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 1 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 2 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       480
           TICK   : Ctr=       481
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 0 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       482
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 4 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 0 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       483
           TICK   : Ctr=       484
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 3 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 2 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 3 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       485
           TICK   : Ctr=       486
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 1 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       487
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 0 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 1 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       488
           TICK   : Ctr=       489
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 4 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 3 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 4 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       490
           TICK   : Ctr=       491
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 2 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       492
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 1 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 2 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       493
           TICK   : Ctr=       494
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 0 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 4 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 0 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       495
           TICK   : Ctr=       496
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 3 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       497
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 2 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 3 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       498
           TICK   : Ctr=       499
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 1 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 0 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 1 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       500
           TICK   : Ctr=       501
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 4 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       502
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 3 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 4 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       503
           TICK   : Ctr=       504
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 2 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 1 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 2 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       505
           TICK   : Ctr=       506
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 0 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       507
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 4 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 0 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       508
           TICK   : Ctr=       509
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 3 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 2 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 3 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       510
           TICK   : Ctr=       511
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 1 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       512
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000270000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 0 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 1 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       513
           TICK   : Ctr=       514
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000270000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000270000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 4 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 3 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 4 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       515
           TICK   : Ctr=       516
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000270000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000270000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000270000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000270000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000270000 User000: 2 hungry   
0000270000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       517
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000270000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000270000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000270000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000270000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000270000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000270000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000270000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000270000 User000: 1 thinking 
0000270000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000270000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000270000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000270000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000270000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000270000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 User000: 2 eating   
0000270000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000270000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000270000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000270000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000270000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000270000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000270000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000270000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000270000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000270000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000270000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000270000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000270000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000270000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       518
           TICK   : Ctr=       519
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000280000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000280000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 0 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 4 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 0 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       520
           TICK   : Ctr=       521
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000280000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 3 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       522
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000280000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 2 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 3 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       523
           TICK   : Ctr=       524
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000280000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000280000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 1 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 0 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 1 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       525
           TICK   : Ctr=       526
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000280000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 4 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       527
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000280000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 3 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 4 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       528
           TICK   : Ctr=       529
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000280000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000280000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 2 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 1 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 2 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       530
           TICK   : Ctr=       531
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000280000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 0 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       532
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000280000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 4 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 0 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       533
           TICK   : Ctr=       534
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000280000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000280000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 3 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 2 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 3 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       535
           TICK   : Ctr=       536
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000280000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000280000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000280000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000280000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000280000 User000: 1 hungry   
0000280000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       537
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000280000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000280000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000280000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000280000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000280000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000280000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000280000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000280000 User000: 0 thinking 
0000280000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000280000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000280000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000280000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000280000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000280000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 User000: 1 eating   
0000280000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000280000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000280000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000280000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000280000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000280000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000280000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000280000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000280000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000280000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000280000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000280000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000280000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000280000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       538
           TICK   : Ctr=       539
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000290000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000290000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000290000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000290000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000290000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000290000 User000: 4 hungry   
0000290000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000290000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000290000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000290000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000290000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000290000 User000: 3 thinking 
0000290000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000290000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 User000: 4 eating   
0000290000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000290000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000290000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000290000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000290000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       540
           TICK   : Ctr=       541
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000290000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000290000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000290000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000290000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000290000 User000: 2 hungry   
0000290000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       542
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000290000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000290000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000290000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000290000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000290000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000290000 User000: 1 thinking 
0000290000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000290000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 User000: 2 eating   
0000290000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000290000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000290000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000290000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       543
           TICK   : Ctr=       544
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000290000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000290000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000290000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000290000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000290000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000290000 User000: 0 hungry   
0000290000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000290000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000290000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000290000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000290000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000290000 User000: 4 thinking 
0000290000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000290000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 User000: 0 eating   
0000290000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000290000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000290000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000290000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       545
           TICK   : Ctr=       546
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000290000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000290000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000290000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000290000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000290000 User000: 3 hungry   
0000290000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       547
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000290000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000290000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000290000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000290000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000290000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000290000 User000: 2 thinking 
0000290000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000290000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 User000: 3 eating   
0000290000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000290000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000290000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000290000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       548
           TICK   : Ctr=       549
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000290000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000290000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000290000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000290000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000290000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000290000 User000: 1 hungry   
0000290000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000290000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000290000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000290000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000290000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000290000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000290000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000290000 User000: 0 thinking 
0000290000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000290000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000290000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000290000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000290000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000290000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 User000: 1 eating   
0000290000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000290000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000290000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000290000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000290000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000290000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000290000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000290000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000290000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000290000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000290000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000290000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000290000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000290000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       550
           TICK   : Ctr=       551
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000300000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 4 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       552
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000300000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 3 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 4 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       553
           TICK   : Ctr=       554
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000300000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000300000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 2 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 1 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 2 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       555
           TICK   : Ctr=       556
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000300000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 0 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       557
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000300000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 4 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 0 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       558
           TICK   : Ctr=       559
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000300000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000300000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 3 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 2 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 3 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       560
           TICK   : Ctr=       561
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000300000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 1 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       562
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000300000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 0 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 1 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       563
           TICK   : Ctr=       564
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000300000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000300000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 4 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 3 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 4 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       565
           TICK   : Ctr=       566
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000300000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 2 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       567
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000300000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000300000 User000: 1 thinking 
0000300000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000300000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000300000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 User000: 2 eating   
0000300000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000300000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000300000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000300000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000300000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000300000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000300000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000300000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000300000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000300000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000300000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       568
           TICK   : Ctr=       569
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000300000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000300000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000300000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000300000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000300000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000300000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000300000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000300000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000300000 User000: 0 hungry   
0000300000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000300000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000300000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000300000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000300000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000300000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000300000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000300000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000300000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000300000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000300000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000300000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000300000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000300000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000310000 User000: 4 thinking 
0000310000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000310000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000310000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000310000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000310000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000310000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000310000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000310000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000310000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000310000 User000: 0 eating   
0000310000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000310000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000310000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000310000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000310000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000310000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000310000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000310000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000310000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000310000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000310000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000310000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000310000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000310000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000310000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000310000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000310000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000310000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000310000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000310000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000310000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000310000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000310000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000310000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000310000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       570
           TICK   : Ctr=       571
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000310000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000310000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000310000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000310000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000310000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000310000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000310000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000310000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000310000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000310000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 3 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       572
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000320000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 2 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 3 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       573
           TICK   : Ctr=       574
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000320000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000320000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 1 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 0 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 1 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       575
           TICK   : Ctr=       576
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000320000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 4 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       577
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000320000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 3 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 4 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       578
           TICK   : Ctr=       579
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000320000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000320000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 2 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 1 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 2 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       580
           TICK   : Ctr=       581
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000320000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 0 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       582
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000320000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 4 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 0 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       583
           TICK   : Ctr=       584
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000320000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000320000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 3 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 2 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 3 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       585
           TICK   : Ctr=       586
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000320000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 1 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       587
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000320000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 0 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 1 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       588
           TICK   : Ctr=       589
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000320000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000320000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 4 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 3 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 4 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       590
           TICK   : Ctr=       591
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000320000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 2 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       592
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000320000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 1 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 2 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       593
           TICK   : Ctr=       594
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000320000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000320000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 0 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 4 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 0 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       595
           TICK   : Ctr=       596
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000320000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 3 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       597
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000320000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 2 thinking 
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 3 eating   
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       598
           TICK   : Ctr=       599
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000320000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000320000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000320000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000320000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000320000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000320000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000320000 User000: 0 thinking 
0000320000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 1 hungry   
0000320000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000320000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000320000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000320000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 User000: 1 eating   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000320000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000320000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000320000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000320000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000320000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000320000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000320000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000320000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000320000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000320000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000320000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       600
           TICK   : Ctr=       601
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000320000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000320000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000320000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000320000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000320000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000320000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000320000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000320000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000320000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000320000 User000: 4 hungry   
0000320000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000320000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000320000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       602
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000330000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000330000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000330000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000330000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000330000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000330000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000330000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000330000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000330000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000330000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000330000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000330000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000330000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000330000 User000: 3 thinking 
0000330000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000330000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000330000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000330000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000330000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000330000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000330000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000330000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000330000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000330000 User000: 4 eating   
0000330000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000330000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000330000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000330000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000330000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000330000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000330000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000330000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000330000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000330000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000330000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000330000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000330000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000330000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000330000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000330000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000330000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000330000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000330000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000330000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000330000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000330000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000330000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000330000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000330000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       603
           TICK   : Ctr=       604
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000340000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000340000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 2 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 1 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 2 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       605
           TICK   : Ctr=       606
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000340000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 0 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       607
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000340000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 4 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 0 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       608
           TICK   : Ctr=       609
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000340000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000340000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 3 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 2 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 3 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       610
           TICK   : Ctr=       611
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000340000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 1 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       612
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000340000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 0 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 1 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       613
           TICK   : Ctr=       614
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000340000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000340000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 4 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 3 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 4 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       615
           TICK   : Ctr=       616
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000340000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 2 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       617
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000340000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 1 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 2 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
           TICK   : Ctr=       618
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       619
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000340000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000340000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 0 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 4 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 0 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       620
           TICK   : Ctr=       621
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000340000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 3 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       622
           TICK   : Ctr=       623
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000340000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 2 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 3 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       624
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000340000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000340000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 1 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 0 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 1 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       625
           TICK   : Ctr=       626
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000340000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 4 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       627
           TICK   : Ctr=       628
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000340000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 3 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 4 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       629
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000340000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 1 thinking 
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       630
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000340000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 2 hungry   
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 2 eating   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000340000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000340000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000340000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000340000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000340000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       631
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000340000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000340000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000340000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000340000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000340000 User000: 0 hungry   
0000340000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       632
           TICK   : Ctr=       633
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000340000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000340000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000340000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000340000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000340000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000340000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000340000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000340000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000340000 User000: 4 thinking 
0000340000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000340000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000340000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000340000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000340000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000340000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 User000: 0 eating   
0000340000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000340000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000340000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000340000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000340000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000340000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000340000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000340000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000350000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000350000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000350000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000350000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000350000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000350000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000350000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000350000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000350000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000350000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000350000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000350000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000350000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000350000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       634
           TICK   : Ctr=       635
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000350000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000350000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000350000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000350000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000350000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000350000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000350000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000350000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000350000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000350000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000350000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000350000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000350000 User000: 3 hungry   
0000350000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000350000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000350000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000350000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000350000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000350000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000350000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000350000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000350000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000350000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000350000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000350000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000350000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000350000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000350000 User000: 2 thinking 
0000350000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000350000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000350000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000350000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000350000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000350000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000350000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000350000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000350000 User000: 3 eating   
0000350000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000350000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000350000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000350000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000350000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000350000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000350000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000350000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000350000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000350000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000350000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000350000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000350000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000350000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000350000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000350000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000350000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000350000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000350000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000350000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000350000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000350000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       636
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000350000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000350000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000350000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000350000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000350000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000350000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000350000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000350000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000350000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000350000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000350000 User000: 1 hungry   
0000350000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000350000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000350000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       637
           TICK   : Ctr=       638
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000360000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000360000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000360000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000360000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000360000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000360000 User000: 0 thinking 
0000360000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000360000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 User000: 1 eating   
0000360000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000360000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000360000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000360000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       639
           TICK   : Ctr=       640
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000360000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000360000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000360000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000360000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000360000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000360000 User000: 4 hungry   
0000360000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000360000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000360000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000360000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000360000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000360000 User000: 3 thinking 
0000360000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000360000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 User000: 4 eating   
0000360000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000360000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000360000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000360000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000360000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       641
           TICK   : Ctr=       642
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000360000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000360000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000360000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000360000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000360000 User000: 2 hungry   
0000360000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       643
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000360000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000360000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000360000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000360000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000360000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000360000 User000: 1 thinking 
0000360000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000360000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 User000: 2 eating   
0000360000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000360000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000360000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000360000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       644
           TICK   : Ctr=       645
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000360000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000360000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000360000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000360000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000360000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000360000 User000: 0 hungry   
0000360000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000360000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000360000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000360000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000360000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000360000 User000: 4 thinking 
0000360000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000360000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 User000: 0 eating   
0000360000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000360000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000360000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000360000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       646
           TICK   : Ctr=       647
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000360000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000360000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000360000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000360000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000360000 User000: 3 hungry   
0000360000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       648
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000360000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000360000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000360000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000360000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000360000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000360000 User000: 2 thinking 
0000360000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000360000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 User000: 3 eating   
0000360000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000360000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000360000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000360000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       649
           TICK   : Ctr=       650
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000360000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000360000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000360000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000360000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000360000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000360000 User000: 1 hungry   
0000360000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000360000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000360000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000360000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000360000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000360000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000360000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000360000 User000: 0 thinking 
0000360000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000360000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000360000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000360000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000360000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000360000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 User000: 1 eating   
0000360000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000360000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000360000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000360000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000360000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000360000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000360000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000360000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000360000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000360000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000360000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000360000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000360000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000360000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       651
           TICK   : Ctr=       652
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000370000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000370000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000370000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000370000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000370000 User000: 4 hungry   
0000370000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       653
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000370000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000370000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000370000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000370000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000370000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000370000 User000: 3 thinking 
0000370000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 User000: 4 eating   
0000370000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000370000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000370000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000370000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       654
           TICK   : Ctr=       655
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000370000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000370000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000370000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000370000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000370000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000370000 User000: 2 hungry   
0000370000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000370000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000370000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000370000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000370000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000370000 User000: 1 thinking 
0000370000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 User000: 2 eating   
0000370000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000370000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000370000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000370000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       656
           TICK   : Ctr=       657
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000370000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000370000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000370000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000370000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000370000 User000: 0 hungry   
0000370000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       658
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000370000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000370000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000370000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000370000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000370000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000370000 User000: 4 thinking 
0000370000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 User000: 0 eating   
0000370000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000370000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000370000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000370000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       659
           TICK   : Ctr=       660
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000370000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000370000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000370000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000370000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000370000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000370000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000370000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000370000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000370000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000370000 User000: 3 hungry   
0000370000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000370000 User000: 2 thinking 
0000370000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 User000: 3 eating   
0000370000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000370000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000370000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000370000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000370000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       661
           TICK   : Ctr=       662
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000370000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000370000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000370000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000370000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000370000 User000: 1 hungry   
0000370000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       663
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000370000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000370000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000370000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000370000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000370000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000370000 User000: 0 thinking 
0000370000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 User000: 1 eating   
0000370000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000370000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000370000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000370000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000370000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       664
           TICK   : Ctr=       665
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000370000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000370000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000370000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000370000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000370000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000370000 User000: 4 hungry   
0000370000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000370000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000370000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000370000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000370000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000370000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000370000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000370000 User000: 3 thinking 
0000370000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000370000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000370000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000370000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000370000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000370000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 User000: 4 eating   
0000370000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000370000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000370000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000370000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000370000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000370000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000370000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000370000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000370000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000370000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000370000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000370000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000370000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000370000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       666
           TICK   : Ctr=       667
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 2 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       668
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 1 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 2 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       669
           TICK   : Ctr=       670
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 0 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 4 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 0 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       671
           TICK   : Ctr=       672
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000380000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 3 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       673
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 2 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 3 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       674
           TICK   : Ctr=       675
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 1 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 0 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 1 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       676
           TICK   : Ctr=       677
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 4 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       678
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000380000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 3 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 4 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       679
           TICK   : Ctr=       680
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 2 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 1 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 2 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       681
           TICK   : Ctr=       682
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 0 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       683
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 4 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 0 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       684
           TICK   : Ctr=       685
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000380000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 3 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 2 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 3 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       686
           TICK   : Ctr=       687
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 1 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       688
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 0 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 1 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       689
           TICK   : Ctr=       690
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000380000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 4 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 3 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 4 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       691
           TICK   : Ctr=       692
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 2 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       693
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 1 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 2 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       694
           TICK   : Ctr=       695
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 0 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 4 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 0 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       696
           TICK   : Ctr=       697
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000380000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 3 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       698
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 2 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 3 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       699
           TICK   : Ctr=       700
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 1 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 0 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 1 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       701
           TICK   : Ctr=       702
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 4 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       703
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000380000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 3 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 4 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       704
           TICK   : Ctr=       705
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000380000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000380000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 2 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000380000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000380000 User000: 1 thinking 
0000380000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000380000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000380000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 User000: 2 eating   
0000380000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000380000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000380000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000380000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000380000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000380000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000380000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000380000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000380000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000380000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000380000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       706
           TICK   : Ctr=       707
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000380000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000380000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000380000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000380000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000380000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000380000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000380000 User000: 0 hungry   
0000380000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000380000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000380000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       708
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000380000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000380000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000380000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000380000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000380000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000380000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000380000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000380000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000380000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000380000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000380000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 4 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 0 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       709
           TICK   : Ctr=       710
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000390000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000390000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 3 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 2 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 3 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       711
           TICK   : Ctr=       712
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000390000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 1 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       713
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000390000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 0 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 1 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       714
           TICK   : Ctr=       715
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000390000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000390000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 4 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 3 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 4 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       716
           TICK   : Ctr=       717
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000390000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 2 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       718
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000390000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 1 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 2 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       719
           TICK   : Ctr=       720
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000390000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000390000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 0 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 4 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 0 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       721
           TICK   : Ctr=       722
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000390000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 3 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       723
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000390000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 2 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 3 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       724
           TICK   : Ctr=       725
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000390000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000390000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 1 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 0 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 1 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       726
           TICK   : Ctr=       727
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000390000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 4 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       728
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000390000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 3 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 4 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       729
           TICK   : Ctr=       730
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000390000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000390000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 2 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 1 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 2 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       731
           TICK   : Ctr=       732
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000390000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 0 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       733
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000390000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 4 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 0 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       734
           TICK   : Ctr=       735
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000390000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000390000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 3 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 2 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 3 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       736
           TICK   : Ctr=       737
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000390000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 1 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       738
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000390000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 0 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 1 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       739
           TICK   : Ctr=       740
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000390000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000390000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 4 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000390000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000390000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000390000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000390000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000390000 User000: 3 thinking 
0000390000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000390000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000390000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000390000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 User000: 4 eating   
0000390000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000390000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000390000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000390000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000390000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000390000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000390000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000390000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000390000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000390000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000390000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000390000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       741
           TICK   : Ctr=       742
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000390000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000390000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000390000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000390000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000390000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000390000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000390000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000390000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000390000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000390000 User000: 2 hungry   
0000390000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000390000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000390000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       743
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000400000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000400000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000400000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000400000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000400000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000400000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000400000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000400000 User000: 1 thinking 
0000400000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000400000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 User000: 2 eating   
0000400000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000400000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000400000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000400000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000400000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       744
           TICK   : Ctr=       745
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000400000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000400000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000400000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000400000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000400000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000400000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000400000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000400000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000400000 User000: 0 hungry   
0000400000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000400000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000400000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000400000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000400000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000400000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000400000 User000: 4 thinking 
0000400000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000400000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 User000: 0 eating   
0000400000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000400000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000400000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000400000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000400000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       746
           TICK   : Ctr=       747
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000400000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000400000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000400000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000400000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000400000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000400000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000400000 User000: 3 hungry   
0000400000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       748
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000400000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000400000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000400000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000400000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000400000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000400000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000400000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000400000 User000: 2 thinking 
0000400000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000400000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 User000: 3 eating   
0000400000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000400000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000400000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000400000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000400000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       749
           TICK   : Ctr=       750
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000400000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000400000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000400000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000400000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000400000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000400000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000400000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000400000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000400000 User000: 1 hungry   
0000400000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000400000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000400000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000400000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000400000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000400000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000400000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000400000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000400000 User000: 0 thinking 
0000400000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000400000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000400000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000400000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000400000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000400000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 User000: 1 eating   
0000400000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000400000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000400000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000400000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000400000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000400000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000400000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000400000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000400000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000400000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000400000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000400000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000400000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000400000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       751
           TICK   : Ctr=       752
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000410000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000410000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000410000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000410000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000410000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000410000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000410000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000410000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000410000 User000: 4 hungry   
0000410000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000410000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       753
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000410000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000410000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000410000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000410000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000410000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000410000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000410000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000410000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000410000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000410000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000410000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000410000 User000: 3 thinking 
0000410000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000410000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000410000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000410000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000410000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000410000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000410000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000410000 User000: 4 eating   
0000410000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000410000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000410000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000410000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000410000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000410000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000410000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000410000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000410000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000410000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000410000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000410000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000410000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000410000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000410000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000410000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000410000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000410000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       754
           TICK   : Ctr=       755
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000410000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000410000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000410000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000410000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000410000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000410000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000410000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000410000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000410000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000410000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000410000 User000: 2 hungry   
0000410000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000410000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000410000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000410000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000410000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000410000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000410000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000410000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000410000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000410000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000410000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000410000 User000: 1 thinking 
0000410000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000410000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000410000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000410000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000410000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000410000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000410000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000410000 User000: 2 eating   
0000410000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000410000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000410000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000410000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000410000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000410000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000410000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000410000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000410000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000410000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000410000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000410000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000410000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000410000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000410000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000410000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000410000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000410000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       756
           TICK   : Ctr=       757
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000410000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000410000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000410000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000410000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000410000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000410000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000410000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000410000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000410000 User000: 0 hungry   
0000410000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000410000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000410000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       758
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000410000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000410000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000410000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000410000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000410000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000410000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000410000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000410000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000410000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000410000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000410000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000410000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000410000 User000: 4 thinking 
0000410000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000410000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000410000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000410000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000410000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000410000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000410000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000410000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000410000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000410000 User000: 0 eating   
0000410000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000410000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000420000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000420000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000420000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000420000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000420000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       759
           TICK   : Ctr=       760
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000420000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000420000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000420000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000420000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000420000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000420000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000420000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000420000 User000: 3 hungry   
0000420000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000420000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000420000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000420000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000420000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000420000 User000: 2 thinking 
0000420000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000420000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 User000: 3 eating   
0000420000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000420000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000420000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000420000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000420000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       761
           TICK   : Ctr=       762
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000420000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000420000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000420000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000420000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000420000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000420000 User000: 1 hungry   
0000420000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       763
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000420000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000420000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000420000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000420000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000420000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000420000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000420000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000420000 User000: 0 thinking 
0000420000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000420000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 User000: 1 eating   
0000420000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000420000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000420000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000420000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000420000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000420000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       764
           TICK   : Ctr=       765
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000420000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000420000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000420000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000420000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000420000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000420000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000420000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000420000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000420000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000420000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000420000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000420000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000420000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000420000 User000: 4 hungry   
0000420000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000420000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000420000 User000: 3 thinking 
0000420000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000420000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 User000: 4 eating   
0000420000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000420000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000420000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000420000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000420000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000420000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       766
           TICK   : Ctr=       767
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000420000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000420000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000420000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000420000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000420000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000420000 User000: 2 hungry   
0000420000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       768
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000420000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000420000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000420000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000420000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000420000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000420000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000420000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000420000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000420000 User000: 1 thinking 
0000420000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000420000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000420000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000420000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000420000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000420000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 User000: 2 eating   
0000420000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000420000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000420000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000420000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000420000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000420000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000420000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000420000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000420000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000420000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000420000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000420000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000420000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000420000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       769
           TICK   : Ctr=       770
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000430000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000430000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000430000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000430000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000430000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000430000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000430000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000430000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000430000 User000: 0 hungry   
0000430000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000430000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000430000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000430000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000430000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000430000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000430000 User000: 4 thinking 
0000430000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000430000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 User000: 0 eating   
0000430000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000430000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000430000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000430000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000430000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       771
           TICK   : Ctr=       772
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000430000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000430000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000430000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000430000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000430000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000430000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000430000 User000: 3 hungry   
0000430000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       773
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000430000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000430000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000430000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000430000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000430000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000430000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000430000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000430000 User000: 2 thinking 
0000430000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000430000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 User000: 3 eating   
0000430000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000430000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000430000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000430000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000430000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       774
           TICK   : Ctr=       775
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000430000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000430000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000430000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000430000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000430000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000430000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000430000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000430000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000430000 User000: 1 hungry   
0000430000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000430000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000430000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000430000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000430000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000430000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000430000 User000: 0 thinking 
0000430000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000430000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 User000: 1 eating   
0000430000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000430000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000430000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000430000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000430000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000430000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       776
           TICK   : Ctr=       777
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000430000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000430000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000430000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000430000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000430000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000430000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000430000 User000: 4 hungry   
0000430000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       778
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000430000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000430000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000430000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000430000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000430000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000430000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000430000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000430000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000430000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000430000 User000: 3 thinking 
0000430000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000430000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000430000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000430000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000430000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000430000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 User000: 4 eating   
0000430000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000430000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000430000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000430000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000430000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000430000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000430000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000430000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000430000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000430000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000430000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000430000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000430000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000430000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       779
           TICK   : Ctr=       780
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 2 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 1 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 2 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       781
           TICK   : Ctr=       782
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 0 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       783
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 4 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 0 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       784
           TICK   : Ctr=       785
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 3 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 2 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 3 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       786
           TICK   : Ctr=       787
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 1 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       788
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 0 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 1 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       789
           TICK   : Ctr=       790
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 3 thinking 
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 4 hungry   
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 4 eating   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       791
           TICK   : Ctr=       792
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 2 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       793
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 1 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 2 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       794
           TICK   : Ctr=       795
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 0 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 4 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 0 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       796
           TICK   : Ctr=       797
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 3 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       798
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 2 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 3 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       799
           TICK   : Ctr=       800
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 1 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 0 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 1 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       801
           TICK   : Ctr=       802
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 4 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       803
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 3 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 4 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       804
           TICK   : Ctr=       805
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 2 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 1 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 2 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       806
           TICK   : Ctr=       807
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 0 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       808
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 4 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 0 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       809
           TICK   : Ctr=       810
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 3 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 2 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 3 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       811
           TICK   : Ctr=       812
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 1 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       813
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 0 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 1 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       814
           TICK   : Ctr=       815
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 4 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 3 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 4 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       816
           TICK   : Ctr=       817
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 2 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       818
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 1 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 2 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       819
           TICK   : Ctr=       820
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 0 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 4 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 0 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       821
           TICK   : Ctr=       822
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 3 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       823
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000440000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 2 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 3 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       824
           TICK   : Ctr=       825
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000440000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000440000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 1 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 0 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 1 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       826
           TICK   : Ctr=       827
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000440000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000440000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000440000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000440000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000440000 User000: 4 hungry   
0000440000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       828
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000440000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000440000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000440000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000440000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000440000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000440000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000440000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000440000 User000: 3 thinking 
0000440000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000440000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000440000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000440000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000440000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000440000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 User000: 4 eating   
0000440000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000440000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000440000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000440000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000440000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000440000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000440000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000440000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000440000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000440000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000440000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000440000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000440000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000440000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       829
           TICK   : Ctr=       830
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000450000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000450000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000450000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000450000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000450000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000450000 User000: 2 hungry   
0000450000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000450000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000450000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000450000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000450000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000450000 User000: 1 thinking 
0000450000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000450000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 User000: 2 eating   
0000450000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000450000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000450000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000450000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       831
           TICK   : Ctr=       832
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000450000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000450000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000450000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000450000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000450000 User000: 0 hungry   
0000450000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       833
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000450000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000450000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000450000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000450000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000450000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000450000 User000: 4 thinking 
0000450000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000450000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 User000: 0 eating   
0000450000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000450000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000450000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000450000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       834
           TICK   : Ctr=       835
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000450000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000450000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000450000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000450000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000450000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000450000 User000: 3 hungry   
0000450000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000450000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000450000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000450000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000450000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000450000 User000: 2 thinking 
0000450000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000450000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 User000: 3 eating   
0000450000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000450000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000450000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000450000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       836
           TICK   : Ctr=       837
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000450000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000450000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000450000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000450000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000450000 User000: 1 hungry   
0000450000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       838
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000450000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000450000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000450000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000450000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000450000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000450000 User000: 0 thinking 
0000450000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000450000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 User000: 1 eating   
0000450000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000450000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000450000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000450000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000450000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       839
           TICK   : Ctr=       840
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000450000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000450000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000450000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000450000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000450000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000450000 User000: 4 hungry   
0000450000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000450000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000450000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000450000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000450000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000450000 User000: 3 thinking 
0000450000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000450000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 User000: 4 eating   
0000450000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000450000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000450000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000450000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000450000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       841
           TICK   : Ctr=       842
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000450000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000450000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000450000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000450000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000450000 User000: 2 hungry   
0000450000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       843
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000450000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000450000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000450000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000450000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000450000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000450000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000450000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000450000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000450000 User000: 1 thinking 
0000450000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000450000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000450000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000450000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000450000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000450000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 User000: 2 eating   
0000450000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000450000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000450000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000450000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000450000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000450000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000450000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000450000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000450000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000450000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000450000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000450000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000450000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       844
           TICK   : Ctr=       845
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000460000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000460000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000460000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000460000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000460000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000460000 User000: 0 hungry   
0000460000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000460000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000460000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000460000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000460000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000460000 User000: 4 thinking 
0000460000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000460000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 User000: 0 eating   
0000460000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000460000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000460000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000460000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       846
           TICK   : Ctr=       847
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000460000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000460000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000460000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000460000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000460000 User000: 3 hungry   
0000460000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       848
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000460000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000460000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000460000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000460000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000460000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000460000 User000: 2 thinking 
0000460000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000460000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 User000: 3 eating   
0000460000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000460000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000460000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000460000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       849
           TICK   : Ctr=       850
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000460000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000460000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000460000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000460000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000460000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000460000 User000: 1 hungry   
0000460000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000460000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000460000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000460000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000460000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000460000 User000: 0 thinking 
0000460000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000460000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 User000: 1 eating   
0000460000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000460000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000460000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000460000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000460000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       851
           TICK   : Ctr=       852
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000460000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000460000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000460000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000460000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000460000 User000: 4 hungry   
0000460000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       853
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000460000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000460000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000460000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000460000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000460000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000460000 User000: 3 thinking 
0000460000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000460000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 User000: 4 eating   
0000460000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000460000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000460000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000460000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       854
           TICK   : Ctr=       855
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000460000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000460000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000460000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000460000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000460000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000460000 User000: 2 hungry   
0000460000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000460000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000460000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000460000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000460000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000460000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000460000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000460000 User000: 1 thinking 
0000460000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000460000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000460000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000460000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000460000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000460000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 User000: 2 eating   
0000460000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000460000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000460000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000460000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000460000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000460000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000460000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000460000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000460000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000460000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000460000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000460000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000460000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000460000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       856
           TICK   : Ctr=       857
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000470000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000470000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000470000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000470000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000470000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000470000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000470000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000470000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000470000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000470000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000470000 User000: 0 hungry   
0000470000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000470000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000470000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       858
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000470000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000470000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000470000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000470000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000470000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000470000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000470000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000470000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000470000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000470000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000470000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000470000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000470000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000470000 User000: 4 thinking 
0000470000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000470000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000470000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000470000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000470000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000470000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000470000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000470000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000470000 User000: 0 eating   
0000470000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000470000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000470000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000470000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000470000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000470000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000470000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000470000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000470000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000470000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000470000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000470000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000470000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000470000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000470000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000470000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000470000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000470000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000470000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000470000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000470000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       859
           TICK   : Ctr=       860
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000470000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000470000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000470000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000470000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000470000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000470000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000470000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000470000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000470000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000470000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000470000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000470000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000470000 User000: 3 hungry   
0000470000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000470000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000470000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000470000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000470000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000470000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000470000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000470000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000470000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000470000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000470000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000470000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000470000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000470000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000470000 User000: 2 thinking 
0000470000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000470000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000470000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000470000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000470000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000470000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000470000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000470000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000470000 User000: 3 eating   
0000470000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000470000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000470000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000470000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000470000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000470000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000470000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000470000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000470000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000470000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000470000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000470000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000470000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000470000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000470000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000470000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000470000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000470000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000470000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000470000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000470000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000470000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       861
           TICK   : Ctr=       862
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000480000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 1 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       863
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000480000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 0 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 1 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       864
           TICK   : Ctr=       865
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000480000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000480000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 4 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 3 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 4 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       866
           TICK   : Ctr=       867
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000480000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 2 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       868
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000480000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 1 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 2 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       869
           TICK   : Ctr=       870
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000480000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000480000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 0 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 4 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 0 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       871
           TICK   : Ctr=       872
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000480000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 3 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       873
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000480000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 2 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 3 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       874
           TICK   : Ctr=       875
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000480000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000480000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 1 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 0 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 1 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       876
           TICK   : Ctr=       877
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000480000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 4 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       878
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000480000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 3 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 4 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       879
           TICK   : Ctr=       880
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000480000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000480000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000480000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000480000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000480000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000480000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 2 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000480000 User000: 1 thinking 
0000480000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000480000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000480000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000480000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 User000: 2 eating   
0000480000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000480000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000480000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000480000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000480000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000480000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000480000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000480000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000480000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000480000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000480000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       881
           TICK   : Ctr=       882
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000480000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000480000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000480000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000480000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000480000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000480000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000480000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000480000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000480000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000480000 User000: 0 hungry   
0000480000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000480000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000480000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       883
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000490000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000490000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000490000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000490000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000490000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000490000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000490000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000490000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000490000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000490000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000490000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000490000 User000: 4 thinking 
0000490000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000490000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000490000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000490000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000490000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000490000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000490000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000490000 User000: 0 eating   
0000490000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000490000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000490000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000490000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000490000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000490000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000490000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000490000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000490000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000490000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000490000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000490000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000490000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000490000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000490000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000490000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000490000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000490000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000490000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000490000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       884
           TICK   : Ctr=       885
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000490000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000490000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000490000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000490000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000490000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000490000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000490000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000490000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000490000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000490000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000490000 User000: 3 hungry   
0000490000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000490000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000490000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000490000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000490000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000490000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000490000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000490000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000490000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000490000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000490000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000490000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000490000 User000: 2 thinking 
0000490000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000490000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000490000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000490000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000490000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000490000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000490000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000490000 User000: 3 eating   
0000490000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000490000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000490000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000490000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000490000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000490000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000490000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000490000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000490000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000490000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000490000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000490000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000490000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000490000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000490000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000490000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000490000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000490000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000490000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000490000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000490000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       886
           TICK   : Ctr=       887
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000490000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000490000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000490000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000490000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000490000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000490000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000490000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000490000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000490000 User000: 1 hungry   
0000490000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000490000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000490000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       888
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000490000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000490000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000490000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000490000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000490000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000490000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000490000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000490000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000490000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000490000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000490000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000490000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000490000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000500000 User000: 0 thinking 
0000500000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000500000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 User000: 1 eating   
0000500000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000500000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000500000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000500000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000500000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000500000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       889
           TICK   : Ctr=       890
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000500000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000500000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000500000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000500000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000500000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000500000 User000: 4 hungry   
0000500000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000500000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000500000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000500000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000500000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000500000 User000: 3 thinking 
0000500000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000500000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 User000: 4 eating   
0000500000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000500000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000500000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000500000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       891
           TICK   : Ctr=       892
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000500000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000500000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000500000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000500000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000500000 User000: 2 hungry   
0000500000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       893
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000500000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000500000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000500000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000500000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000500000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000500000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000500000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000500000 User000: 1 thinking 
0000500000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000500000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 User000: 2 eating   
0000500000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000500000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000500000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000500000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000500000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       894
           TICK   : Ctr=       895
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000500000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000500000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000500000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000500000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000500000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000500000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000500000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000500000 User000: 0 hungry   
0000500000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000500000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000500000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000500000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000500000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000500000 User000: 4 thinking 
0000500000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000500000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 User000: 0 eating   
0000500000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000500000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000500000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000500000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000500000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       896
           TICK   : Ctr=       897
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000500000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000500000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000500000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000500000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000500000 User000: 3 hungry   
0000500000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       898
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000500000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000500000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000500000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000500000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000500000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000500000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000500000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000500000 User000: 2 thinking 
0000500000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000500000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000500000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000500000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000500000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000500000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 User000: 3 eating   
0000500000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000500000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000500000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000500000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000500000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000500000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000500000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000500000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000500000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000500000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000500000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000500000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000500000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       899
           TICK   : Ctr=       900
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000510000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000510000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000510000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000510000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000510000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000510000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000510000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000510000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000510000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000510000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000510000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000510000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000510000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000510000 User000: 0 thinking 
0000510000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000510000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000510000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000510000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000510000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000510000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000510000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000510000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000510000 User000: 1 hungry   
0000510000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000510000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000510000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000510000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000510000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000510000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000510000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000510000 User000: 1 eating   
0000510000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000510000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000510000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000510000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000510000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000510000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000510000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000510000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000510000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000510000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000510000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000510000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000510000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000510000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       901
           TICK   : Ctr=       902
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000510000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000510000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000510000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000510000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000510000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000510000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000510000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000510000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000510000 User000: 4 hungry   
0000510000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000510000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       903
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000510000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000510000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000510000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000510000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000510000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000510000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000510000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000510000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000510000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000510000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000510000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000510000 User000: 3 thinking 
0000510000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000510000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000510000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000510000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000510000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000510000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000510000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000510000 User000: 4 eating   
0000510000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000510000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000510000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000510000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000510000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000510000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000510000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000510000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000510000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000510000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000510000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000510000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000510000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       904
           TICK   : Ctr=       905
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000510000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000510000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000510000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000510000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000510000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000510000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000510000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000510000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000510000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000510000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000510000 User000: 2 hungry   
0000510000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000510000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000510000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000510000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000510000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000510000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000510000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000510000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000510000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000510000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000510000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000510000 User000: 1 thinking 
0000510000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000510000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000510000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000510000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000510000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000510000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000510000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000510000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000510000 User000: 2 eating   
0000510000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000510000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000510000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000510000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000510000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000510000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000510000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000510000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000510000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000510000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000510000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000510000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000510000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000510000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000510000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000510000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       906
           TICK   : Ctr=       907
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000520000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000520000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000520000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000520000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000520000 User000: 0 hungry   
0000520000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       908
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000520000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000520000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000520000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000520000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000520000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000520000 User000: 4 thinking 
0000520000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000520000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 User000: 0 eating   
0000520000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000520000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000520000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000520000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       909
           TICK   : Ctr=       910
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000520000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000520000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000520000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000520000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000520000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000520000 User000: 3 hungry   
0000520000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000520000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000520000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000520000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000520000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000520000 User000: 2 thinking 
0000520000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000520000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 User000: 3 eating   
0000520000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000520000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000520000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000520000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       911
           TICK   : Ctr=       912
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000520000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000520000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000520000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000520000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000520000 User000: 1 hungry   
0000520000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       913
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000520000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000520000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000520000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000520000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000520000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000520000 User000: 0 thinking 
0000520000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000520000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 User000: 1 eating   
0000520000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000520000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000520000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000520000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000520000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       914
           TICK   : Ctr=       915
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000520000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000520000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000520000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000520000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000520000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000520000 User000: 4 hungry   
0000520000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000520000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000520000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000520000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000520000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000520000 User000: 3 thinking 
0000520000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000520000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 User000: 4 eating   
0000520000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000520000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000520000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000520000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       916
           TICK   : Ctr=       917
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000520000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000520000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000520000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000520000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000520000 User000: 2 hungry   
0000520000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       918
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000520000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000520000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000520000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000520000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000520000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000520000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000520000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000520000 User000: 1 thinking 
0000520000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000520000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000520000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000520000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000520000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000520000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 User000: 2 eating   
0000520000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000520000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000520000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000520000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000520000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000520000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000520000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000520000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000520000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000520000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000520000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000520000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000520000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000520000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       919
           TICK   : Ctr=       920
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000530000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000530000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000530000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000530000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000530000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000530000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000530000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000530000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000530000 User000: 0 hungry   
0000530000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000530000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000530000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000530000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000530000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000530000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000530000 User000: 4 thinking 
0000530000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000530000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000530000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000530000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000530000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000530000 User000: 0 eating   
0000530000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000530000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000530000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000530000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000530000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000530000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000530000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000530000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000530000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000530000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000530000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000530000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       921
           TICK   : Ctr=       922
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000530000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000530000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000530000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000530000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000530000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000530000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000530000 User000: 3 hungry   
0000530000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       923
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000530000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000530000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000530000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000530000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000530000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000530000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000530000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000530000 User000: 2 thinking 
0000530000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000530000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000530000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000530000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000530000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000530000 User000: 3 eating   
0000530000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000530000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000530000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000530000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000530000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000530000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000530000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000530000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000530000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000530000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000530000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000530000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       924
           TICK   : Ctr=       925
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000530000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000530000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000530000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000530000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000530000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000530000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000530000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000530000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000530000 User000: 1 hungry   
0000530000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000530000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000530000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000530000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000530000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000530000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000530000 User000: 0 thinking 
0000530000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000530000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000530000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000530000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000530000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000530000 User000: 1 eating   
0000530000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000530000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000530000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000530000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000530000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000530000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000530000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000530000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000530000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000530000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000530000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000530000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000530000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000530000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000530000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       926
           TICK   : Ctr=       927
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000530000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000530000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000530000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000530000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000530000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000530000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000530000 User000: 4 hungry   
0000530000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000530000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000530000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       928
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000530000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000530000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000530000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000530000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000530000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000530000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000530000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000530000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000530000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000530000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000530000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000530000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000530000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000540000 User000: 3 thinking 
0000540000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000540000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 User000: 4 eating   
0000540000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000540000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000540000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000540000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000540000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       929
           TICK   : Ctr=       930
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000540000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000540000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000540000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000540000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000540000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000540000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000540000 User000: 2 hungry   
0000540000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000540000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000540000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000540000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000540000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000540000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000540000 User000: 1 thinking 
0000540000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000540000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 User000: 2 eating   
0000540000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000540000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000540000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000540000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       931
           TICK   : Ctr=       932
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000540000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000540000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000540000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000540000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000540000 User000: 0 hungry   
0000540000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       933
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000540000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000540000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000540000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000540000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000540000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000540000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000540000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000540000 User000: 4 thinking 
0000540000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000540000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 User000: 0 eating   
0000540000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000540000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000540000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000540000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       934
           TICK   : Ctr=       935
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000540000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000540000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000540000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000540000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000540000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000540000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000540000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000540000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000540000 User000: 2 thinking 
0000540000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000540000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000540000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000540000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000540000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000540000 User000: 3 hungry   
0000540000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000540000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 User000: 3 eating   
0000540000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000540000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000540000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000540000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000540000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000540000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000540000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000540000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       936
           TICK   : Ctr=       937
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000540000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000540000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000540000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000540000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000540000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000540000 User000: 1 hungry   
0000540000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       938
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000540000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000540000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000540000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000540000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000540000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000540000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000540000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000540000 User000: 0 thinking 
0000540000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000540000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000540000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000540000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000540000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000540000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 User000: 1 eating   
0000540000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000540000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000540000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000540000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000540000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000540000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000540000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000550000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000550000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000550000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000550000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       939
           TICK   : Ctr=       940
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000550000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000550000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000550000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000550000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000550000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000550000 User000: 4 hungry   
0000550000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000550000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000550000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000550000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000550000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000550000 User000: 3 thinking 
0000550000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000550000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 User000: 4 eating   
0000550000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000550000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000550000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000550000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000550000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       941
           TICK   : Ctr=       942
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000550000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000550000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000550000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000550000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000550000 User000: 2 hungry   
0000550000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       943
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000550000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000550000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000550000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000550000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000550000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000550000 User000: 1 thinking 
0000550000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000550000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 User000: 2 eating   
0000550000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000550000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000550000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000550000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       944
           TICK   : Ctr=       945
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000550000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000550000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000550000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000550000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000550000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000550000 User000: 0 hungry   
0000550000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000550000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000550000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000550000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000550000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000550000 User000: 4 thinking 
0000550000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000550000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 User000: 0 eating   
0000550000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000550000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000550000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000550000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       946
           TICK   : Ctr=       947
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000550000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000550000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000550000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000550000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000550000 User000: 3 hungry   
0000550000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       948
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000550000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000550000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000550000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000550000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000550000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000550000 User000: 2 thinking 
0000550000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000550000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 User000: 3 eating   
0000550000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000550000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000550000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000550000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000550000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       949
           TICK   : Ctr=       950
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000550000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000550000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000550000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000550000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000550000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000550000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000550000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000550000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000550000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000550000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000550000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000550000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000550000 User000: 1 hungry   
0000550000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000550000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000550000 User000: 0 thinking 
0000550000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000550000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000550000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000550000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000550000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000550000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 User000: 1 eating   
0000550000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000550000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000550000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000550000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000550000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000550000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000550000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000550000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000550000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000550000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000550000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000550000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000550000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000550000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       951
           TICK   : Ctr=       952
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000560000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000560000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000560000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000560000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000560000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000560000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000560000 User000: 4 hungry   
0000560000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       953
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000560000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000560000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000560000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000560000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000560000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000560000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000560000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000560000 User000: 3 thinking 
0000560000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000560000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000560000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000560000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000560000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000560000 User000: 4 eating   
0000560000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000560000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000560000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000560000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000560000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000560000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000560000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000560000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000560000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000560000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000560000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000560000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       954
           TICK   : Ctr=       955
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000560000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000560000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000560000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000560000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000560000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000560000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000560000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000560000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000560000 User000: 2 hungry   
0000560000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000560000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000560000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000560000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000560000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000560000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000560000 User000: 1 thinking 
0000560000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000560000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000560000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000560000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000560000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000560000 User000: 2 eating   
0000560000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000560000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000560000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000560000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000560000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000560000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000560000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000560000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000560000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000560000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000560000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000560000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       956
           TICK   : Ctr=       957
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000560000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000560000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000560000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000560000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000560000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000560000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000560000 User000: 0 hungry   
0000560000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       958
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000560000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000560000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000560000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000560000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000560000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000560000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000560000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000560000 User000: 4 thinking 
0000560000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000560000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000560000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000560000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000560000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000560000 User000: 0 eating   
0000560000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000560000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000560000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000560000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000560000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000560000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000560000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000560000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000560000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000560000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000560000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000560000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000560000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000560000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       959
           TICK   : Ctr=       960
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000560000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000560000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000560000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000560000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000560000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000560000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000560000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000560000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000560000 User000: 3 hungry   
0000560000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000560000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000560000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000560000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000560000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000560000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000560000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000560000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000560000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000560000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000560000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000560000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000560000 User000: 2 thinking 
0000560000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000560000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000560000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000560000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 User000: 3 eating   
0000570000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000570000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000570000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000570000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       961
           TICK   : Ctr=       962
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000570000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000570000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000570000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000570000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000570000 User000: 1 hungry   
0000570000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       963
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000570000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000570000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000570000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000570000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000570000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000570000 User000: 0 thinking 
0000570000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000570000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 User000: 1 eating   
0000570000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000570000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000570000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000570000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000570000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       964
           TICK   : Ctr=       965
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000570000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000570000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000570000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000570000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000570000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000570000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000570000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000570000 User000: 4 hungry   
0000570000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000570000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000570000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000570000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000570000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000570000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000570000 User000: 3 thinking 
0000570000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000570000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 User000: 4 eating   
0000570000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000570000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000570000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000570000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000570000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       966
           TICK   : Ctr=       967
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000570000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000570000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000570000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000570000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000570000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000570000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000570000 User000: 2 hungry   
0000570000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       968
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000570000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000570000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000570000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000570000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000570000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000570000 User000: 1 thinking 
0000570000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000570000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 User000: 2 eating   
0000570000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000570000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000570000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000570000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       969
           TICK   : Ctr=       970
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000570000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000570000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000570000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000570000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000570000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000570000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000570000 User000: 0 hungry   
0000570000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000570000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000570000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000570000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000570000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000570000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000570000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000570000 User000: 4 thinking 
0000570000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000570000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000570000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000570000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000570000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000570000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 User000: 0 eating   
0000570000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000570000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000570000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000570000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000570000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000570000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000570000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000570000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000570000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000570000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000570000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000570000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000570000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000570000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       971
           TICK   : Ctr=       972
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000580000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 3 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       973
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000580000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 2 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 3 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       974
           TICK   : Ctr=       975
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000580000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000580000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 1 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 0 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 1 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
           TICK   : Ctr=       976
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       977
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000580000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 4 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       978
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000580000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 3 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 4 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       979
           TICK   : Ctr=       980
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000580000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 2 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       981
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000580000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 1 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 2 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       982
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000580000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 0 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       983
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000580000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 4 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 0 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       984
           TICK   : Ctr=       985
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000580000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 3 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       986
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000580000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 2 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 3 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       987
           TICK   : Ctr=       988
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000580000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000580000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 1 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 0 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 1 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       989
           TICK   : Ctr=       990
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000580000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 4 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       991
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000580000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 3 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 4 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       992
           TICK   : Ctr=       993
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000580000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000580000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 2 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 1 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 2 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       994
           TICK   : Ctr=       995
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000580000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 0 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       996
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000580000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000580000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000580000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000580000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000580000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000580000 User000: 4 thinking 
0000580000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000580000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000580000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000580000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 User000: 0 eating   
0000580000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000580000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000580000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000580000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000580000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000580000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000580000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000580000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000580000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000580000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000580000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       997
           TICK   : Ctr=       998
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000580000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000580000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000580000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000580000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000580000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000580000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000580000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000580000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000580000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000580000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000580000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000580000 User000: 3 hungry   
0000580000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000580000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000580000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000590000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000590000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000590000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000590000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000590000 User000: 2 thinking 
0000590000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000590000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 User000: 3 eating   
0000590000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000590000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000590000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000590000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=       999
           TICK   : Ctr=      1000
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000590000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000590000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000590000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000590000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000590000 User000: 1 hungry   
0000590000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1001
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000590000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000590000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000590000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000590000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000590000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000590000 User000: 0 thinking 
0000590000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000590000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 User000: 1 eating   
0000590000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000590000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000590000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000590000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000590000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1002
           TICK   : Ctr=      1003
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000590000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000590000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000590000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000590000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000590000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000590000 User000: 4 hungry   
0000590000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000590000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000590000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000590000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000590000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000590000 User000: 3 thinking 
0000590000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000590000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 User000: 4 eating   
0000590000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000590000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000590000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000590000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1004
           TICK   : Ctr=      1005
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000590000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000590000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000590000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000590000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000590000 User000: 2 hungry   
0000590000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1006
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000590000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000590000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000590000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000590000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000590000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000590000 User000: 1 thinking 
0000590000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000590000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 User000: 2 eating   
0000590000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000590000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000590000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000590000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1007
           TICK   : Ctr=      1008
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000590000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000590000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000590000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000590000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000590000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000590000 User000: 0 hungry   
0000590000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000590000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000590000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000590000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000590000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000590000 User000: 4 thinking 
0000590000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000590000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 User000: 0 eating   
0000590000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000590000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000590000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000590000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1009
           TICK   : Ctr=      1010
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000590000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000590000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000590000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000590000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000590000 User000: 3 hungry   
0000590000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1011
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000590000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000590000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000590000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000590000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000590000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000590000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000590000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000590000 User000: 2 thinking 
0000590000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000590000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000590000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000590000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000590000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000590000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 User000: 3 eating   
0000590000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000590000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000590000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000590000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000590000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000590000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000590000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000590000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000590000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000590000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000590000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000590000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000590000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1012
           TICK   : Ctr=      1013
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000600000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000600000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000600000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000600000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000600000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000600000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000600000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000600000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000600000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000600000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000600000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000600000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000600000 User000: 1 hungry   
0000600000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000600000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000600000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000600000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000600000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000600000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000600000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000600000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000600000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000600000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000600000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000600000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000600000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000600000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000600000 User000: 0 thinking 
0000600000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000600000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000600000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000600000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000600000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000600000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000600000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000600000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000600000 User000: 1 eating   
0000600000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000600000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000600000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000600000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000600000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000600000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000600000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000600000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000600000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000600000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000600000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000600000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000600000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000600000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000600000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000600000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000600000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000600000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000600000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000600000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000600000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1014
           TICK   : Ctr=      1015
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000600000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000600000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000600000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000600000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000600000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000600000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000600000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000600000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000600000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000600000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000600000 User000: 4 hungry   
0000600000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000600000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000600000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1016
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000600000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000600000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000600000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000600000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000600000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000600000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000600000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000600000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000600000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000600000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000600000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000600000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000600000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000600000 User000: 3 thinking 
0000600000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000600000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000600000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000600000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000600000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000600000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000600000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000600000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000600000 User000: 4 eating   
0000600000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000600000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000600000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000600000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000600000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000600000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000600000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000600000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000600000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000600000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000600000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000600000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000600000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000600000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000600000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000600000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000600000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000600000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000600000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000600000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000600000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000600000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1017
           TICK   : Ctr=      1018
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000610000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000610000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 2 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 1 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 2 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1019
           TICK   : Ctr=      1020
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000610000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 0 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1021
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000610000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 4 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 0 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1022
           TICK   : Ctr=      1023
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000610000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000610000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 3 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 2 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 3 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1024
           TICK   : Ctr=      1025
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000610000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 1 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1026
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000610000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 0 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 1 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1027
           TICK   : Ctr=      1028
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000610000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000610000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 4 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 3 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 4 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1029
           TICK   : Ctr=      1030
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000610000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 2 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1031
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000610000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 1 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 2 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1032
           TICK   : Ctr=      1033
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000610000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000610000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000610000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000610000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000610000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000610000 User000: 0 hungry   
0000610000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000610000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000610000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000610000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000610000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000610000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000610000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000610000 User000: 4 thinking 
0000610000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000610000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000610000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000610000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000610000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000610000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 User000: 0 eating   
0000610000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000610000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000610000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000610000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000610000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000610000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000610000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000610000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000610000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000610000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000610000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000610000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000610000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1034
           TICK   : Ctr=      1035
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000620000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000620000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000620000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000620000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000620000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000620000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000620000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000620000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000620000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000620000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000620000 User000: 3 hungry   
0000620000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000620000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000620000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1036
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000620000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000620000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000620000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000620000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000620000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000620000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000620000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000620000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000620000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000620000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000620000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000620000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000620000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000620000 User000: 2 thinking 
0000620000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000620000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000620000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000620000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000620000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000620000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000620000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000620000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000620000 User000: 3 eating   
0000620000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000620000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000620000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000620000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000620000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000620000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000620000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000620000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000620000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000620000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000620000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000620000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000620000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000620000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000620000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000620000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000620000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000620000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000620000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000620000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000620000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1037
           TICK   : Ctr=      1038
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000620000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000620000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000620000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000620000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000620000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000620000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000620000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000620000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000620000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000620000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000620000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000620000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000620000 User000: 1 hungry   
0000620000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000620000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000620000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000620000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000620000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000620000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000620000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000620000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000620000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000620000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000620000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000620000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000620000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000620000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000620000 User000: 0 thinking 
0000620000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000620000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000620000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000620000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000620000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000620000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000620000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000620000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000620000 User000: 1 eating   
0000620000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000620000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000620000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000620000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000620000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000620000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000620000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000620000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000620000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000620000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000620000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000620000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000620000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000620000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000620000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000620000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000620000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000620000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000620000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000620000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000620000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000620000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1039
           TICK   : Ctr=      1040
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000630000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 4 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1041
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000630000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 3 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 4 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1042
           TICK   : Ctr=      1043
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000630000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000630000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 2 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 1 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 2 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1044
           TICK   : Ctr=      1045
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000630000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 0 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1046
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000630000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 4 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 0 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1047
           TICK   : Ctr=      1048
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000630000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000630000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 3 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 2 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 3 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1049
           TICK   : Ctr=      1050
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000630000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 1 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1051
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000630000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 0 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 1 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1052
           TICK   : Ctr=      1053
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000630000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000630000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 4 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 3 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 4 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1054
           TICK   : Ctr=      1055
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000630000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 2 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1056
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000630000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 1 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 2 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1057
           TICK   : Ctr=      1058
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000630000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000630000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 0 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 4 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 0 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1059
           TICK   : Ctr=      1060
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000630000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 3 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1061
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000630000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 2 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 3 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1062
           TICK   : Ctr=      1063
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000630000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000630000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 1 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 0 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 1 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1064
           TICK   : Ctr=      1065
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000630000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000630000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000630000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000630000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000630000 User000: 4 hungry   
0000630000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1066
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000630000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000630000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000630000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000630000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000630000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000630000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000630000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000630000 User000: 3 thinking 
0000630000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000630000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000630000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000630000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000630000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000630000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 User000: 4 eating   
0000630000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000630000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000630000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000630000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000630000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000630000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000630000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000630000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000630000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000630000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000630000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000630000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000630000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000630000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1067
           TICK   : Ctr=      1068
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000640000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000640000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 2 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 1 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 2 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1069
           TICK   : Ctr=      1070
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000640000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 0 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1071
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000640000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 4 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 0 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1072
           TICK   : Ctr=      1073
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000640000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000640000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 3 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 2 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 3 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1074
           TICK   : Ctr=      1075
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000640000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 1 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1076
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000640000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 0 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 1 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1077
           TICK   : Ctr=      1078
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000640000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000640000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 4 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 3 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 4 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1079
           TICK   : Ctr=      1080
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000640000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 2 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1081
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000640000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 1 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 2 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1082
           TICK   : Ctr=      1083
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000640000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000640000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 0 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000640000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000640000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000640000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000640000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000640000 User000: 4 thinking 
0000640000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000640000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000640000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000640000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000640000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 User000: 0 eating   
0000640000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000640000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000640000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000640000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000640000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000640000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000640000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000640000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000640000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000640000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000640000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1084
           TICK   : Ctr=      1085
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000640000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000640000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000640000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000640000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000640000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000640000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000640000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000640000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000640000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000640000 User000: 3 hungry   
0000640000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000640000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000640000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1086
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000650000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 2 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 3 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1087
           TICK   : Ctr=      1088
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000650000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000650000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 1 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 0 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 1 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1089
           TICK   : Ctr=      1090
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000650000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 4 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1091
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000650000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 3 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 4 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1092
           TICK   : Ctr=      1093
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000650000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000650000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 2 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 1 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 2 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1094
           TICK   : Ctr=      1095
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000650000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 0 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1096
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000650000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 4 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 0 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1097
           TICK   : Ctr=      1098
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000650000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000650000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 3 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 2 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 3 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1099
           TICK   : Ctr=      1100
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000650000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 1 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1101
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000650000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 0 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 1 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1102
           TICK   : Ctr=      1103
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000650000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000650000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 4 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 3 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 4 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1104
           TICK   : Ctr=      1105
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000650000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 2 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1106
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000650000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 1 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 2 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1107
           TICK   : Ctr=      1108
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000650000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000650000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 0 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 4 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 0 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1109
           TICK   : Ctr=      1110
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000650000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 3 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1111
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000650000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 2 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 3 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1112
           TICK   : Ctr=      1113
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000650000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000650000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 1 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 0 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 1 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1114
           TICK   : Ctr=      1115
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000650000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000650000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000650000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000650000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000650000 User000: 4 hungry   
0000650000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1116
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000650000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000650000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000650000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000650000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000650000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000650000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000650000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000650000 User000: 3 thinking 
0000650000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000650000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000650000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000650000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000650000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000650000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 User000: 4 eating   
0000650000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000650000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000650000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000650000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000650000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000650000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000650000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000650000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000650000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000650000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000650000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000650000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000650000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000650000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1117
           TICK   : Ctr=      1118
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000660000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000660000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000660000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000660000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000660000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000660000 User000: 2 hungry   
0000660000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000660000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000660000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000660000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000660000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000660000 User000: 1 thinking 
0000660000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000660000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 User000: 2 eating   
0000660000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000660000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000660000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000660000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1119
           TICK   : Ctr=      1120
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000660000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000660000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000660000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000660000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000660000 User000: 0 hungry   
0000660000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1121
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000660000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000660000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000660000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000660000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000660000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000660000 User000: 4 thinking 
0000660000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000660000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 User000: 0 eating   
0000660000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000660000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000660000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000660000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1122
           TICK   : Ctr=      1123
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000660000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000660000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000660000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000660000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000660000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000660000 User000: 3 hungry   
0000660000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000660000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000660000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000660000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000660000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000660000 User000: 2 thinking 
0000660000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000660000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 User000: 3 eating   
0000660000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000660000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000660000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000660000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1124
           TICK   : Ctr=      1125
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000660000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000660000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000660000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000660000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000660000 User000: 1 hungry   
0000660000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1126
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000660000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000660000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000660000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000660000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000660000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000660000 User000: 0 thinking 
0000660000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000660000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 User000: 1 eating   
0000660000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000660000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000660000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000660000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000660000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1127
           TICK   : Ctr=      1128
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000660000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000660000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000660000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000660000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000660000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000660000 User000: 4 hungry   
0000660000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000660000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000660000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000660000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000660000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000660000 User000: 3 thinking 
0000660000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000660000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000660000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000660000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 User000: 4 eating   
0000660000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000660000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000660000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000660000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000660000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000660000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000660000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000660000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000660000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000660000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000660000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000660000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000660000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000660000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1129
           TICK   : Ctr=      1130
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000660000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000660000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000660000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000660000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000660000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000660000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000660000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000660000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000660000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000660000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 2 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1131
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000670000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 1 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 2 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1132
           TICK   : Ctr=      1133
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000670000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000670000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 0 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 4 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 0 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1134
           TICK   : Ctr=      1135
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000670000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 3 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1136
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000670000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 2 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 3 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1137
           TICK   : Ctr=      1138
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000670000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000670000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 1 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 0 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 1 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1139
           TICK   : Ctr=      1140
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000670000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 4 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1141
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000670000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 3 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 4 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1142
           TICK   : Ctr=      1143
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000670000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000670000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 2 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 1 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 2 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1144
           TICK   : Ctr=      1145
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000670000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 0 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1146
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000670000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 4 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 0 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1147
           TICK   : Ctr=      1148
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000670000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000670000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 3 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 2 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 3 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1149
           TICK   : Ctr=      1150
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000670000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 1 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1151
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000670000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 0 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 1 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1152
           TICK   : Ctr=      1153
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000670000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000670000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 4 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 3 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 4 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1154
           TICK   : Ctr=      1155
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000670000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000670000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000670000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000670000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000670000 User000: 2 hungry   
0000670000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1156
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000670000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000670000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000670000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000670000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000670000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000670000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000670000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000670000 User000: 1 thinking 
0000670000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000670000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000670000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000670000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000670000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000670000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 User000: 2 eating   
0000670000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000670000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000670000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000670000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000670000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000670000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000670000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000670000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000670000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000670000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000670000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000670000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000670000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000670000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1157
           TICK   : Ctr=      1158
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000680000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000680000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 0 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 4 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 0 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1159
           TICK   : Ctr=      1160
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000680000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 3 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1161
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000680000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 2 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 3 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1162
           TICK   : Ctr=      1163
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000680000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000680000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 1 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 0 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 1 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1164
           TICK   : Ctr=      1165
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000680000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 4 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1166
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000680000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 3 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 4 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1167
           TICK   : Ctr=      1168
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000680000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000680000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 2 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 1 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 2 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1169
           TICK   : Ctr=      1170
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000680000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 0 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1171
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000680000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 4 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 0 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1172
           TICK   : Ctr=      1173
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000680000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000680000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000680000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000680000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000680000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000680000 User000: 3 hungry   
0000680000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000680000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000680000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000680000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000680000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000680000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000680000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000680000 User000: 2 thinking 
0000680000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000680000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000680000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000680000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000680000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000680000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 User000: 3 eating   
0000680000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000680000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000680000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000680000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000680000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000680000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000680000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000680000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000680000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000680000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000680000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000680000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000680000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1174
           TICK   : Ctr=      1175
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000690000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000690000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000690000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000690000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000690000 User000: 1 hungry   
0000690000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1176
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000690000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000690000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000690000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000690000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000690000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000690000 User000: 0 thinking 
0000690000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000690000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 User000: 1 eating   
0000690000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000690000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000690000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000690000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000690000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1177
           TICK   : Ctr=      1178
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000690000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000690000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000690000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000690000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000690000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000690000 User000: 4 hungry   
0000690000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000690000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000690000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000690000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000690000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000690000 User000: 3 thinking 
0000690000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000690000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 User000: 4 eating   
0000690000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000690000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000690000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000690000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000690000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1179
           TICK   : Ctr=      1180
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000690000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000690000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000690000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000690000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000690000 User000: 2 hungry   
0000690000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1181
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000690000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000690000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000690000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000690000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000690000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000690000 User000: 1 thinking 
0000690000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000690000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 User000: 2 eating   
0000690000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000690000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000690000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000690000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1182
           TICK   : Ctr=      1183
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000690000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000690000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000690000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000690000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000690000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000690000 User000: 0 hungry   
0000690000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000690000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000690000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000690000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000690000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000690000 User000: 4 thinking 
0000690000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000690000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 User000: 0 eating   
0000690000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000690000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000690000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000690000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1184
           TICK   : Ctr=      1185
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000690000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000690000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000690000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000690000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000690000 User000: 3 hungry   
0000690000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1186
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000690000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000690000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000690000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000690000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000690000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000690000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000690000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000690000 User000: 2 thinking 
0000690000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000690000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000690000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000690000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000690000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000690000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 User000: 3 eating   
0000690000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000690000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000690000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000690000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000690000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000690000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000690000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000690000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000690000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000690000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000690000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000690000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000690000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1187
           TICK   : Ctr=      1188
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000700000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000700000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000700000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000700000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000700000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000700000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000700000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000700000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000700000 User000: 1 hungry   
0000700000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000700000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000700000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000700000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000700000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000700000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000700000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000700000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000700000 User000: 0 thinking 
0000700000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000700000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000700000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000700000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000700000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000700000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000700000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000700000 User000: 1 eating   
0000700000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000700000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000700000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000700000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000700000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000700000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000700000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000700000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000700000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000700000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000700000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000700000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000700000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1189
           TICK   : Ctr=      1190
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000700000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000700000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000700000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000700000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000700000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000700000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000700000 User000: 4 hungry   
0000700000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1191
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000700000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000700000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000700000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000700000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000700000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000700000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000700000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000700000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000700000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000700000 User000: 3 thinking 
0000700000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000700000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000700000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000700000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000700000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000700000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000700000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000700000 User000: 4 eating   
0000700000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000700000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000700000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000700000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000700000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000700000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000700000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000700000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000700000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000700000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000700000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000700000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000700000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1192
           TICK   : Ctr=      1193
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000700000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000700000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000700000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000700000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000700000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000700000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000700000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000700000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000700000 User000: 2 hungry   
0000700000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000700000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000700000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000700000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000700000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000700000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000700000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000700000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000700000 User000: 1 thinking 
0000700000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000700000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000700000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000700000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000700000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000700000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000700000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000700000 User000: 2 eating   
0000700000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000700000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000700000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000700000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000700000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000700000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000700000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000700000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000700000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000700000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000700000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000700000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000700000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000700000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000700000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1194
           TICK   : Ctr=      1195
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000700000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000700000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000700000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000700000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000700000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000700000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000700000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000700000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000700000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000700000 User000: 0 hungry   
0000700000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000700000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000700000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1196
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 4 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 0 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1197
           TICK   : Ctr=      1198
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 3 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 2 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 3 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1199
           TICK   : Ctr=      1200
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 1 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1201
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 0 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 1 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1202
           TICK   : Ctr=      1203
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 4 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 3 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 4 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1204
           TICK   : Ctr=      1205
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 2 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1206
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 1 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 2 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1207
           TICK   : Ctr=      1208
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 0 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 4 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 0 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1209
           TICK   : Ctr=      1210
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 3 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1211
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 2 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 3 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
           TICK   : Ctr=      1212
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1213
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 1 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 0 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 1 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1214
           TICK   : Ctr=      1215
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 4 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1216
           TICK   : Ctr=      1217
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 3 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 4 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1218
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 2 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 1 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 2 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1219
           TICK   : Ctr=      1220
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 0 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1221
           TICK   : Ctr=      1222
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 4 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 0 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1223
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 2 thinking 
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1224
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 3 hungry   
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 3 eating   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1225
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 1 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1226
           TICK   : Ctr=      1227
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 0 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 1 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1228
           TICK   : Ctr=      1229
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 4 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 3 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 4 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1230
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 2 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1231
           TICK   : Ctr=      1232
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 1 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 2 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1233
           TICK   : Ctr=      1234
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000710000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 0 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 4 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 0 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1235
           TICK   : Ctr=      1236
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000710000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 3 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1237
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000710000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000710000 User000: 2 thinking 
0000710000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000710000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000710000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 User000: 3 eating   
0000710000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000710000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000710000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000710000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000710000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000710000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000710000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000710000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000710000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000710000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000710000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000710000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1238
           TICK   : Ctr=      1239
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000710000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000710000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000710000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000710000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000710000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000710000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000710000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000710000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000710000 User000: 1 hungry   
0000710000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000710000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000710000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000710000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000710000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000710000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000710000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000710000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000710000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000710000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000710000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000710000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000710000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000710000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 0 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 1 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1240
           TICK   : Ctr=      1241
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000720000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 4 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1242
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000720000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 3 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 4 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1243
           TICK   : Ctr=      1244
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000720000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000720000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 2 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 1 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 2 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1245
           TICK   : Ctr=      1246
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000720000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 0 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1247
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000720000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 4 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 0 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1248
           TICK   : Ctr=      1249
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000720000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000720000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 3 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 2 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 3 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1250
           TICK   : Ctr=      1251
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000720000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 1 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1252
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000720000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 0 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 1 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1253
           TICK   : Ctr=      1254
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000720000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000720000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 4 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 3 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 4 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1255
           TICK   : Ctr=      1256
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000720000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 2 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1257
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000720000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 1 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 2 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1258
           TICK   : Ctr=      1259
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000720000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000720000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 0 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 4 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 0 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1260
           TICK   : Ctr=      1261
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000720000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 3 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1262
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000720000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 2 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 3 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000720000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000720000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000720000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000720000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000720000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000720000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000720000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000720000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1263
           TICK   : Ctr=      1264
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000720000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000720000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000720000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000720000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000720000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000720000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000720000 User000: 1 hungry   
0000720000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000720000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000720000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000720000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000720000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000720000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000720000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000720000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000720000 User000: 0 thinking 
0000720000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000720000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000720000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000720000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000720000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000720000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000720000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000720000 User000: 1 eating   
0000720000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000720000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000720000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000730000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000730000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000730000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000730000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000730000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000730000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000730000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000730000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000730000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000730000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000730000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000730000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000730000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000730000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000730000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000730000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000730000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000730000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000730000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000730000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000730000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000730000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1265
           TICK   : Ctr=      1266
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000740000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000740000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000740000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000740000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000740000 User000: 4 hungry   
0000740000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1267
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000740000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000740000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000740000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000740000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000740000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000740000 User000: 3 thinking 
0000740000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000740000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 User000: 4 eating   
0000740000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000740000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000740000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000740000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000740000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1268
           TICK   : Ctr=      1269
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000740000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000740000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000740000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000740000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000740000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000740000 User000: 2 hungry   
0000740000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000740000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000740000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000740000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000740000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000740000 User000: 1 thinking 
0000740000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000740000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 User000: 2 eating   
0000740000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000740000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000740000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000740000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1270
           TICK   : Ctr=      1271
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000740000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000740000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000740000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000740000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000740000 User000: 0 hungry   
0000740000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1272
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000740000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000740000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000740000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000740000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000740000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000740000 User000: 4 thinking 
0000740000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000740000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 User000: 0 eating   
0000740000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000740000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000740000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000740000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1273
           TICK   : Ctr=      1274
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000740000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000740000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000740000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000740000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000740000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000740000 User000: 3 hungry   
0000740000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000740000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000740000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000740000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000740000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000740000 User000: 2 thinking 
0000740000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000740000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 User000: 3 eating   
0000740000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000740000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000740000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000740000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1275
           TICK   : Ctr=      1276
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000740000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000740000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000740000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000740000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000740000 User000: 1 hungry   
0000740000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1277
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000740000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000740000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000740000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000740000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000740000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000740000 User000: 0 thinking 
0000740000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000740000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 User000: 1 eating   
0000740000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000740000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000740000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000740000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000740000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1278
           TICK   : Ctr=      1279
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000740000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000740000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000740000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000740000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000740000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000740000 User000: 4 hungry   
0000740000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000740000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000740000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000740000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000740000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000740000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000740000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000740000 User000: 3 thinking 
0000740000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000740000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000740000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000740000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000740000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000740000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 User000: 4 eating   
0000740000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000740000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000740000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000740000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000740000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000740000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000740000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000740000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000740000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000740000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000740000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000740000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000740000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000740000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1280
           TICK   : Ctr=      1281
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000750000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000750000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000750000 User000: 2 hungry   
0000750000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1282
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000750000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000750000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000750000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000750000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000750000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000750000 User000: 1 thinking 
0000750000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000750000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 User000: 2 eating   
0000750000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000750000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000750000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000750000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1283
           TICK   : Ctr=      1284
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000750000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000750000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000750000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000750000 User000: 0 hungry   
0000750000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000750000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000750000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000750000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000750000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000750000 User000: 4 thinking 
0000750000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000750000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 User000: 0 eating   
0000750000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000750000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000750000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000750000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1285
           TICK   : Ctr=      1286
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000750000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000750000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000750000 User000: 3 hungry   
0000750000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1287
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000750000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000750000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000750000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000750000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000750000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000750000 User000: 2 thinking 
0000750000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000750000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 User000: 3 eating   
0000750000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000750000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000750000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000750000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1288
           TICK   : Ctr=      1289
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000750000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000750000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000750000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000750000 User000: 1 hungry   
0000750000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000750000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000750000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000750000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000750000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000750000 User000: 0 thinking 
0000750000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000750000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 User000: 1 eating   
0000750000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000750000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000750000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000750000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000750000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1290
           TICK   : Ctr=      1291
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000750000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000750000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000750000 User000: 4 hungry   
0000750000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1292
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000750000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000750000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000750000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000750000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000750000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000750000 User000: 3 thinking 
0000750000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000750000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 User000: 4 eating   
0000750000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000750000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000750000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000750000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1293
           TICK   : Ctr=      1294
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000750000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000750000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000750000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000750000 User000: 2 hungry   
0000750000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000750000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000750000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000750000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000750000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000750000 User000: 1 thinking 
0000750000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000750000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000750000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000750000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 User000: 2 eating   
0000750000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000750000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000750000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000750000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000750000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000750000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000750000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000750000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000750000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000750000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000750000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000750000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000750000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1295
           TICK   : Ctr=      1296
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000750000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000750000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000750000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000750000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000750000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000750000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000750000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000750000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 0 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1297
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000760000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 4 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 0 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1298
           TICK   : Ctr=      1299
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000760000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000760000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 3 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 2 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 3 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1300
           TICK   : Ctr=      1301
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000760000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 1 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1302
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000760000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 0 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 1 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1303
           TICK   : Ctr=      1304
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000760000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000760000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 4 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 3 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 4 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1305
           TICK   : Ctr=      1306
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000760000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 2 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1307
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000760000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 1 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 2 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1308
           TICK   : Ctr=      1309
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000760000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000760000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 0 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 4 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 0 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1310
           TICK   : Ctr=      1311
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000760000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 3 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1312
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000760000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 2 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 3 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1313
           TICK   : Ctr=      1314
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000760000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000760000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 1 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 0 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 1 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1315
           TICK   : Ctr=      1316
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000760000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 4 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1317
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000760000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 3 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 4 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1318
           TICK   : Ctr=      1319
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000760000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000760000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 2 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 1 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 2 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000760000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000760000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000760000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000760000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000760000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000760000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1320
           TICK   : Ctr=      1321
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000760000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000760000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000760000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000760000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000760000 User000: 0 hungry   
0000760000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1322
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000760000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000760000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000760000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000760000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000760000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000760000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000760000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000760000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000760000 User000: 4 thinking 
0000760000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000760000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000760000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000760000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000760000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000760000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 User000: 0 eating   
0000760000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000760000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000760000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000760000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000760000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000760000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000760000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000760000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1323
           TICK   : Ctr=      1324
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000770000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000770000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 3 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 2 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 3 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1325
           TICK   : Ctr=      1326
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000770000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 1 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1327
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000770000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 0 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 1 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1328
           TICK   : Ctr=      1329
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000770000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000770000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 4 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 3 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 4 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1330
           TICK   : Ctr=      1331
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000770000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 2 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1332
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000770000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 1 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 2 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1333
           TICK   : Ctr=      1334
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000770000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000770000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 0 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 4 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 0 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1335
           TICK   : Ctr=      1336
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000770000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 3 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1337
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000770000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 2 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 3 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1338
           TICK   : Ctr=      1339
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000770000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000770000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 1 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 0 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 1 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1340
           TICK   : Ctr=      1341
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000770000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 4 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1342
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000770000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 3 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 4 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1343
           TICK   : Ctr=      1344
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000770000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000770000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 2 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 1 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 2 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1345
           TICK   : Ctr=      1346
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000770000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 0 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1347
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000770000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 4 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 0 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1348
           TICK   : Ctr=      1349
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000770000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000770000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 3 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 2 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 3 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1350
           TICK   : Ctr=      1351
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000770000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 1 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1352
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000770000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000770000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000770000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000770000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000770000 User000: 0 thinking 
0000770000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000770000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000770000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000770000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 User000: 1 eating   
0000770000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000770000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000770000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000770000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000770000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000770000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000770000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000770000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000770000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000770000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000770000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000770000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1353
           TICK   : Ctr=      1354
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000770000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000770000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000770000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000770000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000770000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000770000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000770000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000770000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000770000 User000: 4 hungry   
0000770000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000770000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000770000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000770000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000770000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000770000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000770000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000770000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000770000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000780000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000780000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000780000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000780000 User000: 3 thinking 
0000780000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000780000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 User000: 4 eating   
0000780000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000780000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000780000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000780000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000780000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1355
           TICK   : Ctr=      1356
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000780000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000780000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000780000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000780000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000780000 User000: 2 hungry   
0000780000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1357
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000780000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000780000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000780000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000780000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000780000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000780000 User000: 1 thinking 
0000780000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000780000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 User000: 2 eating   
0000780000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000780000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000780000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000780000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1358
           TICK   : Ctr=      1359
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000780000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000780000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000780000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000780000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000780000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000780000 User000: 0 hungry   
0000780000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000780000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000780000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000780000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000780000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000780000 User000: 4 thinking 
0000780000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000780000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 User000: 0 eating   
0000780000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000780000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000780000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000780000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1360
           TICK   : Ctr=      1361
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000780000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000780000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000780000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000780000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000780000 User000: 3 hungry   
0000780000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1362
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000780000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000780000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000780000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000780000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000780000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000780000 User000: 2 thinking 
0000780000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000780000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 User000: 3 eating   
0000780000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000780000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000780000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000780000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1363
           TICK   : Ctr=      1364
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000780000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000780000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000780000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000780000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000780000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000780000 User000: 1 hungry   
0000780000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000780000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000780000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000780000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000780000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000780000 User000: 0 thinking 
0000780000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000780000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 User000: 1 eating   
0000780000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000780000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000780000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000780000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000780000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1365
           TICK   : Ctr=      1366
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000780000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000780000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000780000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000780000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000780000 User000: 4 hungry   
0000780000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1367
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000780000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000780000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000780000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000780000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000780000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000780000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000780000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000780000 User000: 3 thinking 
0000780000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000780000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000780000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000780000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000780000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000780000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 User000: 4 eating   
0000780000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000780000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000780000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000780000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000780000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000780000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000780000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000780000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000780000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000780000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000780000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000780000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000780000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000780000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1368
           TICK   : Ctr=      1369
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 2 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 1 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 2 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1370
           TICK   : Ctr=      1371
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 0 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1372
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 4 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 0 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1373
           TICK   : Ctr=      1374
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 3 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 2 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 3 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1375
           TICK   : Ctr=      1376
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 1 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1377
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 0 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 1 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1378
           TICK   : Ctr=      1379
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 4 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 3 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 4 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1380
           TICK   : Ctr=      1381
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 2 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1382
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 1 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 2 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1383
           TICK   : Ctr=      1384
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 0 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 4 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 0 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1385
           TICK   : Ctr=      1386
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 3 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1387
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 2 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 3 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1388
           TICK   : Ctr=      1389
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 1 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 0 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 1 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1390
           TICK   : Ctr=      1391
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 4 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1392
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 3 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 4 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1393
           TICK   : Ctr=      1394
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 2 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 1 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 2 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1395
           TICK   : Ctr=      1396
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 0 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1397
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 4 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 0 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1398
           TICK   : Ctr=      1399
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 3 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 2 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 3 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1400
           TICK   : Ctr=      1401
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 1 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1402
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 0 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 1 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1403
           TICK   : Ctr=      1404
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 4 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 3 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 4 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1405
           TICK   : Ctr=      1406
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 2 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1407
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 1 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 2 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1408
           TICK   : Ctr=      1409
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 0 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 4 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 0 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1410
           TICK   : Ctr=      1411
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 3 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1412
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 2 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 3 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1413
           TICK   : Ctr=      1414
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000790000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 1 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 0 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 1 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1415
           TICK   : Ctr=      1416
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000790000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 4 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1417
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000790000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 3 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 4 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1418
           TICK   : Ctr=      1419
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000790000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000790000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000790000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000790000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000790000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000790000 User000: 2 hungry   
0000790000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000790000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000790000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000790000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000790000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000790000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000790000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000790000 User000: 1 thinking 
0000790000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000790000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000790000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000790000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000790000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000790000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 User000: 2 eating   
0000790000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000790000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000790000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000790000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000790000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000790000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000790000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000790000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000790000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000790000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000790000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000790000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000790000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000790000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1420
           TICK   : Ctr=      1421
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000800000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 0 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1422
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000800000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 4 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 0 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1423
           TICK   : Ctr=      1424
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000800000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000800000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 3 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 2 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 3 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1425
           TICK   : Ctr=      1426
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000800000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 1 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1427
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000800000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 0 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 1 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1428
           TICK   : Ctr=      1429
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000800000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000800000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 4 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 3 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 4 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1430
           TICK   : Ctr=      1431
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000800000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 2 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1432
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000800000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 1 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 2 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1433
           TICK   : Ctr=      1434
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000800000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000800000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 0 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 4 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 0 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1435
           TICK   : Ctr=      1436
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000800000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 3 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1437
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000800000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 2 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 3 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1438
           TICK   : Ctr=      1439
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000800000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000800000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 1 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 0 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 1 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1440
           TICK   : Ctr=      1441
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000800000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 4 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1442
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000800000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 3 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 4 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1443
           TICK   : Ctr=      1444
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000800000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000800000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 2 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 1 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 2 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1445
           TICK   : Ctr=      1446
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000800000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000800000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000800000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000800000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000800000 User000: 0 hungry   
0000800000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1447
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000800000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000800000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000800000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000800000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000800000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000800000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000800000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000800000 User000: 4 thinking 
0000800000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000800000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000800000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000800000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000800000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000800000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 User000: 0 eating   
0000800000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000800000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000800000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000800000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000800000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000800000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000800000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000800000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000800000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000800000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000800000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000800000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000800000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1448
           TICK   : Ctr=      1449
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000810000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000810000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000810000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000810000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000810000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000810000 User000: 3 hungry   
0000810000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000810000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000810000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000810000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000810000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000810000 User000: 2 thinking 
0000810000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000810000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 User000: 3 eating   
0000810000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000810000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000810000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000810000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1450
           TICK   : Ctr=      1451
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000810000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000810000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000810000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000810000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000810000 User000: 1 hungry   
0000810000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1452
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000810000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000810000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000810000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000810000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000810000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000810000 User000: 0 thinking 
0000810000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000810000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 User000: 1 eating   
0000810000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000810000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000810000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000810000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000810000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1453
           TICK   : Ctr=      1454
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000810000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000810000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000810000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000810000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000810000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000810000 User000: 4 hungry   
0000810000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000810000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000810000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000810000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000810000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000810000 User000: 3 thinking 
0000810000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000810000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 User000: 4 eating   
0000810000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000810000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000810000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000810000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1455
           TICK   : Ctr=      1456
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000810000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000810000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000810000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000810000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000810000 User000: 2 hungry   
0000810000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1457
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000810000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000810000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000810000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000810000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000810000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000810000 User000: 1 thinking 
0000810000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000810000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 User000: 2 eating   
0000810000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000810000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000810000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000810000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1458
           TICK   : Ctr=      1459
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000810000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000810000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000810000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000810000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000810000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000810000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000810000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000810000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000810000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000810000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000810000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000810000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000810000 User000: 0 hungry   
0000810000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000810000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000810000 User000: 4 thinking 
0000810000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000810000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000810000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000810000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000810000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000810000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 User000: 0 eating   
0000810000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000810000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000810000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000810000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000810000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000810000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000810000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000810000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000810000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000810000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000810000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000810000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000810000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1460
           TICK   : Ctr=      1461
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000820000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000820000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000820000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000820000 User000: 3 hungry   
0000820000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1462
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000820000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000820000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000820000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000820000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000820000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000820000 User000: 2 thinking 
0000820000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000820000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 User000: 3 eating   
0000820000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000820000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000820000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000820000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1463
           TICK   : Ctr=      1464
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000820000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000820000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000820000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000820000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000820000 User000: 1 hungry   
0000820000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000820000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000820000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000820000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000820000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000820000 User000: 0 thinking 
0000820000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000820000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 User000: 1 eating   
0000820000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000820000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000820000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000820000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000820000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1465
           TICK   : Ctr=      1466
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000820000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000820000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000820000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000820000 User000: 4 hungry   
0000820000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1467
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000820000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000820000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000820000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000820000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000820000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000820000 User000: 3 thinking 
0000820000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000820000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 User000: 4 eating   
0000820000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000820000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000820000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000820000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1468
           TICK   : Ctr=      1469
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000820000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000820000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000820000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000820000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000820000 User000: 2 hungry   
0000820000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000820000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000820000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000820000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000820000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000820000 User000: 1 thinking 
0000820000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000820000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 User000: 2 eating   
0000820000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000820000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000820000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000820000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1470
           TICK   : Ctr=      1471
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000820000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000820000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000820000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000820000 User000: 0 hungry   
0000820000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1472
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000820000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000820000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000820000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000820000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000820000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000820000 User000: 4 thinking 
0000820000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000820000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 User000: 0 eating   
0000820000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000820000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000820000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000820000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1473
           TICK   : Ctr=      1474
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000820000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000820000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000820000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000820000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000820000 User000: 3 hungry   
0000820000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000820000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000820000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000820000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000820000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000820000 User000: 2 thinking 
0000820000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000820000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000820000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000820000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000820000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 User000: 3 eating   
0000820000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000820000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000820000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000820000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000820000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000820000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000820000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000820000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000820000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000820000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000820000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000820000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000820000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1475
           TICK   : Ctr=      1476
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000820000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000820000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000820000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000820000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000820000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000820000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000820000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 1 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1477
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000830000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 0 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 1 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1478
           TICK   : Ctr=      1479
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000830000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000830000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 4 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 3 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 4 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1480
           TICK   : Ctr=      1481
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000830000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 2 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1482
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000830000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 1 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 2 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1483
           TICK   : Ctr=      1484
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000830000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000830000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 0 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 4 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 0 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
           TICK   : Ctr=      1485
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1486
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000830000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 3 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1487
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000830000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 2 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 3 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1488
           TICK   : Ctr=      1489
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000830000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000830000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 1 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 0 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 1 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1490
           TICK   : Ctr=      1491
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000830000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 4 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1492
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000830000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 3 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 4 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1493
           TICK   : Ctr=      1494
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000830000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000830000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 2 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 1 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 2 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1495
           TICK   : Ctr=      1496
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000830000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 0 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1497
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000830000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 4 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 0 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1498
           TICK   : Ctr=      1499
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000830000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000830000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 3 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 2 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 3 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1500
           TICK   : Ctr=      1501
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000830000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 1 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1502
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000830000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 0 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 1 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1503
           TICK   : Ctr=      1504
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000830000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000830000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000830000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000830000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000830000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000830000 User000: 4 hungry   
0000830000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000830000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000830000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000830000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000830000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000830000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000830000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000830000 User000: 3 thinking 
0000830000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000830000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000830000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000830000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000830000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000830000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 User000: 4 eating   
0000830000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000830000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000830000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000830000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000830000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000830000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000830000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000830000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000830000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000830000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000830000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000830000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000830000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000830000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1505
           TICK   : Ctr=      1506
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000840000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000840000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000840000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000840000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000840000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000840000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000840000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000840000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000840000 User000: 2 hungry   
0000840000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000840000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1507
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000840000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000840000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000840000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000840000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000840000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000840000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000840000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000840000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000840000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000840000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000840000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000840000 User000: 1 thinking 
0000840000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000840000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000840000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000840000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000840000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000840000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000840000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000840000 User000: 2 eating   
0000840000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000840000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000840000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000840000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000840000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000840000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000840000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000840000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000840000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000840000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000840000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000840000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000840000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1508
           TICK   : Ctr=      1509
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000840000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000840000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000840000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000840000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000840000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000840000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000840000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000840000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000840000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000840000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000840000 User000: 0 hungry   
0000840000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000840000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000840000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000840000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000840000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000840000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000840000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000840000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000840000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000840000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000840000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000840000 User000: 4 thinking 
0000840000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000840000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000840000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000840000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000840000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000840000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000840000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000840000 User000: 0 eating   
0000840000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000840000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000840000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000840000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000840000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000840000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000840000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000840000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000840000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000840000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000840000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000840000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000840000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1510
           TICK   : Ctr=      1511
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000840000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000840000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000840000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000840000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000840000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000840000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000840000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000840000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000840000 User000: 3 hungry   
0000840000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000840000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1512
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000840000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000840000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000840000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000840000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000840000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000840000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000840000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000840000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000840000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000840000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000840000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000840000 User000: 2 thinking 
0000840000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000840000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000840000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000840000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000840000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000840000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000840000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000840000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000840000 User000: 3 eating   
0000840000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000840000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000840000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000840000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000840000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000840000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000840000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000840000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000840000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000840000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000840000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000840000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000840000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000840000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000840000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000840000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1513
           TICK   : Ctr=      1514
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000840000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000840000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000840000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000840000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000850000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000850000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000850000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000850000 User000: 1 hungry   
0000850000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000850000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000850000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000850000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000850000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000850000 User000: 0 thinking 
0000850000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000850000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 User000: 1 eating   
0000850000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000850000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000850000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000850000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000850000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1515
           TICK   : Ctr=      1516
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000850000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000850000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000850000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000850000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000850000 User000: 4 hungry   
0000850000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1517
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000850000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000850000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000850000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000850000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000850000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000850000 User000: 3 thinking 
0000850000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000850000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 User000: 4 eating   
0000850000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000850000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000850000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000850000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1518
           TICK   : Ctr=      1519
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000850000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000850000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000850000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000850000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000850000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000850000 User000: 2 hungry   
0000850000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000850000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000850000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000850000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000850000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000850000 User000: 1 thinking 
0000850000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000850000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 User000: 2 eating   
0000850000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000850000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000850000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000850000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1520
           TICK   : Ctr=      1521
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000850000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000850000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000850000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000850000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000850000 User000: 0 hungry   
0000850000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1522
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000850000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000850000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000850000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000850000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000850000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000850000 User000: 4 thinking 
0000850000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000850000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 User000: 0 eating   
0000850000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000850000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000850000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000850000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1523
           TICK   : Ctr=      1524
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000850000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000850000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000850000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000850000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000850000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000850000 User000: 3 hungry   
0000850000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000850000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000850000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000850000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000850000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000850000 User000: 2 thinking 
0000850000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000850000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 User000: 3 eating   
0000850000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000850000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000850000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000850000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1525
           TICK   : Ctr=      1526
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000850000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000850000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000850000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000850000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000850000 User000: 1 hungry   
0000850000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1527
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000850000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000850000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000850000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000850000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000850000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000850000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000850000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000850000 User000: 0 thinking 
0000850000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000850000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000850000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000850000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000850000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000850000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 User000: 1 eating   
0000850000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000850000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000850000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000850000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000850000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000850000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000850000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000850000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000850000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000850000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000850000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000850000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000850000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000850000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1528
           TICK   : Ctr=      1529
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000860000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000860000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000860000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000860000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000860000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000860000 User000: 4 hungry   
0000860000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000860000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000860000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000860000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000860000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000860000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000860000 User000: 3 thinking 
0000860000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000860000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 User000: 4 eating   
0000860000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000860000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000860000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000860000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000860000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1530
           TICK   : Ctr=      1531
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000860000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000860000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000860000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000860000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000860000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000860000 User000: 2 hungry   
0000860000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1532
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000860000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000860000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000860000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000860000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000860000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000860000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000860000 User000: 1 thinking 
0000860000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000860000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 User000: 2 eating   
0000860000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000860000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000860000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000860000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1533
           TICK   : Ctr=      1534
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000860000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000860000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000860000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000860000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000860000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000860000 User000: 0 hungry   
0000860000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000860000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000860000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000860000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000860000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000860000 User000: 4 thinking 
0000860000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000860000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 User000: 0 eating   
0000860000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000860000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000860000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000860000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1535
           TICK   : Ctr=      1536
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000860000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000860000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000860000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000860000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000860000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000860000 User000: 3 hungry   
0000860000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1537
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000860000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000860000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000860000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000860000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000860000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000860000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000860000 User000: 2 thinking 
0000860000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000860000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 User000: 3 eating   
0000860000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000860000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000860000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000860000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000860000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000860000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1538
           TICK   : Ctr=      1539
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000860000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000860000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000860000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000860000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000860000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000860000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000860000 User000: 1 hungry   
0000860000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000860000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000860000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000860000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000860000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000860000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000860000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000860000 User000: 0 thinking 
0000860000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000860000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000860000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000860000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000860000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000860000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 User000: 1 eating   
0000860000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000860000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000860000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000860000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000860000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000860000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000860000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000860000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1540
           TICK   : Ctr=      1541
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000870000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 4 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1542
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000870000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 3 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 4 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1543
           TICK   : Ctr=      1544
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000870000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000870000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 2 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 1 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 2 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1545
           TICK   : Ctr=      1546
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000870000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 0 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1547
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000870000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 4 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 0 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1548
           TICK   : Ctr=      1549
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000870000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000870000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 3 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 2 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 3 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1550
           TICK   : Ctr=      1551
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000870000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 1 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1552
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000870000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 0 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 1 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1553
           TICK   : Ctr=      1554
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000870000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000870000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 4 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 3 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 4 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1555
           TICK   : Ctr=      1556
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000870000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 2 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1557
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000870000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 1 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 2 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1558
           TICK   : Ctr=      1559
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000870000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000870000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 0 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 4 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 0 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1560
           TICK   : Ctr=      1561
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000870000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000870000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000870000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000870000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000870000 User000: 3 hungry   
0000870000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1562
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000870000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000870000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000870000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000870000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000870000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000870000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000870000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000870000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000870000 User000: 2 thinking 
0000870000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000870000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000870000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000870000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000870000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000870000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 User000: 3 eating   
0000870000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000870000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000870000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000870000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000870000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000870000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000870000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000870000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000870000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000870000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000870000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000870000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000870000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1563
           TICK   : Ctr=      1564
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000880000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000880000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000880000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000880000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000880000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000880000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000880000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000880000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000880000 User000: 1 hungry   
0000880000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000880000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000880000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000880000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000880000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000880000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000880000 User000: 0 thinking 
0000880000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000880000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000880000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000880000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000880000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000880000 User000: 1 eating   
0000880000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000880000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000880000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000880000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000880000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000880000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000880000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000880000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000880000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000880000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000880000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000880000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000880000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1565
           TICK   : Ctr=      1566
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000880000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000880000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000880000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000880000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000880000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000880000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000880000 User000: 4 hungry   
0000880000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1567
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000880000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000880000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000880000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000880000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000880000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000880000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000880000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000880000 User000: 3 thinking 
0000880000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000880000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000880000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000880000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000880000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000880000 User000: 4 eating   
0000880000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000880000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000880000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000880000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000880000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000880000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000880000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000880000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000880000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000880000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000880000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000880000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000880000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1568
           TICK   : Ctr=      1569
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000880000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000880000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000880000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000880000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000880000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000880000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000880000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000880000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000880000 User000: 2 hungry   
0000880000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000880000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000880000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000880000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000880000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000880000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000880000 User000: 1 thinking 
0000880000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000880000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000880000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000880000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000880000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000880000 User000: 2 eating   
0000880000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000880000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000880000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000880000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000880000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000880000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000880000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000880000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000880000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000880000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000880000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000880000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000880000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000880000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000880000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1570
           TICK   : Ctr=      1571
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000880000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000880000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000880000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000880000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000880000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000880000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000880000 User000: 0 hungry   
0000880000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000880000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000880000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1572
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000880000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000880000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000880000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000880000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000880000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000880000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000880000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000880000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000880000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000880000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000880000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000880000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000880000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000890000 User000: 4 thinking 
0000890000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000890000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 User000: 0 eating   
0000890000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000890000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000890000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000890000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000890000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1573
           TICK   : Ctr=      1574
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000890000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000890000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000890000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000890000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000890000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000890000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000890000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000890000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000890000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000890000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000890000 User000: 3 hungry   
0000890000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000890000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000890000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000890000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000890000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000890000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000890000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000890000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000890000 User000: 2 thinking 
0000890000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000890000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 User000: 3 eating   
0000890000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000890000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000890000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000890000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000890000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000890000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1575
           TICK   : Ctr=      1576
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000890000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000890000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000890000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000890000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000890000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000890000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000890000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000890000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000890000 User000: 1 hungry   
0000890000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1577
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000890000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000890000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000890000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000890000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000890000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000890000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000890000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000890000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000890000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000890000 User000: 0 thinking 
0000890000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000890000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 User000: 1 eating   
0000890000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000890000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000890000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000890000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000890000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1578
           TICK   : Ctr=      1579
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000890000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000890000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000890000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000890000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000890000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000890000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000890000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000890000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000890000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000890000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000890000 User000: 4 hungry   
0000890000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000890000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000890000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000890000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000890000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000890000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000890000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000890000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000890000 User000: 3 thinking 
0000890000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000890000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000890000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000890000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000890000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000890000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 User000: 4 eating   
0000890000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000890000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000890000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000890000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000890000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000890000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000890000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000890000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000890000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000890000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000890000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000890000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000890000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000890000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1580
           TICK   : Ctr=      1581
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 2 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1582
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 1 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 2 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1583
           TICK   : Ctr=      1584
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000900000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000900000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 0 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 4 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 0 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1585
           TICK   : Ctr=      1586
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000900000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 3 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1587
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 2 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 3 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1588
           TICK   : Ctr=      1589
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000900000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 1 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 0 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 1 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1590
           TICK   : Ctr=      1591
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000900000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 4 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1592
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000900000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 3 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 4 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1593
           TICK   : Ctr=      1594
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 2 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 1 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 2 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1595
           TICK   : Ctr=      1596
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000900000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 0 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1597
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000900000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 4 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 0 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1598
           TICK   : Ctr=      1599
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000900000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 3 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 2 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 3 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1600
           TICK   : Ctr=      1601
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 1 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1602
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000900000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 0 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 1 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1603
           TICK   : Ctr=      1604
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000900000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000900000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 4 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 3 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 4 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1605
           TICK   : Ctr=      1606
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 2 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1607
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 1 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 2 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1608
           TICK   : Ctr=      1609
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000900000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000900000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 0 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 4 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 0 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1610
           TICK   : Ctr=      1611
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000900000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 3 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1612
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 2 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 3 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1613
           TICK   : Ctr=      1614
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000900000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 1 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 0 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 1 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1615
           TICK   : Ctr=      1616
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000900000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 4 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1617
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000900000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 3 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 4 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1618
           TICK   : Ctr=      1619
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000900000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000900000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000900000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000900000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000900000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000900000 User000: 2 hungry   
0000900000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000900000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000900000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000900000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000900000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000900000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000900000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000900000 User000: 1 thinking 
0000900000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000900000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000900000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000900000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000900000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000900000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 User000: 2 eating   
0000900000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000900000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000900000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000900000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000900000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000900000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000900000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000900000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000900000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000900000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000900000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000900000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000900000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000900000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1620
           TICK   : Ctr=      1621
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000910000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000910000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000910000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000910000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000910000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000910000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000910000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000910000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000910000 User000: 0 hungry   
0000910000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000910000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1622
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000910000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000910000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000910000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000910000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000910000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000910000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000910000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000910000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000910000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000910000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000910000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000910000 User000: 4 thinking 
0000910000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000910000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000910000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000910000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000910000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000910000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000910000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000910000 User000: 0 eating   
0000910000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000910000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000910000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000910000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000910000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000910000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000910000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000910000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000910000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000910000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000910000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000910000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000910000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1623
           TICK   : Ctr=      1624
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000910000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000910000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000910000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000910000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000910000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000910000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000910000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000910000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000910000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000910000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000910000 User000: 3 hungry   
0000910000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000910000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000910000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000910000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000910000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000910000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000910000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000910000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000910000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000910000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000910000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000910000 User000: 2 thinking 
0000910000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000910000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000910000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000910000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000910000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000910000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000910000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000910000 User000: 3 eating   
0000910000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000910000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000910000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000910000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000910000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000910000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000910000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000910000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000910000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000910000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000910000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000910000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000910000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1625
           TICK   : Ctr=      1626
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000910000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000910000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000910000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000910000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000910000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000910000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000910000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000910000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000910000 User000: 1 hungry   
0000910000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000910000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1627
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000910000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000910000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000910000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000910000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000910000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000910000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000910000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000910000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000910000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000910000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000910000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000910000 User000: 0 thinking 
0000910000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000910000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000910000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000910000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000910000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000910000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000910000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000910000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000910000 User000: 1 eating   
0000910000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000910000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000910000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000910000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000910000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000910000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000910000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000910000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000910000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000910000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000910000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000910000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000910000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000910000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000910000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000910000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000910000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1628
           TICK   : Ctr=      1629
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000920000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000920000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 4 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 3 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 4 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1630
           TICK   : Ctr=      1631
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000920000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 2 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1632
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000920000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 1 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 2 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1633
           TICK   : Ctr=      1634
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000920000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000920000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 0 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 4 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 0 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1635
           TICK   : Ctr=      1636
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000920000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 3 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1637
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000920000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 2 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 3 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1638
           TICK   : Ctr=      1639
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000920000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000920000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 1 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 0 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 1 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1640
           TICK   : Ctr=      1641
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000920000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 4 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1642
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000920000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 3 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 4 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1643
           TICK   : Ctr=      1644
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000920000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000920000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 2 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 1 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 2 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1645
           TICK   : Ctr=      1646
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000920000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 0 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1647
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000920000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 4 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 0 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1648
           TICK   : Ctr=      1649
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000920000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000920000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 3 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000920000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000920000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000920000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000920000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000920000 User000: 2 thinking 
0000920000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000920000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000920000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000920000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000920000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 User000: 3 eating   
0000920000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000920000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000920000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000920000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000920000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000920000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000920000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000920000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000920000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000920000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000920000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000920000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1650
           TICK   : Ctr=      1651
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000920000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000920000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000920000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000920000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000920000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000920000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000920000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000920000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000920000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000920000 User000: 1 hungry   
0000920000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000920000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000920000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1652
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000930000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000930000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000930000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000930000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000930000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000930000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000930000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000930000 User000: 0 thinking 
0000930000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000930000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 User000: 1 eating   
0000930000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000930000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000930000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000930000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000930000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000930000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1653
           TICK   : Ctr=      1654
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000930000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000930000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000930000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000930000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000930000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000930000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000930000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000930000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000930000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000930000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000930000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000930000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000930000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000930000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000930000 User000: 4 hungry   
0000930000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000930000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000930000 User000: 3 thinking 
0000930000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000930000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 User000: 4 eating   
0000930000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000930000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000930000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000930000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000930000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000930000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1655
           TICK   : Ctr=      1656
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000930000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000930000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000930000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000930000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000930000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000930000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000930000 User000: 2 hungry   
0000930000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1657
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000930000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000930000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000930000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000930000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000930000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000930000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000930000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000930000 User000: 1 thinking 
0000930000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000930000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 User000: 2 eating   
0000930000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000930000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000930000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000930000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000930000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1658
           TICK   : Ctr=      1659
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000930000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000930000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000930000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000930000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000930000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000930000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000930000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000930000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000930000 User000: 0 hungry   
0000930000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000930000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000930000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000930000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000930000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000930000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000930000 User000: 4 thinking 
0000930000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000930000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000930000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000930000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 User000: 0 eating   
0000930000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000930000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000930000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000930000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000930000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000930000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000930000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000930000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000930000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000930000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000930000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000930000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1660
           TICK   : Ctr=      1661
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000930000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000930000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000930000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000930000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000930000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000930000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000930000 User000: 3 hungry   
0000930000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000930000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000930000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1662
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000930000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000930000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000930000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000930000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000930000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000930000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000930000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000930000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000930000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000930000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000930000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 2 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 3 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1663
           TICK   : Ctr=      1664
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000940000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000940000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 1 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 0 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 1 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1665
           TICK   : Ctr=      1666
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000940000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 4 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1667
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000940000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 3 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 4 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1668
           TICK   : Ctr=      1669
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000940000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000940000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 2 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 1 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 2 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1670
           TICK   : Ctr=      1671
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000940000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 0 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1672
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000940000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 4 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 0 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1673
           TICK   : Ctr=      1674
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000940000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000940000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 3 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 2 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 3 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1675
           TICK   : Ctr=      1676
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000940000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 1 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1677
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000940000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 0 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 1 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
           TICK   : Ctr=      1678
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1679
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000940000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000940000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 4 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 3 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 4 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000940000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000940000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000940000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000940000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1680
           TICK   : Ctr=      1681
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000940000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000940000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000940000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000940000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000940000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000940000 User000: 2 hungry   
0000940000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1682
           TICK   : Ctr=      1683
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000940000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000940000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000940000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000940000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000940000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000940000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000940000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000940000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000940000 User000: 1 thinking 
0000940000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000940000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000940000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000940000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000940000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000940000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 User000: 2 eating   
0000940000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000940000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000940000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000940000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000940000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000940000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000940000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000940000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000940000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000950000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000950000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1684
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000950000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000950000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000950000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000950000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000950000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000950000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000950000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000950000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000950000 User000: 0 hungry   
0000950000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000950000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000950000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000950000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000950000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000950000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000950000 User000: 4 thinking 
0000950000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000950000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 User000: 0 eating   
0000950000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000950000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000950000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000950000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000950000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1685
           TICK   : Ctr=      1686
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000950000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000950000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000950000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000950000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000950000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000950000 User000: 3 hungry   
0000950000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1687
           TICK   : Ctr=      1688
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000950000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000950000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000950000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000950000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000950000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000950000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000950000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000950000 User000: 2 thinking 
0000950000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000950000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 User000: 3 eating   
0000950000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000950000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000950000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000950000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000950000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1689
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000950000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000950000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000950000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000950000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000950000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000950000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000950000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000950000 User000: 0 thinking 
0000950000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1690
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000950000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000950000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000950000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000950000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000950000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000950000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000950000 User000: 1 hungry   
0000950000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000950000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 User000: 1 eating   
0000950000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000950000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000950000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000950000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000950000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000950000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1691
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000950000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000950000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000950000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000950000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000950000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000950000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000950000 User000: 4 hungry   
0000950000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1692
           TICK   : Ctr=      1693
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000950000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000950000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000950000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000950000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000950000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000950000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000950000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000950000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000950000 User000: 3 thinking 
0000950000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000950000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000950000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000950000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000950000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000950000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 User000: 4 eating   
0000950000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000950000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000950000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000950000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000950000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000950000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000950000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000950000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000950000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000950000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000950000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000950000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000950000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000950000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1694
           TICK   : Ctr=      1695
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000960000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000960000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000960000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000960000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000960000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000960000 User000: 2 hungry   
0000960000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000960000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000960000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000960000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
           TICK   : Ctr=      1696
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000960000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000960000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000960000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000960000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000960000 AO.GET : Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000960000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000960000 User000: 1 thinking 
0000960000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000960000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 User000: 2 eating   
0000960000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000960000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000960000 User000: 0 hungry   
0000960000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000960000 Ignored: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000960000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000960000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000960000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1697
           TICK   : Ctr=      1698
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000960000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000960000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000960000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000960000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000960000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000960000 User000: 4 thinking 
0000960000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000960000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 User000: 0 eating   
0000960000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000960000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000960000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000960000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1699
           TICK   : Ctr=      1700
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000960000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000960000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000960000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000960000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000960000 User000: 3 hungry   
0000960000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1701
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000960000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000960000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000960000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000960000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000960000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000960000 User000: 2 thinking 
0000960000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000960000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 User000: 3 eating   
0000960000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000960000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000960000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000960000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1702
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000960000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000960000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000960000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000960000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000960000 User000: 1 hungry   
0000960000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1703
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000960000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000960000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000960000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000960000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000960000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000960000 User000: 0 thinking 
0000960000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000960000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 User000: 1 eating   
0000960000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000960000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000960000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000960000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000960000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1704
           TICK   : Ctr=      1705
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000960000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000960000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000960000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000960000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000960000 User000: 4 hungry   
0000960000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1706
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000960000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000960000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000960000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000960000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000960000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000960000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000960000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000960000 User000: 3 thinking 
0000960000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000960000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000960000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000960000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000960000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000960000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 User000: 4 eating   
0000960000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000960000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000960000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000960000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000960000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000960000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000960000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000960000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000960000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000960000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000960000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000960000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000960000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1707
           TICK   : Ctr=      1708
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000970000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000970000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000970000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000970000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000970000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000970000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000970000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000970000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000970000 User000: 2 hungry   
0000970000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000970000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000970000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000970000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000970000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000970000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000970000 User000: 1 thinking 
0000970000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000970000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 User000: 2 eating   
0000970000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000970000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000970000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000970000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000970000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1709
           TICK   : Ctr=      1710
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000970000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000970000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000970000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000970000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000970000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000970000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000970000 User000: 0 hungry   
0000970000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1711
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000970000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000970000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000970000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000970000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000970000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000970000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000970000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000970000 User000: 4 thinking 
0000970000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000970000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 User000: 0 eating   
0000970000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000970000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000970000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000970000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000970000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1712
           TICK   : Ctr=      1713
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000970000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000970000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000970000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000970000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000970000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000970000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000970000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000970000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000970000 User000: 3 hungry   
0000970000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000970000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000970000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000970000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000970000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000970000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000970000 User000: 2 thinking 
0000970000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000970000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 User000: 3 eating   
0000970000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000970000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000970000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000970000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000970000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1714
           TICK   : Ctr=      1715
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000970000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000970000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000970000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000970000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000970000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000970000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000970000 User000: 1 hungry   
0000970000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1716
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000970000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000970000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000970000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000970000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000970000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000970000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000970000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000970000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000970000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000970000 User000: 0 thinking 
0000970000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000970000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000970000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000970000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000970000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000970000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 User000: 1 eating   
0000970000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000970000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000970000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000970000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000970000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000970000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000970000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000970000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000970000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000970000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000970000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000970000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000970000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000970000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1717
           TICK   : Ctr=      1718
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000980000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000980000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000980000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000980000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000980000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000980000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000980000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000980000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000980000 User000: 4 hungry   
0000980000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000980000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000980000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000980000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000980000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000980000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000980000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000980000 User000: 3 thinking 
0000980000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000980000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000980000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000980000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000980000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000980000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000980000 User000: 4 eating   
0000980000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000980000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000980000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000980000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000980000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000980000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000980000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000980000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000980000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000980000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000980000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000980000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000980000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1719
           TICK   : Ctr=      1720
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000980000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000980000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000980000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000980000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000980000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000980000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000980000 User000: 2 hungry   
0000980000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1721
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000980000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000980000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000980000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000980000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000980000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000980000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000980000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000980000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000980000 User000: 1 thinking 
0000980000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000980000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000980000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000980000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000980000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000980000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000980000 User000: 2 eating   
0000980000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000980000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000980000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000980000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000980000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000980000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000980000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000980000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000980000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000980000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000980000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000980000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1722
           TICK   : Ctr=      1723
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000980000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000980000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000980000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000980000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000980000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000980000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000980000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000980000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000980000 User000: 0 hungry   
0000980000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000980000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000980000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000980000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000980000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000980000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000980000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000980000 User000: 4 thinking 
0000980000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000980000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000980000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000980000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000980000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000980000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000980000 User000: 0 eating   
0000980000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000980000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000980000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000980000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000980000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000980000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000980000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000980000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000980000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000980000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000980000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000980000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000980000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000980000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1724
           TICK   : Ctr=      1725
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000980000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000980000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000980000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000980000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000980000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000980000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000980000 User000: 3 hungry   
0000980000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000980000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000980000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1726
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000980000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000980000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000980000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000980000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000980000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000980000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000980000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000980000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 2 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 3 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1727
           TICK   : Ctr=      1728
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000990000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000990000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 1 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1729
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 0 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 1 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1730
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000990000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 4 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1731
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000990000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 3 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 4 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1732
           TICK   : Ctr=      1733
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000990000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 2 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1734
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000990000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 1 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 2 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1735
           TICK   : Ctr=      1736
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000990000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000990000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 0 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 4 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 0 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1737
           TICK   : Ctr=      1738
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000990000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 3 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1739
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000990000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 2 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 3 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1740
           TICK   : Ctr=      1741
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000990000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000990000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 1 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 0 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 1 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1742
           TICK   : Ctr=      1743
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000990000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 4 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1744
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000990000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 3 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 4 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1745
           TICK   : Ctr=      1746
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000990000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000990000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000990000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000990000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000990000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000990000 User000: 2 hungry   
0000990000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000990000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000990000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000990000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000990000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000990000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000990000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000990000 User000: 1 thinking 
0000990000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000990000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000990000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000990000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000990000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000990000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 User000: 2 eating   
0000990000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000990000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000990000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000990000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000990000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000990000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000990000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000990000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000990000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000990000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000990000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000990000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000990000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000990000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1747
           TICK   : Ctr=      1748
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001000000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001000000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001000000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001000000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001000000 User000: 0 hungry   
0001000000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1749
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001000000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001000000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001000000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001000000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001000000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001000000 User000: 4 thinking 
0001000000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 User000: 0 eating   
0001000000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001000000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001000000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001000000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1750
           TICK   : Ctr=      1751
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001000000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001000000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001000000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001000000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001000000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001000000 User000: 3 hungry   
0001000000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001000000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001000000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001000000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001000000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001000000 User000: 2 thinking 
0001000000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 User000: 3 eating   
0001000000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001000000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001000000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001000000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1752
           TICK   : Ctr=      1753
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001000000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001000000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001000000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001000000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001000000 User000: 1 hungry   
0001000000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1754
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001000000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001000000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001000000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001000000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001000000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001000000 User000: 0 thinking 
0001000000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 User000: 1 eating   
0001000000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001000000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001000000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001000000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001000000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1755
           TICK   : Ctr=      1756
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001000000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001000000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001000000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001000000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001000000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001000000 User000: 4 hungry   
0001000000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001000000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001000000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001000000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001000000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001000000 User000: 3 thinking 
0001000000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 User000: 4 eating   
0001000000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001000000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001000000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001000000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001000000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1757
           TICK   : Ctr=      1758
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001000000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001000000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001000000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001000000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001000000 User000: 2 hungry   
0001000000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1759
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001000000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001000000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001000000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001000000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001000000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001000000 User000: 1 thinking 
0001000000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 User000: 2 eating   
0001000000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001000000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001000000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001000000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
           TICK   : Ctr=      1760
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1761
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001000000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001000000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001000000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001000000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001000000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001000000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001000000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001000000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001000000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001000000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0001000000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001000000 User000: 0 hungry   
0001000000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001000000 User000: 4 thinking 
0001000000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001000000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001000000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001000000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001000000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001000000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 User000: 0 eating   
0001000000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001000000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001000000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001000000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001000000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001000000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001000000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001000000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001000000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001000000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001000000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001000000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001000000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001000000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1762
           TICK   : Ctr=      1763
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001010000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 3 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1764
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001010000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 2 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 3 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1765
           TICK   : Ctr=      1766
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001010000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001010000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 1 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 0 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 1 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1767
           TICK   : Ctr=      1768
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001010000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 4 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1769
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001010000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 3 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 4 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1770
           TICK   : Ctr=      1771
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001010000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001010000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 2 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 1 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 2 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1772
           TICK   : Ctr=      1773
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001010000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 0 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1774
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001010000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 4 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 0 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1775
           TICK   : Ctr=      1776
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001010000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001010000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 3 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 2 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 3 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1777
           TICK   : Ctr=      1778
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001010000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 1 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1779
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001010000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 0 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 1 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1780
           TICK   : Ctr=      1781
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001010000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001010000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 4 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 3 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 4 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1782
           TICK   : Ctr=      1783
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001010000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001010000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001010000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001010000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001010000 User000: 2 hungry   
0001010000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1784
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001010000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001010000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001010000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001010000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001010000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001010000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001010000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001010000 User000: 1 thinking 
0001010000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001010000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001010000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001010000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001010000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 User000: 2 eating   
0001010000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001010000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001010000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001010000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
           TICK   : Ctr=      1785
0001010000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001010000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001010000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001010000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001010000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001010000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001010000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001010000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001010000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001010000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001010000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1786
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001010000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001010000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001020000 User000: 0 hungry   
0001020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001020000 User000: 4 thinking 
0001020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 User000: 0 eating   
0001020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001020000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1787
           TICK   : Ctr=      1788
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001020000 User000: 3 hungry   
0001020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1789
           TICK   : Ctr=      1790
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001020000 User000: 2 thinking 
0001020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 User000: 3 eating   
0001020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001020000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1791
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001020000 User000: 1 hungry   
0001020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001020000 User000: 0 thinking 
0001020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 User000: 1 eating   
0001020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001020000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1792
           TICK   : Ctr=      1793
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001020000 User000: 4 hungry   
0001020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1794
           TICK   : Ctr=      1795
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001020000 User000: 3 thinking 
0001020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 User000: 4 eating   
0001020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001020000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1796
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001020000 User000: 1 thinking 
0001020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1797
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 2 hungry   
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 2 eating   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1798
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 0 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1799
           TICK   : Ctr=      1800
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 4 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 0 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1801
           TICK   : Ctr=      1802
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 3 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 2 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 3 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1803
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 1 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1804
           TICK   : Ctr=      1805
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 0 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 1 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1806
           TICK   : Ctr=      1807
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 4 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 3 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 4 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1808
           TICK   : Ctr=      1809
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 2 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1810
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 1 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 2 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1811
           TICK   : Ctr=      1812
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 0 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 4 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 0 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1813
           TICK   : Ctr=      1814
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 3 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1815
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 2 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 3 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
           TICK   : Ctr=      1816
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1817
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 1 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 0 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 1 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1818
           TICK   : Ctr=      1819
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 4 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1820
           TICK   : Ctr=      1821
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 3 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 4 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1822
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 2 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 1 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 2 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1823
           TICK   : Ctr=      1824
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 0 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1825
           TICK   : Ctr=      1826
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 4 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 0 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1827
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 2 thinking 
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1828
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 3 hungry   
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 3 eating   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1829
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001030000 User000: 1 hungry   
0001030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1830
           TICK   : Ctr=      1831
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001030000 User000: 0 thinking 
0001030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 User000: 1 eating   
0001030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001030000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1832
           TICK   : Ctr=      1833
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001040000 User000: 4 hungry   
0001040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001040000 User000: 3 thinking 
0001040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 User000: 4 eating   
0001040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1834
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001040000 User000: 2 hungry   
0001040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1835
           TICK   : Ctr=      1836
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001040000 User000: 1 thinking 
0001040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 User000: 2 eating   
0001040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1837
           TICK   : Ctr=      1838
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001040000 User000: 0 hungry   
0001040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001040000 User000: 4 thinking 
0001040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 User000: 0 eating   
0001040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1839
           TICK   : Ctr=      1840
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001040000 User000: 3 hungry   
0001040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1841
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001040000 User000: 2 thinking 
0001040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 User000: 3 eating   
0001040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1842
           TICK   : Ctr=      1843
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001050000 User000: 1 hungry   
0001050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001050000 User000: 0 thinking 
0001050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 User000: 1 eating   
0001050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001050000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1844
           TICK   : Ctr=      1845
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001050000 User000: 4 hungry   
0001050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1846
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001050000 User000: 3 thinking 
0001050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 User000: 4 eating   
0001050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001050000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1847
           TICK   : Ctr=      1848
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001050000 User000: 2 hungry   
0001050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001050000 User000: 1 thinking 
0001050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 User000: 2 eating   
0001050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001050000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1849
           TICK   : Ctr=      1850
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001050000 User000: 0 hungry   
0001050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1851
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001050000 User000: 4 thinking 
0001050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 User000: 0 eating   
0001050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001050000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1852
           TICK   : Ctr=      1853
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001050000 User000: 3 hungry   
0001050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001050000 User000: 2 thinking 
0001050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 User000: 3 eating   
0001050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001050000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1854
           TICK   : Ctr=      1855
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001060000 User000: 1 hungry   
0001060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1856
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001060000 User000: 0 thinking 
0001060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 User000: 1 eating   
0001060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1857
           TICK   : Ctr=      1858
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001060000 User000: 4 hungry   
0001060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001060000 User000: 3 thinking 
0001060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 User000: 4 eating   
0001060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1859
           TICK   : Ctr=      1860
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001060000 User000: 2 hungry   
0001060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1861
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001060000 User000: 1 thinking 
0001060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 User000: 2 eating   
0001060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1862
           TICK   : Ctr=      1863
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001060000 User000: 0 hungry   
0001060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001060000 User000: 4 thinking 
0001060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 User000: 0 eating   
0001060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1864
           TICK   : Ctr=      1865
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001060000 User000: 3 hungry   
0001060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1866
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 2 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 3 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1867
           TICK   : Ctr=      1868
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 1 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 0 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 1 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1869
           TICK   : Ctr=      1870
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 4 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1871
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 3 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 4 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1872
           TICK   : Ctr=      1873
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 2 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 1 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 2 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1874
           TICK   : Ctr=      1875
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 0 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1876
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 4 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 0 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1877
           TICK   : Ctr=      1878
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 3 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 2 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 3 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1879
           TICK   : Ctr=      1880
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 1 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1881
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 0 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 1 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1882
           TICK   : Ctr=      1883
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 4 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 3 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 4 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1884
           TICK   : Ctr=      1885
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 2 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1886
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 1 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 2 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1887
           TICK   : Ctr=      1888
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 0 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 4 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 0 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1889
           TICK   : Ctr=      1890
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001070000 User000: 3 hungry   
0001070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1891
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001070000 User000: 2 thinking 
0001070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 User000: 3 eating   
0001070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1892
           TICK   : Ctr=      1893
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001080000 User000: 1 hungry   
0001080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001080000 User000: 0 thinking 
0001080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001080000 User000: 1 eating   
0001080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1894
           TICK   : Ctr=      1895
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001080000 User000: 4 hungry   
0001080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1896
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001080000 User000: 3 thinking 
0001080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001080000 User000: 4 eating   
0001080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1897
           TICK   : Ctr=      1898
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 2 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 1 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 2 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1899
           TICK   : Ctr=      1900
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 0 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1901
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 4 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 0 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1902
           TICK   : Ctr=      1903
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 3 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 2 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 3 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1904
           TICK   : Ctr=      1905
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 1 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1906
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 0 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 1 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1907
           TICK   : Ctr=      1908
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 4 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 3 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 4 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1909
           TICK   : Ctr=      1910
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 2 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1911
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 1 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 2 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1912
           TICK   : Ctr=      1913
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 0 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 4 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 0 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1914
           TICK   : Ctr=      1915
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 3 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1916
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 2 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 3 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1917
           TICK   : Ctr=      1918
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 1 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 0 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 1 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1919
           TICK   : Ctr=      1920
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001090000 User000: 4 hungry   
0001090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1921
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001090000 User000: 3 thinking 
0001090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 User000: 4 eating   
0001090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1922
           TICK   : Ctr=      1923
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001100000 User000: 2 hungry   
0001100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1924
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001100000 User000: 1 thinking 
0001100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 User000: 2 eating   
0001100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1925
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001100000 User000: 0 hungry   
0001100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1926
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001100000 User000: 4 thinking 
0001100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 User000: 0 eating   
0001100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1927
           TICK   : Ctr=      1928
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001100000 User000: 3 hungry   
0001100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1929
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001100000 User000: 2 thinking 
0001100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 User000: 3 eating   
0001100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1930
           TICK   : Ctr=      1931
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001100000 User000: 1 hungry   
0001100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001100000 User000: 0 thinking 
0001100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 User000: 1 eating   
0001100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1932
           TICK   : Ctr=      1933
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001100000 User000: 4 hungry   
0001100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1934
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001100000 User000: 3 thinking 
0001100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 User000: 4 eating   
0001100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1935
           TICK   : Ctr=      1936
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 2 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 1 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 2 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1937
           TICK   : Ctr=      1938
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 0 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1939
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 4 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 0 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1940
           TICK   : Ctr=      1941
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 3 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 2 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 3 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1942
           TICK   : Ctr=      1943
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 1 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1944
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 0 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 1 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1945
           TICK   : Ctr=      1946
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 4 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 3 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 4 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1947
           TICK   : Ctr=      1948
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 2 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1949
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 1 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 2 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
           TICK   : Ctr=      1950
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1951
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 0 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 4 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 0 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1952
           TICK   : Ctr=      1953
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 3 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1954
           TICK   : Ctr=      1955
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 2 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 3 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1956
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 1 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 0 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 1 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1957
           TICK   : Ctr=      1958
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 4 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1959
           TICK   : Ctr=      1960
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 3 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 4 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1961
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 1 thinking 
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1962
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 2 hungry   
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 2 eating   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1963
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 0 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1964
           TICK   : Ctr=      1965
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 4 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 0 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1966
           TICK   : Ctr=      1967
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 3 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 2 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 3 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1968
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001110000 User000: 1 hungry   
0001110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1969
           TICK   : Ctr=      1970
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001110000 User000: 0 thinking 
0001110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 User000: 1 eating   
0001110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1971
           TICK   : Ctr=      1972
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 4 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 3 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 4 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1973
           TICK   : Ctr=      1974
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 2 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1975
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 1 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 2 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1976
           TICK   : Ctr=      1977
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 0 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 4 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 0 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1978
           TICK   : Ctr=      1979
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 3 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1980
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 2 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 3 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1981
           TICK   : Ctr=      1982
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 0 thinking 
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 1 hungry   
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 1 eating   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1983
           TICK   : Ctr=      1984
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 4 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1985
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 3 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 4 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1986
           TICK   : Ctr=      1987
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 2 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 1 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 2 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1988
           TICK   : Ctr=      1989
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 0 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1990
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 4 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 0 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1991
           TICK   : Ctr=      1992
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 3 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 2 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 3 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1993
           TICK   : Ctr=      1994
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 1 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1995
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 0 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 1 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1996
           TICK   : Ctr=      1997
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 4 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 3 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 4 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      1998
           TICK   : Ctr=      1999
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 2 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2000
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 1 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 2 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2001
           TICK   : Ctr=      2002
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 0 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 4 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 0 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2003
           TICK   : Ctr=      2004
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001120000 User000: 3 hungry   
0001120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2005
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001120000 User000: 2 thinking 
0001120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 User000: 3 eating   
0001120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2006
           TICK   : Ctr=      2007
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 1 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 0 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 1 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2008
           TICK   : Ctr=      2009
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 4 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2010
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 3 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 4 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2011
           TICK   : Ctr=      2012
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 2 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 1 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 2 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2013
           TICK   : Ctr=      2014
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 0 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2015
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 4 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 0 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2016
           TICK   : Ctr=      2017
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 3 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 2 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 3 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2018
           TICK   : Ctr=      2019
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 1 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2020
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 0 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 1 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2021
           TICK   : Ctr=      2022
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001130000 User000: 4 hungry   
0001130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001130000 User000: 3 thinking 
0001130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 User000: 4 eating   
0001130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001130000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2023
           TICK   : Ctr=      2024
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 2 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2025
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 1 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 2 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2026
           TICK   : Ctr=      2027
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 0 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 4 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 0 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2028
           TICK   : Ctr=      2029
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 3 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2030
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 2 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 3 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2031
           TICK   : Ctr=      2032
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 1 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 0 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 1 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2033
           TICK   : Ctr=      2034
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 4 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2035
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 3 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 4 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2036
           TICK   : Ctr=      2037
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 2 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 1 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 2 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2038
           TICK   : Ctr=      2039
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 0 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2040
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 4 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 0 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2041
           TICK   : Ctr=      2042
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 3 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 2 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 3 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2043
           TICK   : Ctr=      2044
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 1 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2045
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 0 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 1 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2046
           TICK   : Ctr=      2047
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 4 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 3 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 4 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2048
           TICK   : Ctr=      2049
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 2 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2050
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 1 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 2 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2051
           TICK   : Ctr=      2052
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001140000 User000: 0 hungry   
0001140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001140000 User000: 4 thinking 
0001140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 User000: 0 eating   
0001140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001140000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2053
           TICK   : Ctr=      2054
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 3 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2055
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 2 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 3 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2056
           TICK   : Ctr=      2057
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 1 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 0 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 1 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2058
           TICK   : Ctr=      2059
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 4 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2060
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 3 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 4 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2061
           TICK   : Ctr=      2062
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 2 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 1 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 2 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2063
           TICK   : Ctr=      2064
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 0 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2065
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 4 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 0 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2066
           TICK   : Ctr=      2067
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 3 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 2 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 3 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2068
           TICK   : Ctr=      2069
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 1 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2070
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 0 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 1 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2071
           TICK   : Ctr=      2072
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 4 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 3 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 4 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2073
           TICK   : Ctr=      2074
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 2 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2075
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001150000 User000: 1 thinking 
0001150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 User000: 2 eating   
0001150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2076
           TICK   : Ctr=      2077
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001150000 User000: 0 hungry   
0001150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001160000 User000: 4 thinking 
0001160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 User000: 0 eating   
0001160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001160000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2078
           TICK   : Ctr=      2079
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001160000 User000: 3 hungry   
0001160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2080
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001160000 User000: 2 thinking 
0001160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 User000: 3 eating   
0001160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001160000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2081
           TICK   : Ctr=      2082
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001160000 User000: 1 hungry   
0001160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001160000 User000: 0 thinking 
0001160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 User000: 1 eating   
0001160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001160000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2083
           TICK   : Ctr=      2084
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001160000 User000: 4 hungry   
0001160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2085
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001160000 User000: 3 thinking 
0001160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 User000: 4 eating   
0001160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001160000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2086
           TICK   : Ctr=      2087
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001160000 User000: 2 hungry   
0001160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001160000 User000: 1 thinking 
0001160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 User000: 2 eating   
0001160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001160000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2088
           TICK   : Ctr=      2089
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001170000 User000: 0 hungry   
0001170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2090
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001170000 User000: 4 thinking 
0001170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 User000: 0 eating   
0001170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2091
           TICK   : Ctr=      2092
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001170000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0001170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001170000 User000: 3 hungry   
0001170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001170000 User000: 2 thinking 
0001170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 User000: 3 eating   
0001170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2093
           TICK   : Ctr=      2094
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001170000 User000: 1 hungry   
0001170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2095
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001170000 User000: 0 thinking 
0001170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 User000: 1 eating   
0001170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2096
           TICK   : Ctr=      2097
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001170000 User000: 4 hungry   
0001170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001170000 User000: 3 thinking 
0001170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 User000: 4 eating   
0001170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2098
           TICK   : Ctr=      2099
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001180000 User000: 2 hungry   
0001180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2100
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001180000 User000: 1 thinking 
0001180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001180000 User000: 2 eating   
0001180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2101
           TICK   : Ctr=      2102
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 0 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 4 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 0 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2103
           TICK   : Ctr=      2104
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 3 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2105
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 2 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 3 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2106
           TICK   : Ctr=      2107
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 1 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 0 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 1 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2108
           TICK   : Ctr=      2109
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 4 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2110
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 3 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 4 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2111
           TICK   : Ctr=      2112
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 2 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 1 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 2 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2113
           TICK   : Ctr=      2114
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 0 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2115
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 4 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 0 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2116
           TICK   : Ctr=      2117
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 3 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001190000 User000: 2 thinking 
0001190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 User000: 3 eating   
0001190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2118
           TICK   : Ctr=      2119
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001190000 User000: 1 hungry   
0001190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2120
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001200000 User000: 0 thinking 
0001200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 User000: 1 eating   
0001200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001200000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2121
           TICK   : Ctr=      2122
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001200000 User000: 4 hungry   
0001200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001200000 User000: 3 thinking 
0001200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 User000: 4 eating   
0001200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001200000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2123
           TICK   : Ctr=      2124
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001200000 User000: 2 hungry   
0001200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2125
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001200000 User000: 1 thinking 
0001200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 User000: 2 eating   
0001200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001200000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2126
           TICK   : Ctr=      2127
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0001200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0001200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0001200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001200000 User000: 0 hungry   
0001200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0001200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0001200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0001200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001200000 User000: 4 thinking 
0001200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 User000: 0 eating   
0001200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0001200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0001200000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0001200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0001200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2128
           TICK   : Ctr=      2129
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001210000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001210000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0001210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0001210000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001210000 User000: 3 hungry   
0001210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2130
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001210000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001210000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0001210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0001210000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0001210000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001210000 User000: 2 thinking 
0001210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 User000: 3 eating   
0001210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0001210000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0001210000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0001210000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2131
           TICK   : Ctr=      2132
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0001210000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0001210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001210000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001210000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0001210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0001210000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001210000 User000: 1 hungry   
0001210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001210000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0001210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0001210000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0001210000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001210000 User000: 0 thinking 
0001210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 User000: 1 eating   
0001210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0001210000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0001210000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0001210000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2133
           TICK   : Ctr=      2134
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0001210000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0001210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001210000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0001210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0001210000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001210000 User000: 4 hungry   
0001210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2135
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0001210000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0001210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0001210000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0001210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0001210000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0001210000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001210000 User000: 3 thinking 
0001210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 User000: 4 eating   
0001210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0001210000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0001210000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0001210000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2136
           TICK   : Ctr=      2137
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0001210000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0001210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0001210000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0001210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0001210000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0001210000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0001210000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0001210000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0001210000 User000: 2 hungry   
0001210000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0001210000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0001210000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0001210000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0001210000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0001210000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0001210000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0001210000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0001210000 User000: 1 thinking 
0001210000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0001210000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0001210000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0001210000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0001210000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0001210000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 User000: 2 eating   
0001210000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0001210000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0001210000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0001210000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0001210000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0001210000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0001210000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0001210000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0001210000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0001210000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0001210000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0001210000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0001210000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0001210000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TICK   : Ctr=      2138
