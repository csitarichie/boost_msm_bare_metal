QSPY host application 4.1.00
Copyright (c) Quantum Leaps, LLC.
Sun Nov 22 12:15:24 2009

-T 4
-O 4
-F 4
-S 2
-E 4
-Q 4
-P 4
-B 4
-C 4

           Obj Dic: 08052220->l_smlPoolSto
           Obj Dic: 08052140->l_tableQueueSto
           Obj Dic: 08052160->l_philoQueueSto[0]
           Obj Dic: 08052174->l_philoQueueSto[1]
           Obj Dic: 08052188->l_philoQueueSto[2]
           Obj Dic: 0805219C->l_philoQueueSto[3]
           Obj Dic: 080521B0->l_philoQueueSto[4]
           MP.INIT: Obj=l_smlPoolSto nBlocks=  10
           EQ.INIT: Obj=l_philoQueueSto[0] Len= 5
0000020000 AO.ADD : Active=08052AC0 Prio= 1
           Obj Dic: 08052AC0->&l_philo[0]
           Obj Dic: 08052B1C->&l_philo[0].m_timeEvt
           Obj Dic: 08052B34->&l_philo[1]
           Obj Dic: 08052B90->&l_philo[1].m_timeEvt
           Obj Dic: 08052BA8->&l_philo[2]
           Obj Dic: 08052C04->&l_philo[2].m_timeEvt
           Obj Dic: 08052C1C->&l_philo[3]
           Obj Dic: 08052C78->&l_philo[3].m_timeEvt
           Obj Dic: 08052C90->&l_philo[4]
           Obj Dic: 08052CEC->&l_philo[4].m_timeEvt
           Fun Dic: 08049B58->&Philo::initial
           Fun Dic: 0804A12E->&Philo::thinking
           Fun Dic: 0804A1E4->&Philo::hungry
           Fun Dic: 0804A2EC->&Philo::eating
           Sig Dic: 00000008,Obj=08052AC0 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08052AC0 ->TIMEOUT_SIG
0000020000 AO.SUB : Active=l_philo[0] Sig=00000004,Obj=08052AC0
           Q_INIT : Obj=l_philo[0] Source=0804D254 Target=Philo::thinking
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000020000 ==>Init: Obj=l_philo[0] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[1] Len= 5
0000020000 AO.ADD : Active=l_philo[1] Prio= 2
           Sig Dic: 00000008,Obj=08052B34 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08052B34 ->TIMEOUT_SIG
0000020000 AO.SUB : Active=l_philo[1] Sig=00000004,Obj=08052B34
           Q_INIT : Obj=l_philo[1] Source=0804D254 Target=Philo::thinking
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000020000 ==>Init: Obj=l_philo[1] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[2] Len= 5
0000020000 AO.ADD : Active=l_philo[2] Prio= 3
           Sig Dic: 00000008,Obj=08052BA8 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08052BA8 ->TIMEOUT_SIG
0000020000 AO.SUB : Active=l_philo[2] Sig=00000004,Obj=08052BA8
           Q_INIT : Obj=l_philo[2] Source=0804D254 Target=Philo::thinking
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000020000 ==>Init: Obj=l_philo[2] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[3] Len= 5
0000020000 AO.ADD : Active=l_philo[3] Prio= 4
           Sig Dic: 00000008,Obj=08052C1C ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08052C1C ->TIMEOUT_SIG
0000020000 AO.SUB : Active=l_philo[3] Sig=00000004,Obj=08052C1C
           Q_INIT : Obj=l_philo[3] Source=0804D254 Target=Philo::thinking
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000020000 ==>Init: Obj=l_philo[3] New=Philo::thinking
           EQ.INIT: Obj=l_philoQueueSto[4] Len= 5
0000020000 AO.ADD : Active=l_philo[4] Prio= 5
           Sig Dic: 00000008,Obj=08052C90 ->HUNGRY_SIG
           Sig Dic: 00000009,Obj=08052C90 ->TIMEOUT_SIG
0000020000 AO.SUB : Active=l_philo[4] Sig=00000004,Obj=08052C90
           Q_INIT : Obj=l_philo[4] Source=0804D254 Target=Philo::thinking
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000020000 ==>Init: Obj=l_philo[4] New=Philo::thinking
           EQ.INIT: Obj=l_tableQueueSto Len= 5
0000020000 AO.ADD : Active=08052D20 Prio= 6
           Obj Dic: 08052D20->&l_table
           Fun Dic: 0804D254->&QHsm::top
           Fun Dic: 0804A6C4->&Table::initial
           Fun Dic: 0804A9EE->&Table::serving
           Sig Dic: 00000005,Obj=00000000 ->DONE_SIG
           Sig Dic: 00000004,Obj=00000000 ->EAT_SIG
           Sig Dic: 00000006,Obj=00000000 ->TERMINATE_SIG
           Sig Dic: 00000008,Obj=08052D20 ->HUNGRY_SIG
0000020000 AO.SUB : Active=l_table Sig=DONE_SIG
0000020000 AO.SUB : Active=l_table Sig=TERMINATE_SIG
           Q_INIT : Obj=l_table Source=QHsm::top Target=Table::serving
0000020000 ==>Init: Obj=l_table New=Table::serving
*** Incorrect record past seq= 81
*** Dropped  27 records
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  5)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  5)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  5)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 0 eating   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GET : Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   8
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 4 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GET : Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   8
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 3 hungry   
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  4, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  4, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 3 eating   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GET : Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  4)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GET : Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 2 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000020000 AO.GET : Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  4)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GET : Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 1 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 0 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 1 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GET : Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 3 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   7 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 4 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   8
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GET : Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GET : Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GET : Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 4 thinking 
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 1 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 2 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 0 hungry   
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 0 eating   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GET : Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nUsed=  5)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 3 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 2 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 3 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 4 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 0 thinking 
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 1 hungry   
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 1 eating   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 Ignored: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 3 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 4 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 2 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 1 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 2 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 0 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 4 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 0 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 3 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 2 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 3 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 1 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 0 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 1 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 4 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 3 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 4 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 2 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 1 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 2 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 0 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 4 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 0 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 3 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 2 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 3 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 1 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 0 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 1 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 4 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000020000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 3 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 4 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000020000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000020000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 2 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 1 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 2 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000020000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000020000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000020000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000020000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000020000 User000: 0 hungry   
0000020000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000020000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000020000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000020000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000020000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000020000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000020000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000020000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000020000 User000: 4 thinking 
0000020000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000020000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000020000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000020000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000020000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000020000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 User000: 0 eating   
0000020000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000020000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000020000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000020000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000020000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000020000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000020000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000020000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000020000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000020000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000020000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000020000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000020000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 3 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 2 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 3 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 1 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 0 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 1 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 4 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 3 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 4 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 2 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 1 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 2 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 0 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 4 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 0 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 3 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 2 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 3 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 1 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 0 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 1 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 4 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 3 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 4 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 2 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 1 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 2 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 0 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 4 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 0 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 3 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 2 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 3 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 1 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000030000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 0 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 1 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000030000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 3 thinking 
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000030000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 4 hungry   
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 4 eating   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000030000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000030000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000030000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000030000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000030000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000030000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000030000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000030000 User000: 2 hungry   
0000030000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000030000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000030000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000030000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000030000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000030000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000030000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000030000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000030000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000030000 User000: 1 thinking 
0000030000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000030000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000030000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000030000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000030000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000030000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 User000: 2 eating   
0000030000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000030000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000030000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000030000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000030000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000030000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000030000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000030000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000030000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000030000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 0 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 1 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 4 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 3 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 4 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 2 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 1 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 2 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000040000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 0 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 4 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 0 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000040000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 3 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000040000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000040000 User000: 2 thinking 
0000040000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000040000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000040000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 User000: 3 eating   
0000040000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000040000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000040000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000040000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000040000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000040000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000040000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000040000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000040000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000040000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000040000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000040000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000040000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000040000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000040000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000040000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000040000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000040000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000040000 User000: 1 hungry   
0000040000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000040000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000040000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000040000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000040000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000040000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000040000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000040000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000040000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000040000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000040000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000040000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000040000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000040000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 0 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 1 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 4 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 3 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 4 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 2 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 1 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 2 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 0 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 4 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 0 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 3 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 2 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 3 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 1 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 0 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 1 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 4 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 3 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 4 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 2 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 1 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 2 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 0 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 4 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 0 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 3 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 2 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 3 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000050000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 1 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 0 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 1 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000050000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 4 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000050000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000050000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000050000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000050000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000050000 User000: 3 thinking 
0000050000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000050000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000050000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 User000: 4 eating   
0000050000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000050000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000050000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000050000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000050000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000050000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000050000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000050000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000050000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000050000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000050000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000050000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000050000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000050000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000050000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000050000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000050000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000050000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000050000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000050000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000050000 User000: 2 hungry   
0000050000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000050000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000050000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000050000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000050000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000050000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000050000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000050000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000050000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 1 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 2 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 0 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 4 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 0 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 3 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 2 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 3 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000060000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 1 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000060000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 0 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 1 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000060000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000060000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 4 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000060000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000060000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000060000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000060000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000060000 User000: 3 thinking 
0000060000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000060000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000060000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000060000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 User000: 4 eating   
0000060000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000060000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000060000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000060000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000060000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000060000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000060000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000060000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000060000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000060000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000060000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000060000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000060000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000060000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000060000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000060000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000060000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000060000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000060000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000060000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000060000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000060000 User000: 2 hungry   
0000060000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000060000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000060000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 1 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 2 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 0 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 4 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 0 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 3 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 2 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 3 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 1 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 0 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 1 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 4 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 3 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 4 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 2 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 1 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 2 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 0 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 4 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 0 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 3 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 2 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 3 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 1 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 0 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 1 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 4 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 3 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 4 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 2 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 1 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 2 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000070000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 0 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 4 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 0 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000070000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 3 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000070000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 2 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 3 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000070000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000070000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000070000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000070000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000070000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000070000 User000: 1 hungry   
0000070000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000070000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000070000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000070000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000070000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000070000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000070000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000070000 User000: 0 thinking 
0000070000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000070000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000070000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000070000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000070000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000070000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 User000: 1 eating   
0000070000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000070000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000070000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000070000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000070000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000070000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000070000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000070000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000070000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000070000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000070000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000070000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000070000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000070000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 4 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 3 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 4 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 2 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 1 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 2 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 0 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000080000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 4 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 0 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000080000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 3 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 2 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 3 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000080000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000080000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000080000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000080000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000080000 User000: 1 hungry   
0000080000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000080000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000080000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000080000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000080000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000080000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000080000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000080000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000080000 User000: 0 thinking 
0000080000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000080000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000080000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000080000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000080000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000080000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 User000: 1 eating   
0000080000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000080000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000080000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000080000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000080000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000080000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000080000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000080000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000080000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000080000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000080000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000080000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000080000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000080000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000080000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000080000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 4 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 3 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 4 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 2 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 1 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 2 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 0 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 4 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 0 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 3 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 2 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 3 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 1 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 0 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 1 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 4 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 3 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 4 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 2 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 1 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 2 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 0 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 4 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 0 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 3 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 2 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 3 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 1 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 0 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 1 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 4 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000090000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 3 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 4 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000090000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000090000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 2 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000090000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000090000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000090000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000090000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000090000 User000: 1 thinking 
0000090000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000090000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000090000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 User000: 2 eating   
0000090000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000090000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000090000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000090000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000090000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000090000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000090000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000090000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000090000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000090000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000090000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000090000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000090000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000090000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000090000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000090000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000090000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000090000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000090000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000090000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000090000 User000: 0 hungry   
0000090000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000090000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000090000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000090000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000090000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 2 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 1 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 2 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 0 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 4 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 0 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 3 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000100000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 2 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 3 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000100000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000100000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 1 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 0 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 1 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000100000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000100000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000100000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000100000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000100000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000100000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000100000 User000: 4 hungry   
0000100000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000100000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000100000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000100000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000100000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000100000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000100000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000100000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000100000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000100000 User000: 3 thinking 
0000100000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000100000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000100000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000100000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000100000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000100000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 User000: 4 eating   
0000100000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000100000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000100000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000100000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000100000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000100000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000100000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000100000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000100000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000100000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 3 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 2 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 3 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 1 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 0 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 1 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 4 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 3 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 4 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000110000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 2 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000110000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 1 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 2 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000110000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000110000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000110000 User000: 0 hungry   
0000110000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000110000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000110000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000110000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000110000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000110000 User000: 4 thinking 
0000110000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000110000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000110000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000110000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000110000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 User000: 0 eating   
0000110000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000110000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000110000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000110000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000110000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000110000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000110000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000110000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000110000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000110000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000110000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000110000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000110000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000110000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000110000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000110000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000110000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000110000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000110000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000110000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000110000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000110000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000110000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000110000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 0 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 4 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 0 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 3 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 2 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 3 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000120000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 1 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 0 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 1 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000120000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 4 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000120000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 3 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 4 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000120000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000120000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000120000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000120000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000120000 User000: 2 hungry   
0000120000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000120000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000120000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000120000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000120000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000120000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000120000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000120000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000120000 User000: 1 thinking 
0000120000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000120000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000120000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000120000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000120000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000120000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 User000: 2 eating   
0000120000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000120000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000120000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000120000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000120000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000120000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000120000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000120000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000120000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000120000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000120000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000120000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000120000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000120000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 0 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 4 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 0 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 3 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 2 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 3 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 1 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 0 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 1 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 4 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 3 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 4 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  5)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 2 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 1 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 2 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 0 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 4 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 0 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 3 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 2 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 3 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 1 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 0 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 1 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 4 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 3 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 4 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 2 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 1 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 2 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 0 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 4 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 0 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000130000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 3 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000130000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 2 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 3 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000130000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000130000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000130000 User000: 1 hungry   
0000130000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000130000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000130000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000130000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000130000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000130000 User000: 0 thinking 
0000130000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000130000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000130000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000130000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 User000: 1 eating   
0000130000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000130000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000130000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000130000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000130000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000130000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000130000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000130000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000130000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000130000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000130000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000130000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000130000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000130000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000130000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000130000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000130000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000130000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000130000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000130000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000130000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000130000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000130000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 4 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 3 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 4 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 2 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 1 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 2 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 0 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 4 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 0 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 2 thinking 
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 3 hungry   
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 3 eating   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 1 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 0 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 1 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 4 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 3 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 4 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 2 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 1 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 2 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 0 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 4 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 0 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 3 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 2 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 3 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 1 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 0 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 1 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 4 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 3 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 4 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 2 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 1 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 2 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000140000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 0 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000140000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 4 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 0 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000140000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000140000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 3 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000140000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000140000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000140000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000140000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000140000 User000: 2 thinking 
0000140000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000140000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000140000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000140000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000140000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 User000: 3 eating   
0000140000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000140000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000140000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000140000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000140000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000140000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000140000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000140000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000140000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000140000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000140000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000140000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000140000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000140000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000140000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000140000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000140000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000140000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000140000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000140000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000140000 User000: 1 hungry   
0000140000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000140000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000140000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 0 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 4 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 0 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 3 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 2 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 3 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 1 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 0 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 1 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000150000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 4 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000150000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 3 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 4 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000150000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000150000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000150000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000150000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000150000 User000: 2 hungry   
0000150000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000150000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000150000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000150000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000150000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000150000 User000: 1 thinking 
0000150000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000150000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000150000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000150000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 User000: 2 eating   
0000150000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000150000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000150000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000150000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000150000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000150000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000150000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000150000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000150000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000150000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000150000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000150000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000150000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000150000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000150000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000150000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000150000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000150000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000150000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000150000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 0 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 4 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 0 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 3 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 2 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 3 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 1 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 0 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 1 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 4 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 3 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 4 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 2 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 1 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 2 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 0 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 4 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 0 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 3 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 2 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 3 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 1 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 0 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 1 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 4 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 3 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 4 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 2 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 1 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 2 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 0 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 4 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 0 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000160000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 3 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 2 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 3 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000160000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000160000 User000: 1 hungry   
0000160000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000160000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000160000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000160000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000160000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000160000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000160000 User000: 0 thinking 
0000160000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000160000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000160000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000160000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 User000: 1 eating   
0000160000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000160000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000160000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000160000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000160000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000160000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000160000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000160000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000160000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000160000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000160000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000160000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000160000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000160000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000160000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000160000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000160000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000160000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000160000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000160000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000160000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000160000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000160000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000160000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000160000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000160000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 4 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 0 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 3 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 2 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 3 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 1 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 0 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 1 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000170000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 4 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000170000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 3 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 4 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000170000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000170000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 2 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000170000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000170000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000170000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000170000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000170000 User000: 1 thinking 
0000170000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000170000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000170000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000170000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 User000: 2 eating   
0000170000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000170000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000170000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000170000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000170000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000170000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000170000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000170000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000170000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000170000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000170000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000170000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000170000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000170000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000170000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000170000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000170000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000170000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000170000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000170000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000170000 User000: 0 hungry   
0000170000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000170000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000170000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 4 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 3 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 4 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 2 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 1 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 2 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 0 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000180000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 4 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 0 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000180000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000180000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 3 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 2 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 3 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000180000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000180000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000180000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000180000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000180000 User000: 1 hungry   
0000180000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000180000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000180000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000180000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000180000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000180000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000180000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000180000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000180000 User000: 0 thinking 
0000180000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000180000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000180000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000180000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000180000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000180000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 User000: 1 eating   
0000180000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000180000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000180000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000180000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000180000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000180000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000180000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000180000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000180000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000180000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000180000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000180000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000180000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000180000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 4 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 3 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 4 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 2 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 1 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 2 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 0 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 4 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 0 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 3 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 2 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 3 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 1 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 0 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 1 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 4 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 3 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 4 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 2 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 1 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 2 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 0 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 4 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 0 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GET : Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1) Queue(nUsed=  5)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 3 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 2 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 3 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 1 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 0 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 1 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 3 thinking 
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 4 hungry   
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 4 eating   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 2 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
*** Incorrect record past seq= 73
*** Dropped   1 records
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 1 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 2 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 0 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 4 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 0 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 3 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 2 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 3 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 1 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 0 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 1 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 4 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 3 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 4 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 2 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 1 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 2 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 0 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000190000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 4 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 0 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000190000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000190000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 3 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 2 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 3 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000190000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000190000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000190000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000190000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000190000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000190000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000190000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000190000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000190000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000190000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000190000 User000: 1 hungry   
0000190000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000190000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000190000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000190000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000190000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000190000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000190000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000190000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000190000 User000: 0 thinking 
0000190000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000190000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000190000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000190000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000190000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000190000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 User000: 1 eating   
0000190000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000190000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000190000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000190000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000190000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000190000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000190000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 4 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 3 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 4 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 2 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 1 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 2 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 0 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 4 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 0 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 3 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 2 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 3 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 1 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 0 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 1 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 4 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 3 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 4 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 2 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 1 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 2 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 0 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 4 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 0 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[0] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[3] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 3 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[2] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 2 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 3 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[3] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[1] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 1 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[0] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[0].m_timeEvt Act=l_philo[0] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[0] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 0 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 1 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[1] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[4] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 4 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[3].m_timeEvt Act=l_philo[3]
0000200000 TE.POST: Obj=l_philo[3].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[3]
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[3] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[3] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[3].m_timeEvt Act=l_philo[3] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[3] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[3] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 3 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 4 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[4] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[2] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[1].m_timeEvt Act=l_philo[1]
0000200000 TE.POST: Obj=l_philo[1].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[1]
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
           TE.ADRM: Obj=l_philo[2].m_timeEvt Act=l_philo[2]
0000200000 TE.POST: Obj=l_philo[2].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[2]
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  3)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[2] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[2] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[2] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 2 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[1] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[1] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[1].m_timeEvt Act=l_philo[1] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[1] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[1] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 1 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 2 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 Disp==>: Obj=l_philo[0] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[0] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 4)
0000200000 Disp==>: Obj=l_philo[4] Sig=EAT_SIG Active=Philo::eating
0000200000 Intern : Obj=l_philo[4] Sig=EAT_SIG Source=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 AO.GETL: Active= l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 3)
0000200000 Disp==>: Obj=l_philo[3] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[3] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 AO.GETL: Active= l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 2)
0000200000 Disp==>: Obj=l_philo[2] Sig=EAT_SIG Active=Philo::hungry
0000200000 TE.ARM : Obj=l_philo[2].m_timeEvt Act=l_philo[2] nTicks=   5 Interval=   0
           Q_ENTRY: Obj=l_philo[2] State=Philo::eating
0000200000 ==>Tran: Obj=l_philo[2] Sig=EAT_SIG Source=Philo::hungry New=Philo::eating
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 AO.GETL: Active= l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_philo[1] Sig=EAT_SIG Active=Philo::thinking
0000200000 Intern : Obj=l_philo[1] Sig=EAT_SIG Source=Philo::thinking
0000200000 GC     : Evt(Sig=EAT_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[0].m_timeEvt Act=l_philo[0]
0000200000 TE.POST: Obj=l_philo[0].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[0]
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  5)
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[0] Sig=TIMEOUT_SIG Active=Philo::thinking
0000200000 NEW    : Evt(Sig=HUNGRY_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 AO.FIFO: Obj=l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 0) Queue(nFree=  5, nMin=  4)
           Q_ENTRY: Obj=l_philo[0] State=Philo::hungry
0000200000 ==>Tran: Obj=l_philo[0] Sig=TIMEOUT_SIG Source=Philo::thinking New=Philo::hungry
0000200000 AO.GETL: Active= l_table Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=HUNGRY_SIG Active=Table::serving
0000200000 User000: 0 hungry   
0000200000 Intern : Obj=l_table Sig=HUNGRY_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=HUNGRY_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=  10
           TE.ADRM: Obj=l_philo[4].m_timeEvt Act=l_philo[4]
0000200000 TE.POST: Obj=l_philo[4].m_timeEvt Sig=TIMEOUT_SIG Act=l_philo[4]
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0) Queue(nFree=  5, nMin=  4)
0000200000 AO.GETL: Active= l_philo[4] Evt(Sig=TIMEOUT_SIG, Pool=0, Ref= 0)
0000200000 Disp==>: Obj=l_philo[4] Sig=TIMEOUT_SIG Active=Philo::eating
0000200000 NEW    : Evt(Sig=DONE_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   9 nMin=   7
0000200000 PUBLISH: Evt(Sig=DONE_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 GC-ATT : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
           Q_EXIT : Obj=l_philo[4] State=Philo::eating
0000200000 TE.ARM : Obj=l_philo[4].m_timeEvt Act=l_philo[4] nTicks=   7 Interval=   0
           Q_ENTRY: Obj=l_philo[4] State=Philo::thinking
0000200000 ==>Tran: Obj=l_philo[4] Sig=TIMEOUT_SIG Source=Philo::eating New=Philo::thinking
0000200000 AO.GETL: Active= l_table Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 Disp==>: Obj=l_table Sig=DONE_SIG Active=Table::serving
0000200000 User000: 4 thinking 
0000200000 NEW    : Evt(Sig=EAT_SIG, size=    6)
0000200000 MP.GET : Obj=l_smlPoolSto nFree=   8 nMin=   7
0000200000 PUBLISH: Evt(Sig=EAT_SIG, Pool=1, Ref= 0)
0000200000 AO.FIFO: Obj=l_philo[4] Evt(Sig=EAT_SIG, Pool=1, Ref= 1) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[3] Evt(Sig=EAT_SIG, Pool=1, Ref= 2) Queue(nFree=  5, nMin=  4)
0000200000 AO.FIFO: Obj=l_philo[2] Evt(Sig=EAT_SIG, Pool=1, Ref= 3) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[1] Evt(Sig=EAT_SIG, Pool=1, Ref= 4) Queue(nFree=  5, nMin=  3)
0000200000 AO.FIFO: Obj=l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5) Queue(nFree=  5, nMin=  5)
0000200000 GC-ATT : Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
0000200000 User000: 0 eating   
0000200000 Intern : Obj=l_table Sig=DONE_SIG Source=Table::serving
0000200000 GC     : Evt(Sig=DONE_SIG, Pool=1, Ref= 1)
0000200000 MP.PUT : Obj=l_smlPoolSto nFree=   9
0000200000 AO.GETL: Active= l_philo[0] Evt(Sig=EAT_SIG, Pool=1, Ref= 5)
