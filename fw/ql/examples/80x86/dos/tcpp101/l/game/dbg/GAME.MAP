
 Start  Stop   Length Name               Class

 00000H 01B6AH 01B6BH _TEXT              CODE
 01B6BH 02122H 005B8H BSP_TEXT           CODE
 02123H 02215H 000F3H MAIN_TEXT          CODE
 02216H 027DFH 005CAH MINE1_TEXT         CODE
 027E0H 02CB5H 004D6H MINE2_TEXT         CODE
 02CB6H 03053H 0039EH MISSILE_TEXT       CODE
 03054H 034A8H 00455H SHIP_TEXT          CODE
 034A9H 04758H 012B0H TUNNEL_TEXT        CODE
 04759H 04A11H 002B9H VIDEO_TEXT         CODE
 04A12H 04A1DH 0000CH QEP_TEXT           CODE
 04A1EH 04B88H 0016BH QHSM_INI_TEXT      CODE
 04B89H 0502CH 004A4H QHSM_DIS_TEXT      CODE
 0502DH 05035H 00009H QHSM_TOP_TEXT      CODE
 05036H 05167H 00132H QA_FIFO_TEXT       CODE
 05168H 05305H 0019EH QA_GET__TEXT       CODE
 05306H 053A4H 0009FH QA_SUB_TEXT        CODE
 053A5H 053F8H 00054H QEQ_INIT_TEXT      CODE
 053F9H 054F0H 000F8H QF_ACT_TEXT        CODE
 054F1H 05570H 00080H QF_GC_TEXT         CODE
 05571H 05571H 00000H QF_LOG2_TEXT       CODE
 05571H 0562BH 000BBH QF_NEW_TEXT        CODE
 0562CH 056AEH 00083H QF_POOL_TEXT       CODE
 056AFH 056C6H 00018H QF_PSINI_TEXT      CODE
 056C7H 057D6H 00110H QF_PSPUB_TEXT      CODE
 057D7H 057D7H 00000H QF_PWR2_TEXT       CODE
 057D7H 058D9H 00103H QF_TICK_TEXT       CODE
 058DAH 05992H 000B9H QMP_GET_TEXT       CODE
 05993H 05B32H 001A0H QMP_INIT_TEXT      CODE
 05B33H 05BB8H 00086H QMP_PUT_TEXT       CODE
 05BB9H 05C58H 000A0H QTE_CTOR_TEXT      CODE
 05C59H 05CFEH 000A6H QTE_ARM_TEXT       CODE
 05CFFH 05D96H 00098H QTE_DARM_TEXT      CODE
 05D97H 05F25H 0018FH QVANILLA_TEXT      CODE
 05F30H 05F30H 00000H _FARDATA           FAR_DATA
 05F30H 05F30H 00000H BSP5_FAR           FAR_DATA
 05F30H 05F30H 00000H MAIN5_FAR          FAR_DATA
 05F30H 05F30H 00000H MINE15_FAR         FAR_DATA
 05F30H 05F30H 00000H MINE25_FAR         FAR_DATA
 05F30H 05F30H 00000H MISSILE5_FAR       FAR_DATA
 05F30H 05F30H 00000H SHIP5_FAR          FAR_DATA
 05F30H 05F30H 00000H TUNNEL5_FAR        FAR_DATA
 05F30H 05F30H 00000H VIDEO5_FAR         FAR_DATA
 05F30H 05F30H 00000H QA_FIFO5_FAR       FAR_DATA
 05F30H 05F30H 00000H QA_GET_5_FAR       FAR_DATA
 05F30H 05F30H 00000H QA_SUB5_FAR        FAR_DATA
 05F30H 05F30H 00000H QEQ_INIT5_FAR      FAR_DATA
 05F30H 05F30H 00000H QF_ACT5_FAR        FAR_DATA
 05F30H 05F30H 00000H QF_GC5_FAR         FAR_DATA
 05F30H 05F30H 00000H QF_LOG25_FAR       FAR_DATA
 05F30H 05F30H 00000H QF_NEW5_FAR        FAR_DATA
 05F30H 05F30H 00000H QF_POOL5_FAR       FAR_DATA
 05F30H 05F30H 00000H QF_PSINI5_FAR      FAR_DATA
 05F30H 05F30H 00000H QF_PSPUB5_FAR      FAR_DATA
 05F30H 05F30H 00000H QF_PWR25_FAR       FAR_DATA
 05F30H 05F30H 00000H QF_TICK5_FAR       FAR_DATA
 05F30H 05F30H 00000H QMP_GET5_FAR       FAR_DATA
 05F30H 05F30H 00000H QMP_INIT5_FAR      FAR_DATA
 05F30H 05F30H 00000H QMP_PUT5_FAR       FAR_DATA
 05F30H 05F30H 00000H QTE_CTOR5_FAR      FAR_DATA
 05F30H 05F30H 00000H QTE_ARM5_FAR       FAR_DATA
 05F30H 05F30H 00000H QTE_DARM5_FAR      FAR_DATA
 05F30H 05F30H 00000H QVANILLA5_FAR      FAR_DATA
 05F30H 05F30H 00000H _OVERLAY_          OVRINFO
 05F30H 05F5FH 00030H _INIT_             INITDATA
 05F60H 05F60H 00000H _INITEND_          INITDATA
 05F60H 05F7DH 0001EH _EXIT_             EXITDATA
 05F7EH 05F7EH 00000H _EXITEND_          EXITDATA
 05F80H 05F80H 00000H _1STUB_            STUBSEG
 05F80H 06A25H 00AA6H _DATA              DATA
 06A26H 06A26H 00000H _CVTSEG            DATA
 06A26H 06A26H 00000H _SCNSEG            DATA
 06A26H 06DD7H 003B2H _BSS               BSS
 06DD8H 06DD8H 00000H _BSSEND            ENDBSS
 06DE0H 06E5FH 00080H _STACK             STACK


Detailed map of segments

 0000:0000 020A C=CODE   S=_TEXT          G=(none)  M=c0.ASM     ACBP=28
 0000:020A 002D C=CODE   S=_TEXT          G=(none)  M=ATEXIT     ACBP=28
 0000:0237 0029 C=CODE   S=_TEXT          G=(none)  M=CLRSCR     ACBP=28
 0000:0260 0026 C=CODE   S=_TEXT          G=(none)  M=EXIT       ACBP=28
 0000:0286 012C C=CODE   S=_TEXT          G=(none)  M=FBRK       ACBP=28
 0000:03B2 00D0 C=CODE   S=_TEXT          G=(none)  M=FFLUSH     ACBP=28
 0000:0482 0000 C=CODE   S=_TEXT          G=(none)  M=FILES      ACBP=28
 0000:0482 0000 C=CODE   S=_TEXT          G=(none)  M=FILES2     ACBP=28
 0000:0482 0043 C=CODE   S=_TEXT          G=(none)  M=FLUSHALL   ACBP=28
 0000:04C5 0154 C=CODE   S=_TEXT          G=(none)  M=FSEEK      ACBP=28
 0000:0619 008B C=CODE   S=_TEXT          G=(none)  M=GPTEXT     ACBP=28
 0000:06A4 00A6 C=CODE   S=_TEXT          G=(none)  M=MOVETEXT   ACBP=28
 0000:074A 01B1 C=CODE   S=_TEXT          G=(none)  M=SCREEN     ACBP=28
 0000:08FB 0192 C=CODE   S=_TEXT          G=(none)  M=SCROLL     ACBP=28
 0000:0A8D 0079 C=CODE   S=_TEXT          G=(none)  M=SETUPIO    ACBP=28
 0000:0B06 011F C=CODE   S=_TEXT          G=(none)  M=SETVBUF    ACBP=28
 0000:0C25 0000 C=CODE   S=_TEXT          G=(none)  M=STKLEN     ACBP=28
 0000:0C25 001A C=CODE   S=_TEXT          G=(none)  M=TELL       ACBP=28
 0000:0C3F 002C C=CODE   S=_TEXT          G=(none)  M=WHEREXY    ACBP=28
 0000:0C6B 012D C=CODE   S=_TEXT          G=(none)  M=WRITE      ACBP=28
 0000:0D98 003A C=CODE   S=_TEXT          G=(none)  M=XFFLUSH    ACBP=28
 0000:0DD2 01BA C=CODE   S=_TEXT          G=(none)  M=CRTINIT    ACBP=28
 0000:0F8C 0020 C=CODE   S=_TEXT          G=(none)  M=GETVECT    ACBP=28
 0000:0FAC 0014 C=CODE   S=_TEXT          G=(none)  M=INPORT     ACBP=28
 0000:0FC0 003D C=CODE   S=_TEXT          G=(none)  M=IOERROR    ACBP=28
 0000:0FFD 0011 C=CODE   S=_TEXT          G=(none)  M=ISATTY     ACBP=28
 0000:100E 0029 C=CODE   S=_TEXT          G=(none)  M=LSEEK      ACBP=28
 0000:1037 0024 C=CODE   S=_TEXT          G=(none)  M=MEMCPY     ACBP=28
 0000:105B 0043 C=CODE   S=_TEXT          G=(none)  M=MEMSET     ACBP=28
 0000:109E 0073 C=CODE   S=_TEXT          G=(none)  M=MOVMEM     ACBP=28
 0000:1111 0018 C=CODE   S=_TEXT          G=(none)  M=OUTPORT    ACBP=28
 0000:1129 001C C=CODE   S=_TEXT          G=(none)  M=SETBLOCK   ACBP=28
 0000:1145 009F C=CODE   S=_TEXT          G=(none)  M=VRAM       ACBP=28
 0000:11E4 004B C=CODE   S=_TEXT          G=(none)  M=WRITEA     ACBP=28
 0000:122F 0012 C=CODE   S=_TEXT          G=(none)  M=DEL        ACBP=28
 0000:1241 006C C=CODE   S=_TEXT          G=(none)  M=NEW        ACBP=28
 0000:12AD 011B C=CODE   S=_TEXT          G=(none)  M=VDEL       ACBP=28
 0000:13C8 00F3 C=CODE   S=_TEXT          G=(none)  M=VNEW       ACBP=28
 0000:14C0 03FC C=CODE   S=_TEXT          G=(none)  M=FARHEAP    ACBP=68
 0000:18BC 0017 C=CODE   S=_TEXT          G=(none)  M=F_LXMUL    ACBP=28
 0000:18D3 00AE C=CODE   S=_TEXT          G=(none)  M=H_LDIV     ACBP=28
 0000:1981 0021 C=CODE   S=_TEXT          G=(none)  M=H_LLSH     ACBP=28
 0000:19A2 0021 C=CODE   S=_TEXT          G=(none)  M=H_LURSH    ACBP=28
 0000:19C3 0060 C=CODE   S=_TEXT          G=(none)  M=H_PADD     ACBP=28
 0000:1A23 0021 C=CODE   S=_TEXT          G=(none)  M=N_PCMP     ACBP=28
 0000:1A44 0127 C=CODE   S=_TEXT          G=(none)  M=SETARGV    ACBP=28
 01B6:000B 05B8 C=CODE   S=BSP_TEXT       G=(none)  M=BSP.CPP    ACBP=28
 0212:0003 00F3 C=CODE   S=MAIN_TEXT      G=(none)  M=MAIN.CPP   ACBP=28
 0221:0006 05CA C=CODE   S=MINE1_TEXT     G=(none)  M=MINE1.CPP  ACBP=28
 027E:0000 04D6 C=CODE   S=MINE2_TEXT     G=(none)  M=MINE2.CPP  ACBP=28
 02CB:0006 039E C=CODE   S=MISSILE_TEXT   G=(none)  M=MISSILE.CPP ACBP=28
 0305:0004 0455 C=CODE   S=SHIP_TEXT      G=(none)  M=SHIP.CPP   ACBP=28
 034A:0009 12B0 C=CODE   S=TUNNEL_TEXT    G=(none)  M=TUNNEL.CPP ACBP=28
 0475:0009 02B9 C=CODE   S=VIDEO_TEXT     G=(none)  M=VIDEO.CPP  ACBP=28
 04A1:0002 000C C=CODE   S=QEP_TEXT       G=(none)  M=QEP        ACBP=28
 04A1:000E 016B C=CODE   S=QHSM_INI_TEXT  G=(none)  M=QHSM_INI   ACBP=28
 04B8:0009 04A4 C=CODE   S=QHSM_DIS_TEXT  G=(none)  M=QHSM_DIS   ACBP=28
 0502:000D 0009 C=CODE   S=QHSM_TOP_TEXT  G=(none)  M=QHSM_TOP   ACBP=28
 0503:0006 0132 C=CODE   S=QA_FIFO_TEXT   G=(none)  M=QA_FIFO    ACBP=28
 0516:0008 019E C=CODE   S=QA_GET__TEXT   G=(none)  M=QA_GET_    ACBP=28
 0530:0006 009F C=CODE   S=QA_SUB_TEXT    G=(none)  M=QA_SUB     ACBP=28
 053A:0005 0054 C=CODE   S=QEQ_INIT_TEXT  G=(none)  M=QEQ_INIT   ACBP=28
 053F:0009 00F8 C=CODE   S=QF_ACT_TEXT    G=(none)  M=QF_ACT     ACBP=28
 054F:0001 0080 C=CODE   S=QF_GC_TEXT     G=(none)  M=QF_GC      ACBP=28
 0557:0001 0000 C=CODE   S=QF_LOG2_TEXT   G=(none)  M=QF_LOG2    ACBP=28
 0557:0001 00BB C=CODE   S=QF_NEW_TEXT    G=(none)  M=QF_NEW     ACBP=28
 0562:000C 0083 C=CODE   S=QF_POOL_TEXT   G=(none)  M=QF_POOL    ACBP=28
 056A:000F 0018 C=CODE   S=QF_PSINI_TEXT  G=(none)  M=QF_PSINI   ACBP=28
 056C:0007 0110 C=CODE   S=QF_PSPUB_TEXT  G=(none)  M=QF_PSPUB   ACBP=28
 057D:0007 0000 C=CODE   S=QF_PWR2_TEXT   G=(none)  M=QF_PWR2    ACBP=28
 057D:0007 0103 C=CODE   S=QF_TICK_TEXT   G=(none)  M=QF_TICK    ACBP=28
 058D:000A 00B9 C=CODE   S=QMP_GET_TEXT   G=(none)  M=QMP_GET    ACBP=28
 0599:0003 01A0 C=CODE   S=QMP_INIT_TEXT  G=(none)  M=QMP_INIT   ACBP=28
 05B3:0003 0086 C=CODE   S=QMP_PUT_TEXT   G=(none)  M=QMP_PUT    ACBP=28
 05BB:0009 00A0 C=CODE   S=QTE_CTOR_TEXT  G=(none)  M=QTE_CTOR   ACBP=28
 05C5:0009 00A6 C=CODE   S=QTE_ARM_TEXT   G=(none)  M=QTE_ARM    ACBP=28
 05CF:000F 0098 C=CODE   S=QTE_DARM_TEXT  G=(none)  M=QTE_DARM   ACBP=28
 05D9:0007 018F C=CODE   S=QVANILLA_TEXT  G=(none)  M=QVANILLA   ACBP=28
 05F3:0000 0000 C=FAR_DATA S=_FARDATA       G=(none)  M=c0.ASM     ACBP=68
 05F3:0000 0000 C=FAR_DATA S=BSP5_FAR       G=(none)  M=BSP.CPP    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=MAIN5_FAR      G=(none)  M=MAIN.CPP   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=MINE15_FAR     G=(none)  M=MINE1.CPP  ACBP=68
 05F3:0000 0000 C=FAR_DATA S=MINE25_FAR     G=(none)  M=MINE2.CPP  ACBP=68
 05F3:0000 0000 C=FAR_DATA S=MISSILE5_FAR   G=(none)  M=MISSILE.CPP ACBP=68
 05F3:0000 0000 C=FAR_DATA S=SHIP5_FAR      G=(none)  M=SHIP.CPP   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=TUNNEL5_FAR    G=(none)  M=TUNNEL.CPP ACBP=68
 05F3:0000 0000 C=FAR_DATA S=VIDEO5_FAR     G=(none)  M=VIDEO.CPP  ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QA_FIFO5_FAR   G=(none)  M=QA_FIFO    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QA_GET_5_FAR   G=(none)  M=QA_GET_    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QA_SUB5_FAR    G=(none)  M=QA_SUB     ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QEQ_INIT5_FAR  G=(none)  M=QEQ_INIT   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_ACT5_FAR    G=(none)  M=QF_ACT     ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_GC5_FAR     G=(none)  M=QF_GC      ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_LOG25_FAR   G=(none)  M=QF_LOG2    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_NEW5_FAR    G=(none)  M=QF_NEW     ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_POOL5_FAR   G=(none)  M=QF_POOL    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_PSINI5_FAR  G=(none)  M=QF_PSINI   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_PSPUB5_FAR  G=(none)  M=QF_PSPUB   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_PWR25_FAR   G=(none)  M=QF_PWR2    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QF_TICK5_FAR   G=(none)  M=QF_TICK    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QMP_GET5_FAR   G=(none)  M=QMP_GET    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QMP_INIT5_FAR  G=(none)  M=QMP_INIT   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QMP_PUT5_FAR   G=(none)  M=QMP_PUT    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QTE_CTOR5_FAR  G=(none)  M=QTE_CTOR   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QTE_ARM5_FAR   G=(none)  M=QTE_ARM    ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QTE_DARM5_FAR  G=(none)  M=QTE_DARM   ACBP=68
 05F3:0000 0000 C=FAR_DATA S=QVANILLA5_FAR  G=(none)  M=QVANILLA   ACBP=68
 05F3:0000 0000 C=OVRINFO S=_OVERLAY_      G=(none)  M=c0.ASM     ACBP=68
 05F3:0000 0000 C=INITDATA S=_INIT_         G=IGROUP  M=c0.ASM     ACBP=48
 05F3:0000 0006 C=INITDATA S=_INIT_         G=IGROUP  M=MINE1.CPP  ACBP=48
 05F3:0006 0006 C=INITDATA S=_INIT_         G=IGROUP  M=MINE2.CPP  ACBP=48
 05F3:000C 0006 C=INITDATA S=_INIT_         G=IGROUP  M=MISSILE.CPP ACBP=48
 05F3:0012 0006 C=INITDATA S=_INIT_         G=IGROUP  M=SHIP.CPP   ACBP=48
 05F3:0018 0006 C=INITDATA S=_INIT_         G=IGROUP  M=TUNNEL.CPP ACBP=48
 05F3:001E 0006 C=INITDATA S=_INIT_         G=IGROUP  M=SETUPIO    ACBP=48
 05F3:0024 0006 C=INITDATA S=_INIT_         G=IGROUP  M=CRTINIT    ACBP=48
 05F3:002A 0006 C=INITDATA S=_INIT_         G=IGROUP  M=SETARGV    ACBP=48
 05F3:0030 0000 C=INITDATA S=_INITEND_      G=IGROUP  M=c0.ASM     ACBP=28
 05F6:0000 0000 C=EXITDATA S=_EXIT_         G=EGROUP  M=c0.ASM     ACBP=48
 05F6:0000 0006 C=EXITDATA S=_EXIT_         G=EGROUP  M=MINE1.CPP  ACBP=48
 05F6:0006 0006 C=EXITDATA S=_EXIT_         G=EGROUP  M=MINE2.CPP  ACBP=48
 05F6:000C 0006 C=EXITDATA S=_EXIT_         G=EGROUP  M=MISSILE.CPP ACBP=48
 05F6:0012 0006 C=EXITDATA S=_EXIT_         G=EGROUP  M=SHIP.CPP   ACBP=48
 05F6:0018 0006 C=EXITDATA S=_EXIT_         G=EGROUP  M=TUNNEL.CPP ACBP=48
 05F6:001E 0000 C=EXITDATA S=_EXITEND_      G=EGROUP  M=c0.ASM     ACBP=28
 05F8:0000 0000 C=STUBSEG S=_1STUB_        G=(none)  M=c0.ASM     ACBP=68
 05F8:0000 008F C=DATA   S=_DATA          G=DGROUP  M=c0.ASM     ACBP=68
 05F8:0090 0103 C=DATA   S=_DATA          G=DGROUP  M=BSP.CPP    ACBP=48
 05F8:0194 0000 C=DATA   S=_DATA          G=DGROUP  M=MAIN.CPP   ACBP=48
 05F8:0194 004A C=DATA   S=_DATA          G=DGROUP  M=MINE1.CPP  ACBP=48
 05F8:01DE 0046 C=DATA   S=_DATA          G=DGROUP  M=MINE2.CPP  ACBP=48
 05F8:0224 0024 C=DATA   S=_DATA          G=DGROUP  M=MISSILE.CPP ACBP=48
 05F8:0248 0022 C=DATA   S=_DATA          G=DGROUP  M=SHIP.CPP   ACBP=48
 05F8:026A 014F C=DATA   S=_DATA          G=DGROUP  M=TUNNEL.CPP ACBP=48
 05F8:03BA 01DD C=DATA   S=_DATA          G=DGROUP  M=VIDEO.CPP  ACBP=48
 05F8:0598 000F C=DATA   S=_DATA          G=DGROUP  M=QEP        ACBP=48
 05F8:05A8 0009 C=DATA   S=_DATA          G=DGROUP  M=QHSM_INI   ACBP=48
 05F8:05B2 0009 C=DATA   S=_DATA          G=DGROUP  M=QHSM_DIS   ACBP=48
 05F8:05BC 0000 C=DATA   S=_DATA          G=DGROUP  M=QHSM_TOP   ACBP=48
 05F8:05BC 0008 C=DATA   S=_DATA          G=DGROUP  M=QA_FIFO    ACBP=48
 05F8:05C4 0008 C=DATA   S=_DATA          G=DGROUP  M=QA_GET_    ACBP=48
 05F8:05CC 0007 C=DATA   S=_DATA          G=DGROUP  M=QA_SUB     ACBP=48
 05F8:05D4 0000 C=DATA   S=_DATA          G=DGROUP  M=QEQ_INIT   ACBP=48
 05F8:05D4 000E C=DATA   S=_DATA          G=DGROUP  M=QF_ACT     ACBP=48
 05F8:05E2 0006 C=DATA   S=_DATA          G=DGROUP  M=QF_GC      ACBP=48
 05F8:05E8 0100 C=DATA   S=_DATA          G=DGROUP  M=QF_LOG2    ACBP=48
 05F8:06E8 0007 C=DATA   S=_DATA          G=DGROUP  M=QF_NEW     ACBP=48
 05F8:06F0 0045 C=DATA   S=_DATA          G=DGROUP  M=QF_POOL    ACBP=48
 05F8:0736 0005 C=DATA   S=_DATA          G=DGROUP  M=QF_PSINI   ACBP=48
 05F8:073C 0009 C=DATA   S=_DATA          G=DGROUP  M=QF_PSPUB   ACBP=48
 05F8:0746 00C3 C=DATA   S=_DATA          G=DGROUP  M=QF_PWR2    ACBP=48
 05F8:080A 0000 C=DATA   S=_DATA          G=DGROUP  M=QF_TICK    ACBP=48
 05F8:080A 0008 C=DATA   S=_DATA          G=DGROUP  M=QMP_GET    ACBP=48
 05F8:0812 0009 C=DATA   S=_DATA          G=DGROUP  M=QMP_INIT   ACBP=48
 05F8:081C 0008 C=DATA   S=_DATA          G=DGROUP  M=QMP_PUT    ACBP=48
 05F8:0824 0009 C=DATA   S=_DATA          G=DGROUP  M=QTE_CTOR   ACBP=48
 05F8:082E 000C C=DATA   S=_DATA          G=DGROUP  M=QTE_ARM    ACBP=48
 05F8:083A 0000 C=DATA   S=_DATA          G=DGROUP  M=QTE_DARM   ACBP=48
 05F8:083A 0019 C=DATA   S=_DATA          G=DGROUP  M=QVANILLA   ACBP=48
 05F8:0854 0002 C=DATA   S=_DATA          G=DGROUP  M=ATEXIT     ACBP=48
 05F8:0856 0000 C=DATA   S=_DATA          G=DGROUP  M=CLRSCR     ACBP=48
 05F8:0856 000C C=DATA   S=_DATA          G=DGROUP  M=EXIT       ACBP=48
 05F8:0862 0002 C=DATA   S=_DATA          G=DGROUP  M=FBRK       ACBP=48
 05F8:0864 0000 C=DATA   S=_DATA          G=DGROUP  M=FFLUSH     ACBP=48
 05F8:0864 0190 C=DATA   S=_DATA          G=DGROUP  M=FILES      ACBP=48
 05F8:09F4 0028 C=DATA   S=_DATA          G=DGROUP  M=FILES2     ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=FLUSHALL   ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=FSEEK      ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=GPTEXT     ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=MOVETEXT   ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=SCREEN     ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=SCROLL     ACBP=48
 05F8:0A1C 0000 C=DATA   S=_DATA          G=DGROUP  M=SETUPIO    ACBP=48
 05F8:0A1C 0004 C=DATA   S=_DATA          G=DGROUP  M=SETVBUF    ACBP=48
 05F8:0A20 0002 C=DATA   S=_DATA          G=DGROUP  M=STKLEN     ACBP=48
 05F8:0A22 0000 C=DATA   S=_DATA          G=DGROUP  M=TELL       ACBP=48
 05F8:0A22 0000 C=DATA   S=_DATA          G=DGROUP  M=WHEREXY    ACBP=48
 05F8:0A22 0000 C=DATA   S=_DATA          G=DGROUP  M=WRITE      ACBP=48
 05F8:0A22 0000 C=DATA   S=_DATA          G=DGROUP  M=XFFLUSH    ACBP=48
 05F8:0A22 0018 C=DATA   S=_DATA          G=DGROUP  M=CRTINIT    ACBP=48
 05F8:0A3A 0000 C=DATA   S=_DATA          G=DGROUP  M=GETVECT    ACBP=48
 05F8:0A3A 0000 C=DATA   S=_DATA          G=DGROUP  M=INPORT     ACBP=48
 05F8:0A3A 005B C=DATA   S=_DATA          G=DGROUP  M=IOERROR    ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=ISATTY     ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=LSEEK      ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=MEMCPY     ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=MEMSET     ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=MOVMEM     ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=OUTPORT    ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=SETBLOCK   ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=VRAM       ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=WRITEA     ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=DEL        ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=NEW        ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=VDEL       ACBP=48
 05F8:0A96 0000 C=DATA   S=_DATA          G=DGROUP  M=VNEW       ACBP=48
 05F8:0A96 0010 C=DATA   S=_DATA          G=DGROUP  M=SETARGV    ACBP=48
 05F8:0AA6 0000 C=DATA   S=_CVTSEG        G=DGROUP  M=c0.ASM     ACBP=48
 05F8:0AA6 0000 C=DATA   S=_SCNSEG        G=DGROUP  M=c0.ASM     ACBP=48
 05F8:0AA6 0000 C=BSS    S=_BSS           G=DGROUP  M=c0.ASM     ACBP=48
 05F8:0AA6 000C C=BSS    S=_BSS           G=DGROUP  M=BSP.CPP    ACBP=48
 05F8:0AB2 00D6 C=BSS    S=_BSS           G=DGROUP  M=MAIN.CPP   ACBP=48
 05F8:0B88 0001 C=BSS    S=_BSS           G=DGROUP  M=MINE1.CPP  ACBP=48
 05F8:0B8A 0001 C=BSS    S=_BSS           G=DGROUP  M=MINE2.CPP  ACBP=48
 05F8:0B8C 0000 C=BSS    S=_BSS           G=DGROUP  M=MISSILE.CPP ACBP=48
 05F8:0B8C 0000 C=BSS    S=_BSS           G=DGROUP  M=SHIP.CPP   ACBP=48
 05F8:0B8C 0144 C=BSS    S=_BSS           G=DGROUP  M=TUNNEL.CPP ACBP=48
 05F8:0CD0 0000 C=BSS    S=_BSS           G=DGROUP  M=VIDEO.CPP  ACBP=48
 05F8:0CD0 0000 C=BSS    S=_BSS           G=DGROUP  M=QA_FIFO    ACBP=48
 05F8:0CD0 0000 C=BSS    S=_BSS           G=DGROUP  M=QA_GET_    ACBP=48
 05F8:0CD0 0000 C=BSS    S=_BSS           G=DGROUP  M=QA_SUB     ACBP=48
 05F8:0CD0 0000 C=BSS    S=_BSS           G=DGROUP  M=QEQ_INIT   ACBP=48
 05F8:0CD0 0101 C=BSS    S=_BSS           G=DGROUP  M=QF_ACT     ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_GC      ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_LOG2    ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_NEW     ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_POOL    ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_PSINI   ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_PSPUB   ACBP=48
 05F8:0DD2 0000 C=BSS    S=_BSS           G=DGROUP  M=QF_PWR2    ACBP=48
 05F8:0DD2 0001 C=BSS    S=_BSS           G=DGROUP  M=QF_TICK    ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QMP_GET    ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QMP_INIT   ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QMP_PUT    ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QTE_CTOR   ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QTE_ARM    ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QTE_DARM   ACBP=48
 05F8:0DD4 0000 C=BSS    S=_BSS           G=DGROUP  M=QVANILLA   ACBP=48
 05F8:0DD4 0080 C=BSS    S=_BSS           G=DGROUP  M=ATEXIT     ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=SETUPIO    ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=CRTINIT    ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=GETVECT    ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=INPORT     ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=IOERROR    ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=ISATTY     ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=LSEEK      ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=MEMCPY     ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=MEMSET     ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=MOVMEM     ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=OUTPORT    ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=SETBLOCK   ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=VRAM       ACBP=48
 05F8:0E54 0000 C=BSS    S=_BSS           G=DGROUP  M=WRITEA     ACBP=48
 05F8:0E54 0004 C=BSS    S=_BSS           G=DGROUP  M=NEW        ACBP=48
 05F8:0E58 0000 C=ENDBSS S=_BSSEND        G=DGROUP  M=c0.ASM     ACBP=28
 06DE:0000 0080 C=STACK  S=_STACK         G=(none)  M=c0.ASM     ACBP=74

  Address         Publics by Name

 0000:122F       operator delete(void far*)
 0000:126B       operator new(unsigned int)
 01B6:039C       BSP_drawBitmap(const unsigned char far*,unsigned char,unsigned char)
 01B6:03BD       BSP_drawNString(unsigned char,unsigned char,const char far*)
 01B6:0193       BSP_init(int,char far*far*)
 01B6:03E3       BSP_updateScore(unsigned int)
 034A:1022       do_bitmaps_overlap(unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char)
 05F8:01D6       Mine1::
 0221:04EE       Mine1::Mine1()
 0221:054A       Mine1::~Mine1()
 0221:0322 idle  Mine1::exploding(Mine1 far*,const QEvent far*)
 0221:0039 idle  Mine1::initial(Mine1 far*,const QEvent far*)
 0221:0142 idle  Mine1::planted(Mine1 far*,const QEvent far*)
 0221:005E idle  Mine1::unused(Mine1 far*,const QEvent far*)
 0221:00B2 idle  Mine1::used(Mine1 far*,const QEvent far*)
 0221:0006       Mine1_getInst(unsigned char)
 05F8:0220       Mine2::
 027E:0444       Mine2::Mine2()
 027E:04A0       Mine2::~Mine2()
 027E:031C idle  Mine2::exploding(Mine2 far*,const QEvent far*)
 027E:0033 idle  Mine2::initial(Mine2 far*,const QEvent far*)
 027E:013C idle  Mine2::planted(Mine2 far*,const QEvent far*)
 027E:0058 idle  Mine2::unused(Mine2 far*,const QEvent far*)
 027E:00AC idle  Mine2::used(Mine2 far*,const QEvent far*)
 027E:0000       Mine2_getInst(unsigned char)
 0221:044A       MineEvt::MineEvt(unsigned char,unsigned char)
 05F8:0240       Missile::
 02CB:0278       Missile::Missile()
 02CB:032E       Missile::~Missile()
 02CB:002E idle  Missile::armed(Missile far*,const QEvent far*)
 02CB:0176 idle  Missile::exploding(Missile far*,const QEvent far*)
 02CB:0082 idle  Missile::flying(Missile far*,const QEvent far*)
 02CB:0006 idle  Missile::initial(Missile far*,const QEvent far*)
 05F8:0244       QActive::
 02CB:02D4       QActive::QActive(unsigned char(far*)(void far*,const QEvent far*))
 02CB:036E       QActive::~QActive()
 0516:0008       QActive::get_()
 0503:0006       QActive::postFIFO(const QEvent far*)
 05D9:00AF       QActive::start(unsigned char,const QEvent far*far*,unsigned long,void far*,unsigned long,const QEvent far*)
 05D9:0122 idle  QActive::stop()
 0530:0006       QActive::subscribe(unsigned char) const
 04A1:0002 idle  QEP::getVersion()
 053A:0005       QEQueue::init(const QEvent far*far*,unsigned char)
 05F8:0CD0       QF::active_
 053F:0015       QF::add_(QActive far*)
 054F:0001       QF::gc(const QEvent far*)
 058D:0073 idle  QF::getPoolMargin(unsigned char)
 05D9:0007 idle  QF::getPortVersion()
 0516:00D9 idle  QF::getQueueMargin(unsigned char)
 053F:0009 idle  QF::getVersion()
 05D9:0013       QF::init()
 0557:0001       QF::new_(unsigned int,unsigned char)
 01B6:04CB       QF::onCleanup()
 01B6:0541       QF::onIdle()
 01B6:041C       QF::onStartup()
 0562:000C       QF::poolInit(void far*,unsigned long,unsigned int)
 056A:000F       QF::psInit(QSubscrList far*,unsigned char)
 056C:0007       QF::publish(const QEvent far*)
 053F:0089       QF::remove_(const QActive far*)
 05D9:0022       QF::run()
 05D9:0018       QF::stop()
 057D:0007       QF::tick()
 05F8:01DA       QHsm::
 0221:0580       QHsm::QHsm(unsigned char(far*)(void far*,const QEvent far*))
 04A1:000E       QHsm::~QHsm()
 04B8:0009       QHsm::dispatch(const QEvent far*)
 04A1:003A       QHsm::init(const QEvent far*)
 0502:000D       QHsm::top(QHsm far*,const QEvent far*)
 058D:000A       QMPool::get()
 0557:00AE       QMPool::getBlockSize() const
 0599:0003       QMPool::init(void far*,unsigned long,unsigned int)
 05B3:0003       QMPool::put(void far*)
 05D9:014B       QPSet64::findMax() volatile
 0503:00DE       QPSet64::insert(unsigned char) volatile
 0516:0145       QPSet64::remove(unsigned char) volatile
 0503:0122       QPSet8::insert(unsigned char) volatile
 05D9:0134       QPSet8::notEmpty() volatile
 0516:0190       QPSet8::remove(unsigned char) volatile
 05BB:0009       QTimeEvt::QTimeEvt(unsigned char)
 05C5:0009       QTimeEvt::arm_(QActive far*,unsigned int)
 05CF:000F       QTimeEvt::disarm()
 034A:122E       QTimeEvt::postEvery(QActive far*,unsigned int)
 034A:1254       QTimeEvt::postIn(QActive far*,unsigned int)
 0221:049C       ScoreEvt::ScoreEvt(unsigned char,unsigned int)
 0000:1241 idle  set_new_handler(void(far*)())
 05F8:0266       Ship::
 0305:03AD       Ship::Ship()
 0305:0419       Ship::~Ship()
 0305:003D idle  Ship::active(Ship far*,const QEvent far*)
 0305:0288 idle  Ship::exploding(Ship far*,const QEvent far*)
 0305:00D2 idle  Ship::flying(Ship far*,const QEvent far*)
 0305:0004 idle  Ship::initial(Ship far*,const QEvent far*)
 0305:009A idle  Ship::parked(Ship far*,const QEvent far*)
 05F8:03B5       Tunnel::
 034A:0009 idle  Tunnel::Tunnel()
 034A:1279       Tunnel::~Tunnel()
 034A:0226 idle  Tunnel::active(Tunnel far*,const QEvent far*)
 034A:0E5C idle  Tunnel::addImageAt(unsigned char,unsigned char,char)
 034A:0AB6 idle  Tunnel::advance()
 034A:02C8 idle  Tunnel::demo(Tunnel far*,const QEvent far*)
 034A:0E04 idle  Tunnel::dispatchToAllMines(const QEvent far*)
 034A:01D0 idle  Tunnel::final(Tunnel far*,const QEvent far*)
 034A:042C idle  Tunnel::game_over(Tunnel far*,const QEvent far*)
 034A:0119 idle  Tunnel::initial(Tunnel far*,const QEvent far*)
 034A:0F4C idle  Tunnel::isWallHit(unsigned char,unsigned char,unsigned char)
 034A:0C5C idle  Tunnel::plantMine()
 034A:053E idle  Tunnel::playing(Tunnel far*,const QEvent far*)
 034A:0819 idle  Tunnel::screen_saver(Tunnel far*,const QEvent far*)
 034A:0978 idle  Tunnel::screen_saver_1_pixel(Tunnel far*,const QEvent far*)
 034A:0868 idle  Tunnel::screen_saver_n_pixels(Tunnel far*,const QEvent far*)
 0475:002B       Video::clearRect(unsigned char,unsigned char,unsigned char,unsigned char,unsigned char)
 0475:0009       Video::clearScreen(unsigned char)
 0475:018A       Video::drawBitmapAt(unsigned char,unsigned char,const unsigned char far*,unsigned char,unsigned char)
 0475:0281       Video::drawStringAt(unsigned char,unsigned char,const char far*)
 0475:00D9       Video::printNumAt(unsigned char,unsigned char,unsigned char,unsigned long)
 0475:0082       Video::printStrAt(unsigned char,unsigned char,unsigned char,const char far*)
 05F8:0000 idle  DATASEG@
 0000:0206 idle  DGROUP@
 0000:18D6       F_LDIV@
 0000:18E5 idle  F_LMOD@
 0000:18DD       F_LUDIV@
 0000:18ED       F_LUMOD@
 0000:1984       F_LXLSH@
 0000:18BC       F_LXMUL@
 0000:19A5       F_LXURSH@
 0000:19C6 idle  F_PADD@
 0000:19F5 idle  F_PSUB@
 0000:18D6 idle  LDIV@
 0000:18E5 idle  LMOD@
 0000:18DD idle  LUDIV@
 0000:18ED idle  LUMOD@
 0000:1984 idle  LXLSH@
 0000:18BC idle  LXMUL@
 0000:19A5 idle  LXURSH@
 0000:18D3 idle  N_LDIV@
 0000:18E2 idle  N_LMOD@
 0000:18DA idle  N_LUDIV@
 0000:18EA idle  N_LUMOD@
 0000:1981 idle  N_LXLSH@
 0000:19A2 idle  N_LXURSH@
 0000:19C3       N_PADD@
 0000:1A23       N_PCMP@
 0000:19F2 idle  N_PSUB@
 0000:19C6 idle  PADD@
 0000:19F5 idle  PSUB@
 0000:01F0       _abort
 05F8:023C       _AO_Missile
 05F8:0262       _AO_Ship
 05F8:02F0       _AO_Tunnel
 0000:020A idle  _atexit
 0000:0237       _clrscr
 05F8:0A31       _directvideo
 05F8:007D       _errno
 0000:0261       _exit
 0000:15FE idle  _farfree
 0000:16EE idle  _farmalloc
 0000:184E idle  _farrealloc
 0000:03B2       _fflush
 0000:0482       _flushall
 0000:15FE       _free
 0000:0549       _fseek
 0000:05C9 idle  _ftell
 0000:0619       _gettext
 0000:0F8C       _getvect
 0000:0FAC       _inport
 0000:0FB5 idle  _inportb
 0000:0FFD       _isatty
 0000:100E       _lseek
 0212:0003       _main
 0000:16E4       _malloc
 0000:1037       _memcpy
 0000:10F0       _memmove
 0000:107F       _memset
 0000:06A4       _movetext
 0000:109E idle  _movmem
 0000:1111 idle  _outport
 0000:111D       _outportb
 0000:066A       _puttext
 05F8:0598       _QEP_reservedEvt_
 05F8:07C8       _QF_div8Lkup
 05F8:0DD0 idle  _QF_intLockNest_
 05F8:0787       _QF_invPwr2Lkup
 05F8:05E8       _QF_log2Lkup
 05F8:0734       _QF_maxPool_
 05F8:073A       _QF_maxSignal_
 05F8:06F8       _QF_pool_
 05F8:0746       _QF_pwr2Lkup
 05F8:0843       _QF_readySet_
 05F8:0736       _QF_subscrList_
 05F8:0836       _QF_timeEvtListHead_
 01B6:0547       _Q_onAssert
 0000:1847 idle  _realloc
 0000:1129       _setblock
 0000:105B idle  _setmem
 0000:0B06       _setvbuf
 0000:0F9B       _setvect
 0000:0C25       _tell
 0000:0C49 idle  _wherex
 0000:0C58 idle  _wherey
 0000:0C6B       _write
 0000:1000 idle  __AHINCR
 0000:000C idle  __AHSHIFT
 05F8:0A96 idle  __argc
 05F8:0A98 idle  __argv
 05F8:0854       __atexitcnt
 05F8:0DD4       __atexittbl
 0000:0306       __brk
 05F8:0087       __brklvl
 05F8:0069       __C0argc
 05F8:006B       __C0argv
 0000:0E91 idle  __c0crtinit
 05F8:006F idle  __C0environ
 0000:0EB1 idle  __crtinit
 05F8:0A3A idle  __doserrno
 05F8:0A3C idle  __dosErrorToSV
 05F8:0073       __envLng
 05F8:0075       __envseg
 05F8:0077 idle  __envSize
 0000:011A       __exit
 05F8:0856       __exitbuf
 0000:00FA       __exitclean
 05F8:085A       __exitfopen
 05F8:085E       __exitopen
 05F8:0083       __heapbase
 05F8:008B       __heaptop
 05F8:0059 idle  __Int0Vector
 05F8:005D idle  __Int4Vector
 05F8:0061 idle  __Int5Vector
 05F8:0065 idle  __Int6Vector
 0000:0FC0       __IOERROR
 0000:0208 idle  __MMODEL
 05F8:0E54 idle  __new_handler
 05F8:09F4       __openfd
 05F8:007B       __osmajor
 05F8:007C idle  __osminor
 05F8:0079       __psp
 05F8:0AA6 idle  __RealCvtVector
 0000:0178 idle  __restorezero
 0000:0345       __sbrk
 05F8:0AA6 idle  __ScanTodVector
 0000:087E       __SCREENIO
 0000:0921       __SCROLL
 0000:0000  Abs  __setargv__
 0000:0A8D       __setupio
 05F8:007F idle  __StartTime
 05F8:0A20       __stklen
 05F8:0864       __streams
 0000:0000 idle  __turboCrt
 0000:08BB       __VALIDATEXY
 0000:12AD       __vector_delete_
 0000:13C8       __vector_new_
 05F8:007B idle  __version
 05F8:0A22       __video
 0000:0E0D       __VideoInt
 0000:1145       __VPTR
 0000:116B       __VRAM
 0000:0C3F       __wherexy
 0000:11E4       __write
 0000:0D98       __xfflush
 0000:14C0 idle  ___first
 0000:14C2 idle  ___last
 0000:14C4 idle  ___rover

  Address         Publics by Value

 0000:0000  Abs  __setargv__
 0000:0000 idle  __turboCrt
 0000:000C idle  __AHSHIFT
 0000:1000 idle  __AHINCR
 0000:00FA       __exitclean
 0000:011A       __exit
 0000:0178 idle  __restorezero
 0000:01F0       _abort
 0000:0206 idle  DGROUP@
 0000:0208 idle  __MMODEL
 0000:020A idle  _atexit
 0000:0237       _clrscr
 0000:0261       _exit
 0000:0306       __brk
 0000:0345       __sbrk
 0000:03B2       _fflush
 0000:0482       _flushall
 0000:0549       _fseek
 0000:05C9 idle  _ftell
 0000:0619       _gettext
 0000:066A       _puttext
 0000:06A4       _movetext
 0000:087E       __SCREENIO
 0000:08BB       __VALIDATEXY
 0000:0921       __SCROLL
 0000:0A8D       __setupio
 0000:0B06       _setvbuf
 0000:0C25       _tell
 0000:0C3F       __wherexy
 0000:0C49 idle  _wherex
 0000:0C58 idle  _wherey
 0000:0C6B       _write
 0000:0D98       __xfflush
 0000:0E0D       __VideoInt
 0000:0E91 idle  __c0crtinit
 0000:0EB1 idle  __crtinit
 0000:0F8C       _getvect
 0000:0F9B       _setvect
 0000:0FAC       _inport
 0000:0FB5 idle  _inportb
 0000:0FC0       __IOERROR
 0000:0FFD       _isatty
 0000:100E       _lseek
 0000:1037       _memcpy
 0000:105B idle  _setmem
 0000:107F       _memset
 0000:109E idle  _movmem
 0000:10F0       _memmove
 0000:1111 idle  _outport
 0000:111D       _outportb
 0000:1129       _setblock
 0000:1145       __VPTR
 0000:116B       __VRAM
 0000:11E4       __write
 0000:122F       operator delete(void far*)
 0000:1241 idle  set_new_handler(void(far*)())
 0000:126B       operator new(unsigned int)
 0000:12AD       __vector_delete_
 0000:13C8       __vector_new_
 0000:14C0 idle  ___first
 0000:14C2 idle  ___last
 0000:14C4 idle  ___rover
 0000:15FE       _free
 0000:15FE idle  _farfree
 0000:16E4       _malloc
 0000:16EE idle  _farmalloc
 0000:1847 idle  _realloc
 0000:184E idle  _farrealloc
 0000:18BC       F_LXMUL@
 0000:18BC idle  LXMUL@
 0000:18D3 idle  N_LDIV@
 0000:18D6       F_LDIV@
 0000:18D6 idle  LDIV@
 0000:18DA idle  N_LUDIV@
 0000:18DD       F_LUDIV@
 0000:18DD idle  LUDIV@
 0000:18E2 idle  N_LMOD@
 0000:18E5 idle  F_LMOD@
 0000:18E5 idle  LMOD@
 0000:18EA idle  N_LUMOD@
 0000:18ED       F_LUMOD@
 0000:18ED idle  LUMOD@
 0000:1981 idle  N_LXLSH@
 0000:1984       F_LXLSH@
 0000:1984 idle  LXLSH@
 0000:19A2 idle  N_LXURSH@
 0000:19A5       F_LXURSH@
 0000:19A5 idle  LXURSH@
 0000:19C3       N_PADD@
 0000:19C6 idle  F_PADD@
 0000:19C6 idle  PADD@
 0000:19F2 idle  N_PSUB@
 0000:19F5 idle  F_PSUB@
 0000:19F5 idle  PSUB@
 0000:1A23       N_PCMP@
 01B6:0193       BSP_init(int,char far*far*)
 01B6:039C       BSP_drawBitmap(const unsigned char far*,unsigned char,unsigned char)
 01B6:03BD       BSP_drawNString(unsigned char,unsigned char,const char far*)
 01B6:03E3       BSP_updateScore(unsigned int)
 01B6:041C       QF::onStartup()
 01B6:04CB       QF::onCleanup()
 01B6:0541       QF::onIdle()
 01B6:0547       _Q_onAssert
 0212:0003       _main
 0221:0006       Mine1_getInst(unsigned char)
 0221:0039 idle  Mine1::initial(Mine1 far*,const QEvent far*)
 0221:005E idle  Mine1::unused(Mine1 far*,const QEvent far*)
 0221:00B2 idle  Mine1::used(Mine1 far*,const QEvent far*)
 0221:0142 idle  Mine1::planted(Mine1 far*,const QEvent far*)
 0221:0322 idle  Mine1::exploding(Mine1 far*,const QEvent far*)
 0221:044A       MineEvt::MineEvt(unsigned char,unsigned char)
 0221:049C       ScoreEvt::ScoreEvt(unsigned char,unsigned int)
 0221:04EE       Mine1::Mine1()
 0221:054A       Mine1::~Mine1()
 0221:0580       QHsm::QHsm(unsigned char(far*)(void far*,const QEvent far*))
 027E:0000       Mine2_getInst(unsigned char)
 027E:0033 idle  Mine2::initial(Mine2 far*,const QEvent far*)
 027E:0058 idle  Mine2::unused(Mine2 far*,const QEvent far*)
 027E:00AC idle  Mine2::used(Mine2 far*,const QEvent far*)
 027E:013C idle  Mine2::planted(Mine2 far*,const QEvent far*)
 027E:031C idle  Mine2::exploding(Mine2 far*,const QEvent far*)
 027E:0444       Mine2::Mine2()
 027E:04A0       Mine2::~Mine2()
 02CB:0006 idle  Missile::initial(Missile far*,const QEvent far*)
 02CB:002E idle  Missile::armed(Missile far*,const QEvent far*)
 02CB:0082 idle  Missile::flying(Missile far*,const QEvent far*)
 02CB:0176 idle  Missile::exploding(Missile far*,const QEvent far*)
 02CB:0278       Missile::Missile()
 02CB:02D4       QActive::QActive(unsigned char(far*)(void far*,const QEvent far*))
 02CB:032E       Missile::~Missile()
 02CB:036E       QActive::~QActive()
 0305:0004 idle  Ship::initial(Ship far*,const QEvent far*)
 0305:003D idle  Ship::active(Ship far*,const QEvent far*)
 0305:009A idle  Ship::parked(Ship far*,const QEvent far*)
 0305:00D2 idle  Ship::flying(Ship far*,const QEvent far*)
 0305:0288 idle  Ship::exploding(Ship far*,const QEvent far*)
 0305:03AD       Ship::Ship()
 0305:0419       Ship::~Ship()
 034A:0009 idle  Tunnel::Tunnel()
 034A:0119 idle  Tunnel::initial(Tunnel far*,const QEvent far*)
 034A:01D0 idle  Tunnel::final(Tunnel far*,const QEvent far*)
 034A:0226 idle  Tunnel::active(Tunnel far*,const QEvent far*)
 034A:02C8 idle  Tunnel::demo(Tunnel far*,const QEvent far*)
 034A:042C idle  Tunnel::game_over(Tunnel far*,const QEvent far*)
 034A:053E idle  Tunnel::playing(Tunnel far*,const QEvent far*)
 034A:0819 idle  Tunnel::screen_saver(Tunnel far*,const QEvent far*)
 034A:0868 idle  Tunnel::screen_saver_n_pixels(Tunnel far*,const QEvent far*)
 034A:0978 idle  Tunnel::screen_saver_1_pixel(Tunnel far*,const QEvent far*)
 034A:0AB6 idle  Tunnel::advance()
 034A:0C5C idle  Tunnel::plantMine()
 034A:0E04 idle  Tunnel::dispatchToAllMines(const QEvent far*)
 034A:0E5C idle  Tunnel::addImageAt(unsigned char,unsigned char,char)
 034A:0F4C idle  Tunnel::isWallHit(unsigned char,unsigned char,unsigned char)
 034A:1022       do_bitmaps_overlap(unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char)
 034A:122E       QTimeEvt::postEvery(QActive far*,unsigned int)
 034A:1254       QTimeEvt::postIn(QActive far*,unsigned int)
 034A:1279       Tunnel::~Tunnel()
 0475:0009       Video::clearScreen(unsigned char)
 0475:002B       Video::clearRect(unsigned char,unsigned char,unsigned char,unsigned char,unsigned char)
 0475:0082       Video::printStrAt(unsigned char,unsigned char,unsigned char,const char far*)
 0475:00D9       Video::printNumAt(unsigned char,unsigned char,unsigned char,unsigned long)
 0475:018A       Video::drawBitmapAt(unsigned char,unsigned char,const unsigned char far*,unsigned char,unsigned char)
 0475:0281       Video::drawStringAt(unsigned char,unsigned char,const char far*)
 04A1:0002 idle  QEP::getVersion()
 04A1:000E       QHsm::~QHsm()
 04A1:003A       QHsm::init(const QEvent far*)
 04B8:0009       QHsm::dispatch(const QEvent far*)
 0502:000D       QHsm::top(QHsm far*,const QEvent far*)
 0503:0006       QActive::postFIFO(const QEvent far*)
 0503:00DE       QPSet64::insert(unsigned char) volatile
 0503:0122       QPSet8::insert(unsigned char) volatile
 0516:0008       QActive::get_()
 0516:00D9 idle  QF::getQueueMargin(unsigned char)
 0516:0145       QPSet64::remove(unsigned char) volatile
 0516:0190       QPSet8::remove(unsigned char) volatile
 0530:0006       QActive::subscribe(unsigned char) const
 053A:0005       QEQueue::init(const QEvent far*far*,unsigned char)
 053F:0009 idle  QF::getVersion()
 053F:0015       QF::add_(QActive far*)
 053F:0089       QF::remove_(const QActive far*)
 054F:0001       QF::gc(const QEvent far*)
 0557:0001       QF::new_(unsigned int,unsigned char)
 0557:00AE       QMPool::getBlockSize() const
 0562:000C       QF::poolInit(void far*,unsigned long,unsigned int)
 056A:000F       QF::psInit(QSubscrList far*,unsigned char)
 056C:0007       QF::publish(const QEvent far*)
 057D:0007       QF::tick()
 058D:000A       QMPool::get()
 058D:0073 idle  QF::getPoolMargin(unsigned char)
 0599:0003       QMPool::init(void far*,unsigned long,unsigned int)
 05B3:0003       QMPool::put(void far*)
 05BB:0009       QTimeEvt::QTimeEvt(unsigned char)
 05C5:0009       QTimeEvt::arm_(QActive far*,unsigned int)
 05CF:000F       QTimeEvt::disarm()
 05D9:0007 idle  QF::getPortVersion()
 05D9:0013       QF::init()
 05D9:0018       QF::stop()
 05D9:0022       QF::run()
 05D9:00AF       QActive::start(unsigned char,const QEvent far*far*,unsigned long,void far*,unsigned long,const QEvent far*)
 05D9:0122 idle  QActive::stop()
 05D9:0134       QPSet8::notEmpty() volatile
 05D9:014B       QPSet64::findMax() volatile
 05F8:0000 idle  DATASEG@
 05F8:0059 idle  __Int0Vector
 05F8:005D idle  __Int4Vector
 05F8:0061 idle  __Int5Vector
 05F8:0065 idle  __Int6Vector
 05F8:0069       __C0argc
 05F8:006B       __C0argv
 05F8:006F idle  __C0environ
 05F8:0073       __envLng
 05F8:0075       __envseg
 05F8:0077 idle  __envSize
 05F8:0079       __psp
 05F8:007B       __osmajor
 05F8:007B idle  __version
 05F8:007C idle  __osminor
 05F8:007D       _errno
 05F8:007F idle  __StartTime
 05F8:0083       __heapbase
 05F8:0087       __brklvl
 05F8:008B       __heaptop
 05F8:01D6       Mine1::
 05F8:01DA       QHsm::
 05F8:0220       Mine2::
 05F8:023C       _AO_Missile
 05F8:0240       Missile::
 05F8:0244       QActive::
 05F8:0262       _AO_Ship
 05F8:0266       Ship::
 05F8:02F0       _AO_Tunnel
 05F8:03B5       Tunnel::
 05F8:0598       _QEP_reservedEvt_
 05F8:05E8       _QF_log2Lkup
 05F8:06F8       _QF_pool_
 05F8:0734       _QF_maxPool_
 05F8:0736       _QF_subscrList_
 05F8:073A       _QF_maxSignal_
 05F8:0746       _QF_pwr2Lkup
 05F8:0787       _QF_invPwr2Lkup
 05F8:07C8       _QF_div8Lkup
 05F8:0836       _QF_timeEvtListHead_
 05F8:0843       _QF_readySet_
 05F8:0854       __atexitcnt
 05F8:0856       __exitbuf
 05F8:085A       __exitfopen
 05F8:085E       __exitopen
 05F8:0864       __streams
 05F8:09F4       __openfd
 05F8:0A20       __stklen
 05F8:0A22       __video
 05F8:0A31       _directvideo
 05F8:0A3A idle  __doserrno
 05F8:0A3C idle  __dosErrorToSV
 05F8:0A96 idle  __argc
 05F8:0A98 idle  __argv
 05F8:0AA6 idle  __ScanTodVector
 05F8:0AA6 idle  __RealCvtVector
 05F8:0CD0       QF::active_
 05F8:0DD0 idle  _QF_intLockNest_
 05F8:0DD4       __atexittbl
 05F8:0E54 idle  __new_handler

Program entry point at 0000:0000

